Python scikit and pip installed on tools VM

Steps are as below

sudo apt-get install build-essential python-dev python-setuptools \
                     python-numpy python-scipy \
                     libatlas-dev libatlas3gf-base
sudo apt-get install python-matplotlib

   apt-get -y install python-pip
   pip install --user --install-option="--prefix=" -U scikit-learn
pip install wheel
pip install nose

“nosetest –v sklearn “ is executed successfully the test log is attached in this email.



Test log
-------------


root@tools:~/.local/lib/python2.7/site-packages# nosetests -v sklearn
sklearn.cluster.tests.test_affinity_propagation.test_affinity_propagation ... ok
sklearn.cluster.tests.test_affinity_propagation.test_affinity_propagation_predict ... ok
sklearn.cluster.tests.test_affinity_propagation.test_affinity_propagation_predict_error ... ok
sklearn.cluster.tests.test_bicluster.test_get_submatrix ... ok
sklearn.cluster.tests.test_bicluster.test_spectral_coclustering ... ok
sklearn.cluster.tests.test_bicluster.test_spectral_biclustering ... ok
sklearn.cluster.tests.test_bicluster.test_scale_normalize ... ok
sklearn.cluster.tests.test_bicluster.test_bistochastic_normalize ... ok
sklearn.cluster.tests.test_bicluster.test_log_normalize ... ok
sklearn.cluster.tests.test_bicluster.test_fit_best_piecewise ... ok
sklearn.cluster.tests.test_bicluster.test_project_and_cluster ... ok
sklearn.cluster.tests.test_bicluster.test_perfect_checkerboard ... SKIP: This test is failing on the buildbot, but cannot reproduce. Temporarily disabling it until it can be reproduced and  fixed.
sklearn.cluster.tests.test_bicluster.test_errors ... ok
sklearn.cluster.tests.test_birch.test_n_samples_leaves_roots ... ok
sklearn.cluster.tests.test_birch.test_partial_fit ... ok
sklearn.cluster.tests.test_birch.test_birch_predict ... ok
sklearn.cluster.tests.test_birch.test_n_clusters ... ok
sklearn.cluster.tests.test_birch.test_sparse_X ... ok
sklearn.cluster.tests.test_birch.test_branching_factor ... ok
sklearn.cluster.tests.test_birch.test_threshold ... ok
sklearn.cluster.tests.test_dbscan.test_dbscan_similarity ... ok
sklearn.cluster.tests.test_dbscan.test_dbscan_feature ... ok
sklearn.cluster.tests.test_dbscan.test_dbscan_sparse ... ok
sklearn.cluster.tests.test_dbscan.test_dbscan_no_core_samples ... ok
sklearn.cluster.tests.test_dbscan.test_dbscan_callable ... ok
sklearn.cluster.tests.test_dbscan.test_dbscan_balltree ... ok
sklearn.cluster.tests.test_dbscan.test_input_validation ... ok
sklearn.cluster.tests.test_dbscan.test_dbscan_badargs ... ok
sklearn.cluster.tests.test_dbscan.test_pickle ... ok
sklearn.cluster.tests.test_dbscan.test_boundaries ... ok
sklearn.cluster.tests.test_dbscan.test_weighted_dbscan ... ok
sklearn.cluster.tests.test_dbscan.test_dbscan_core_samples_toy ... ok
sklearn.cluster.tests.test_hierarchical.test_linkage_misc ... ok
sklearn.cluster.tests.test_hierarchical.test_structured_linkage_tree ... ok
sklearn.cluster.tests.test_hierarchical.test_unstructured_linkage_tree ... ok
sklearn.cluster.tests.test_hierarchical.test_height_linkage_tree ... ok
sklearn.cluster.tests.test_hierarchical.test_agglomerative_clustering ... ok
sklearn.cluster.tests.test_hierarchical.test_ward_agglomeration ... ok
sklearn.cluster.tests.test_hierarchical.test_scikit_vs_scipy ... ok
sklearn.cluster.tests.test_hierarchical.test_connectivity_propagation ... ok
sklearn.cluster.tests.test_hierarchical.test_ward_tree_children_order ... ok
sklearn.cluster.tests.test_hierarchical.test_ward_linkage_tree_return_distance ... ok
sklearn.cluster.tests.test_hierarchical.test_connectivity_fixing_non_lil ... ok
sklearn.cluster.tests.test_hierarchical.test_int_float_dict ... ok
sklearn.cluster.tests.test_hierarchical.test_connectivity_callable ... ok
sklearn.cluster.tests.test_hierarchical.test_connectivity_ignores_diagonal ... ok
sklearn.cluster.tests.test_hierarchical.test_compute_full_tree ... ok
sklearn.cluster.tests.test_hierarchical.test_n_components ... ok
sklearn.cluster.tests.test_k_means.test_kmeans_dtype ... ok
sklearn.cluster.tests.test_k_means.test_labels_assignment_and_inertia ... ok
sklearn.cluster.tests.test_k_means.test_minibatch_update_consistency ... ok
sklearn.cluster.tests.test_k_means.test_k_means_plus_plus_init ... ok
sklearn.cluster.tests.test_k_means.test_k_means_new_centers ... ok
sklearn.cluster.tests.test_k_means.test_k_means_plus_plus_init_2_jobs ... /usr/lib/python2.7/dist-packages/numpy/distutils/system_info.py:1423: UserWarning:
    Atlas (http://math-atlas.sourceforge.net/) libraries not found.
    Directories to search for the libraries can be specified in the
    numpy/distutils/site.cfg file (section [atlas]) or by setting
    the ATLAS environment variable.
  warnings.warn(AtlasNotFoundError.__doc__)
ok
sklearn.cluster.tests.test_k_means.test_k_means_precompute_distances_flag ... ok
sklearn.cluster.tests.test_k_means.test_k_means_plus_plus_init_sparse ... ok
sklearn.cluster.tests.test_k_means.test_k_means_random_init ... ok
sklearn.cluster.tests.test_k_means.test_k_means_random_init_sparse ... ok
sklearn.cluster.tests.test_k_means.test_k_means_plus_plus_init_not_precomputed ... ok
sklearn.cluster.tests.test_k_means.test_k_means_random_init_not_precomputed ... ok
sklearn.cluster.tests.test_k_means.test_k_means_perfect_init ... ok
sklearn.cluster.tests.test_k_means.test_k_means_n_init ... ok
sklearn.cluster.tests.test_k_means.test_k_means_fortran_aligned_data ... ok
sklearn.cluster.tests.test_k_means.test_mb_k_means_plus_plus_init_dense_array ... ok
sklearn.cluster.tests.test_k_means.test_mb_kmeans_verbose ... ok
sklearn.cluster.tests.test_k_means.test_mb_k_means_plus_plus_init_sparse_matrix ... ok
sklearn.cluster.tests.test_k_means.test_minibatch_init_with_large_k ... ok
sklearn.cluster.tests.test_k_means.test_minibatch_k_means_random_init_dense_array ... ok
sklearn.cluster.tests.test_k_means.test_minibatch_k_means_random_init_sparse_csr ... ok
sklearn.cluster.tests.test_k_means.test_minibatch_k_means_perfect_init_dense_array ... ok
sklearn.cluster.tests.test_k_means.test_minibatch_k_means_init_multiple_runs_with_explicit_centers ... ok
sklearn.cluster.tests.test_k_means.test_minibatch_k_means_perfect_init_sparse_csr ... ok
sklearn.cluster.tests.test_k_means.test_minibatch_sensible_reassign_fit ... ok
sklearn.cluster.tests.test_k_means.test_minibatch_sensible_reassign_partial_fit ... ok
sklearn.cluster.tests.test_k_means.test_minibatch_reassign ... ok
sklearn.cluster.tests.test_k_means.test_minibatch_with_many_reassignments ... ok
sklearn.cluster.tests.test_k_means.test_sparse_mb_k_means_callable_init ... ok
sklearn.cluster.tests.test_k_means.test_mini_batch_k_means_random_init_partial_fit ... ok
sklearn.cluster.tests.test_k_means.test_minibatch_default_init_size ... ok
sklearn.cluster.tests.test_k_means.test_minibatch_tol ... ok
sklearn.cluster.tests.test_k_means.test_minibatch_set_init_size ... ok
sklearn.cluster.tests.test_k_means.test_k_means_invalid_init ... ok
sklearn.cluster.tests.test_k_means.test_mini_match_k_means_invalid_init ... ok
sklearn.cluster.tests.test_k_means.test_k_means_copyx ... ok
sklearn.cluster.tests.test_k_means.test_k_means_non_collapsed ... ok
sklearn.cluster.tests.test_k_means.test_predict ... ok
sklearn.cluster.tests.test_k_means.test_score ... ok
sklearn.cluster.tests.test_k_means.test_predict_minibatch_dense_input ... ok
sklearn.cluster.tests.test_k_means.test_predict_minibatch_kmeanspp_init_sparse_input ... ok
sklearn.cluster.tests.test_k_means.test_predict_minibatch_random_init_sparse_input ... ok
sklearn.cluster.tests.test_k_means.test_input_dtypes ... ok
sklearn.cluster.tests.test_k_means.test_transform ... ok
sklearn.cluster.tests.test_k_means.test_fit_transform ... ok
sklearn.cluster.tests.test_k_means.test_n_init ... ok
sklearn.cluster.tests.test_k_means.test_k_means_function ... ok
sklearn.cluster.tests.test_mean_shift.test_estimate_bandwidth ... ok
sklearn.cluster.tests.test_mean_shift.test_mean_shift ... ok
sklearn.cluster.tests.test_mean_shift.test_meanshift_predict ... ok
sklearn.cluster.tests.test_mean_shift.test_meanshift_all_orphans ... ok
sklearn.cluster.tests.test_mean_shift.test_unfitted ... ok
sklearn.cluster.tests.test_mean_shift.test_bin_seeds ... ok
sklearn.cluster.tests.test_spectral.test_spectral_clustering ... ok
sklearn.cluster.tests.test_spectral.test_spectral_amg_mode ... ok
sklearn.cluster.tests.test_spectral.test_spectral_unknown_mode ... ok
sklearn.cluster.tests.test_spectral.test_spectral_unknown_assign_labels ... ok
sklearn.cluster.tests.test_spectral.test_spectral_clustering_sparse ... ok
sklearn.cluster.tests.test_spectral.test_affinities ... ok
sklearn.cluster.tests.test_spectral.test_discretize ... ok
sklearn.covariance.tests.test_covariance.test_covariance ... ok
sklearn.covariance.tests.test_covariance.test_shrunk_covariance ... ok
sklearn.covariance.tests.test_covariance.test_ledoit_wolf ... ok
sklearn.covariance.tests.test_covariance.test_ledoit_wolf_large ... ok
sklearn.covariance.tests.test_covariance.test_oas ... ok
sklearn.covariance.tests.test_graph_lasso.test_graph_lasso ... ok
sklearn.covariance.tests.test_graph_lasso.test_graph_lasso_cv ... /root/.local/l                                                               21: RuntimeWarning: invalid value encountered in multiply
  * coefs)
/root/.local/lib/python2.7/site-packages/sklearn/covariance/graph_lasso_.py:223:
  * coefs)
ok
sklearn.covariance.tests.test_robust_covariance.test_mcd ... ok
sklearn.covariance.tests.test_robust_covariance.test_mcd_issue1127 ... ok
sklearn.covariance.tests.test_robust_covariance.test_outlier_detection ... ok
sklearn.datasets.tests.test_20news.test_20news ... SKIP: Download 20 newsgroups to run this test
sklearn.datasets.tests.test_20news.test_20news_vectorized ... SKIP: Test too slow.
sklearn.datasets.tests.test_base.test_data_home ... ok
sklearn.datasets.tests.test_base.test_default_empty_load_files ... ok
sklearn.datasets.tests.test_base.test_default_load_files ... ok
sklearn.datasets.tests.test_base.test_load_files_w_categories_desc_and_encoding ... ok
sklearn.datasets.tests.test_base.test_load_files_wo_load_content ... ok
sklearn.datasets.tests.test_base.test_load_sample_images ... ok
sklearn.datasets.tests.test_base.test_load_digits ... ok
sklearn.datasets.tests.test_base.test_load_digits_n_class_lt_10 ... ok
sklearn.datasets.tests.test_base.test_load_sample_image ... ok
sklearn.datasets.tests.test_base.test_load_missing_sample_image_error ... ok
sklearn.datasets.tests.test_base.test_load_diabetes ... ok
sklearn.datasets.tests.test_base.test_load_linnerud ... ok
sklearn.datasets.tests.test_base.test_load_iris ... ok
sklearn.datasets.tests.test_base.test_load_boston ... ok
sklearn.datasets.tests.test_covtype.test_fetch ... SKIP: Covertype dataset can not be loaded.
sklearn.datasets.tests.test_lfw.test_load_empty_lfw_people ... ok
sklearn.datasets.tests.test_lfw.test_load_fake_lfw_people ... ok
sklearn.datasets.tests.test_lfw.test_load_fake_lfw_people_too_restrictive ... ok
sklearn.datasets.tests.test_lfw.test_load_empty_lfw_pairs ... ok
sklearn.datasets.tests.test_lfw.test_load_fake_lfw_pairs ... ok
sklearn.datasets.tests.test_mldata.test_mldata_filename ... ok
Test that fetch_mldata is able to download and cache a data set. ... ok
sklearn.datasets.tests.test_mldata.test_fetch_one_column ... ok
sklearn.datasets.tests.test_mldata.test_fetch_multiple_column ... ok
sklearn.datasets.tests.test_samples_generator.test_make_classification ... ok
Test the construction of informative features in make_classification ... ok
sklearn.datasets.tests.test_samples_generator.test_make_multilabel_classification_return_sequences ... ok
sklearn.datasets.tests.test_samples_generator.test_make_multilabel_classification_return_indicator ... ok
sklearn.datasets.tests.test_samples_generator.test_make_hastie_10_2 ... ok
sklearn.datasets.tests.test_samples_generator.test_make_regression ... ok
sklearn.datasets.tests.test_samples_generator.test_make_regression_multitarget ... ok
sklearn.datasets.tests.test_samples_generator.test_make_blobs ... ok
sklearn.datasets.tests.test_samples_generator.test_make_friedman1 ... ok
sklearn.datasets.tests.test_samples_generator.test_make_friedman2 ... ok
sklearn.datasets.tests.test_samples_generator.test_make_friedman3 ... ok
sklearn.datasets.tests.test_samples_generator.test_make_low_rank_matrix ... ok
sklearn.datasets.tests.test_samples_generator.test_make_sparse_coded_signal ... ok
sklearn.datasets.tests.test_samples_generator.test_make_sparse_uncorrelated ... ok
sklearn.datasets.tests.test_samples_generator.test_make_spd_matrix ... ok
sklearn.datasets.tests.test_samples_generator.test_make_swiss_roll ... ok
sklearn.datasets.tests.test_samples_generator.test_make_s_curve ... ok
sklearn.datasets.tests.test_samples_generator.test_make_biclusters ... ok
sklearn.datasets.tests.test_samples_generator.test_make_checkerboard ... ok
sklearn.datasets.tests.test_svmlight_format.test_load_svmlight_file ... ok
sklearn.datasets.tests.test_svmlight_format.test_load_svmlight_file_fd ... ok
sklearn.datasets.tests.test_svmlight_format.test_load_svmlight_file_multilabel ... ok
sklearn.datasets.tests.test_svmlight_format.test_load_svmlight_files ... ok
sklearn.datasets.tests.test_svmlight_format.test_load_svmlight_file_n_features ... ok
sklearn.datasets.tests.test_svmlight_format.test_load_compressed ... ok
sklearn.datasets.tests.test_svmlight_format.test_load_invalid_file ... ok
sklearn.datasets.tests.test_svmlight_format.test_load_invalid_order_file ... ok
sklearn.datasets.tests.test_svmlight_format.test_load_zero_based ... ok
sklearn.datasets.tests.test_svmlight_format.test_load_zero_based_auto ... ok
sklearn.datasets.tests.test_svmlight_format.test_load_with_qid ... ok
sklearn.datasets.tests.test_svmlight_format.test_load_invalid_file2 ... ok
sklearn.datasets.tests.test_svmlight_format.test_not_a_filename ... ok
sklearn.datasets.tests.test_svmlight_format.test_invalid_filename ... ok
sklearn.datasets.tests.test_svmlight_format.test_dump ... ok
sklearn.datasets.tests.test_svmlight_format.test_dump_concise ... ok
sklearn.datasets.tests.test_svmlight_format.test_dump_comment ... ok
sklearn.datasets.tests.test_svmlight_format.test_dump_invalid ... ok
sklearn.datasets.tests.test_svmlight_format.test_dump_query_id ... ok
sklearn.decomposition.tests.test_dict_learning.test_dict_learning_shapes ... ok
sklearn.decomposition.tests.test_dict_learning.test_dict_learning_overcomplete ... ok
sklearn.decomposition.tests.test_dict_learning.test_dict_learning_reconstruction ... ok
sklearn.decomposition.tests.test_dict_learning.test_dict_learning_nonzero_coefs ... ok
sklearn.decomposition.tests.test_dict_learning.test_dict_learning_unknown_fit_algorithm ... ok
sklearn.decomposition.tests.test_dict_learning.test_dict_learning_split ... ok
sklearn.decomposition.tests.test_dict_learning.test_dict_learning_online_shapes ... ok
sklearn.decomposition.tests.test_dict_learning.test_dict_learning_online_verbosity ... ok
sklearn.decomposition.tests.test_dict_learning.test_dict_learning_online_estimator_shapes ... ok
sklearn.decomposition.tests.test_dict_learning.test_dict_learning_online_overcomplete ... ok
sklearn.decomposition.tests.test_dict_learning.test_dict_learning_online_initialization ... ok
sklearn.decomposition.tests.test_dict_learning.test_dict_learning_online_partial_fit ... ok
sklearn.decomposition.tests.test_dict_learning.test_sparse_encode_shapes ... ok
sklearn.decomposition.tests.test_dict_learning.test_sparse_encode_error ... ok
sklearn.decomposition.tests.test_dict_learning.test_sparse_encode_error_default_sparsity ... ok
sklearn.decomposition.tests.test_dict_learning.test_unknown_method ... ok
sklearn.decomposition.tests.test_dict_learning.test_sparse_coder_estimator ... ok
sklearn.decomposition.tests.test_factor_analysis.test_factor_analysis ... ok
sklearn.decomposition.tests.test_fastica.test_gs ... ok
sklearn.decomposition.tests.test_fastica.test_fastica_simple ... ok
sklearn.decomposition.tests.test_fastica.test_fastica_nowhiten ... ok
sklearn.decomposition.tests.test_fastica.test_non_square_fastica ... ok
sklearn.decomposition.tests.test_fastica.test_fit_transform ... ok
sklearn.decomposition.tests.test_fastica.test_inverse_transform ... ok
sklearn.decomposition.tests.test_incremental_pca.test_incremental_pca ... ok
sklearn.decomposition.tests.test_incremental_pca.test_incremental_pca_check_projection ... ok
sklearn.decomposition.tests.test_incremental_pca.test_incremental_pca_inverse ... ok
sklearn.decomposition.tests.test_incremental_pca.test_incremental_pca_validation ... ok
sklearn.decomposition.tests.test_incremental_pca.test_incremental_pca_set_params ... ok
sklearn.decomposition.tests.test_incremental_pca.test_incremental_pca_num_features_change ... ok
sklearn.decomposition.tests.test_incremental_pca.test_incremental_pca_batch_signs ... ok
sklearn.decomposition.tests.test_incremental_pca.test_incremental_pca_batch_values ... ok
sklearn.decomposition.tests.test_incremental_pca.test_incremental_pca_partial_fit ... ok
sklearn.decomposition.tests.test_incremental_pca.test_incremental_pca_against_pca_iris ... ok
sklearn.decomposition.tests.test_incremental_pca.test_incremental_pca_against_pca_random_data ... ok
sklearn.decomposition.tests.test_incremental_pca.test_explained_variances ... ok
sklearn.decomposition.tests.test_incremental_pca.test_whitening ... ok
sklearn.decomposition.tests.test_kernel_pca.test_kernel_pca ... ok
sklearn.decomposition.tests.test_kernel_pca.test_invalid_parameters ... ok
sklearn.decomposition.tests.test_kernel_pca.test_kernel_pca_sparse ... ok
sklearn.decomposition.tests.test_kernel_pca.test_kernel_pca_linear_kernel ... ok
sklearn.decomposition.tests.test_kernel_pca.test_kernel_pca_n_components ... ok
sklearn.decomposition.tests.test_kernel_pca.test_remove_zero_eig ... ok
sklearn.decomposition.tests.test_kernel_pca.test_kernel_pca_precomputed ... ok
sklearn.decomposition.tests.test_kernel_pca.test_kernel_pca_invalid_kernel ... ok
sklearn.decomposition.tests.test_kernel_pca.test_gridsearch_pipeline ... ok
sklearn.decomposition.tests.test_kernel_pca.test_gridsearch_pipeline_precomputed ... ok
sklearn.decomposition.tests.test_kernel_pca.test_nested_circles ... ok
sklearn.decomposition.tests.test_nmf.test_initialize_nn_input ... ok
sklearn.decomposition.tests.test_nmf.test_initialize_nn_output ... ok
sklearn.decomposition.tests.test_nmf.test_initialize_close ... ok
sklearn.decomposition.tests.test_nmf.test_initialize_variants ... ok
sklearn.decomposition.tests.test_nmf.test_projgrad_nmf_fit_nn_input ... ok
sklearn.decomposition.tests.test_nmf.test_projgrad_nmf_fit_nn_output ... ok
sklearn.decomposition.tests.test_nmf.test_projgrad_nmf_fit_close ... ok
sklearn.decomposition.tests.test_nmf.test_nls_nn_output ... /root/.local/lib/python2.7/site-packages/sklearn/utils/extmath.py:105: NonBLASDotWarning: Data must be of same type. Supported types are 32 and 64 bit float. Falling back to np.dot.
  'Falling back to np.dot.', NonBLASDotWarning)
ok
sklearn.decomposition.tests.test_nmf.test_nls_close ... ok
sklearn.decomposition.tests.test_nmf.test_projgrad_nmf_transform ... ok
sklearn.decomposition.tests.test_nmf.test_n_components_greater_n_features ... ok
sklearn.decomposition.tests.test_nmf.test_projgrad_nmf_sparseness ... ok
sklearn.decomposition.tests.test_nmf.test_sparse_input ... ok
sklearn.decomposition.tests.test_nmf.test_sparse_transform ... ok
sklearn.decomposition.tests.test_pca.test_pca ... ok
sklearn.decomposition.tests.test_pca.test_whitening ... ok
sklearn.decomposition.tests.test_pca.test_explained_variance ... ok
sklearn.decomposition.tests.test_pca.test_pca_check_projection ... ok
sklearn.decomposition.tests.test_pca.test_pca_inverse ... ok
sklearn.decomposition.tests.test_pca.test_pca_validation ... ok
sklearn.decomposition.tests.test_pca.test_randomized_pca_check_projection ... ok
sklearn.decomposition.tests.test_pca.test_randomized_pca_check_list ... ok
sklearn.decomposition.tests.test_pca.test_randomized_pca_inverse ... ok
sklearn.decomposition.tests.test_pca.test_pca_dim ... ok
sklearn.decomposition.tests.test_pca.test_infer_dim_1 ... ok
sklearn.decomposition.tests.test_pca.test_infer_dim_2 ... ok
sklearn.decomposition.tests.test_pca.test_infer_dim_3 ... ok
sklearn.decomposition.tests.test_pca.test_infer_dim_by_explained_variance ... ok
sklearn.decomposition.tests.test_pca.test_pca_score ... ok
sklearn.decomposition.tests.test_pca.test_pca_score2 ... ok
sklearn.decomposition.tests.test_pca.test_pca_score3 ... ok
sklearn.decomposition.tests.test_sparse_pca.test_correct_shapes ... ok
sklearn.decomposition.tests.test_sparse_pca.test_fit_transform ... /root/.local/lib/python2.7/site-packages/sklearn/linear_model/coordinate_descent.py:444: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations
  ConvergenceWarning)
ok
sklearn.decomposition.tests.test_sparse_pca.test_fit_transform_parallel ... ok
sklearn.decomposition.tests.test_sparse_pca.test_transform_nan ... ok
sklearn.decomposition.tests.test_sparse_pca.test_fit_transform_tall ... ok
sklearn.decomposition.tests.test_sparse_pca.test_initialization ... ok
sklearn.decomposition.tests.test_sparse_pca.test_mini_batch_correct_shapes ... ok
sklearn.decomposition.tests.test_sparse_pca.test_mini_batch_fit_transform ... SKIP: skipping mini_batch_fit_transform.
sklearn.decomposition.tests.test_truncated_svd.test_algorithms ... ok
sklearn.decomposition.tests.test_truncated_svd.test_attributes ... ok
sklearn.decomposition.tests.test_truncated_svd.test_too_many_components ... ok
sklearn.decomposition.tests.test_truncated_svd.test_sparse_formats ... ok
sklearn.decomposition.tests.test_truncated_svd.test_inverse_transform ... ok
sklearn.decomposition.tests.test_truncated_svd.test_integers ... ok
sklearn.decomposition.tests.test_truncated_svd.test_explained_variance ... ok
sklearn.ensemble.tests.test_bagging.test_classification ... ok
sklearn.ensemble.tests.test_bagging.test_sparse_classification ... ok
sklearn.ensemble.tests.test_bagging.test_regression ... ok
sklearn.ensemble.tests.test_bagging.test_sparse_regression ... ok
sklearn.ensemble.tests.test_bagging.test_bootstrap_samples ... ok
sklearn.ensemble.tests.test_bagging.test_bootstrap_features ... ok
sklearn.ensemble.tests.test_bagging.test_probability ... ok
sklearn.ensemble.tests.test_bagging.test_oob_score_classification ... ok
sklearn.ensemble.tests.test_bagging.test_oob_score_regression ... ok
sklearn.ensemble.tests.test_bagging.test_single_estimator ... ok
sklearn.ensemble.tests.test_bagging.test_error ... ok
sklearn.ensemble.tests.test_bagging.test_parallel_classification ... ok
sklearn.ensemble.tests.test_bagging.test_parallel_regression ... ok
sklearn.ensemble.tests.test_bagging.test_gridsearch ... ok
sklearn.ensemble.tests.test_bagging.test_base_estimator ... ok
sklearn.ensemble.tests.test_bagging.test_bagging_with_pipeline ... ok
sklearn.ensemble.tests.test_base.test_base ... ok
sklearn.ensemble.tests.test_base.test_base_zero_n_estimators ... ok
sklearn.ensemble.tests.test_forest.test_classification_toy('ExtraTreesClassifier',) ... ok
sklearn.ensemble.tests.test_forest.test_classification_toy('RandomForestClassifier',) ... ok
sklearn.ensemble.tests.test_forest.test_iris('ExtraTreesClassifier', 'gini') ... ok
sklearn.ensemble.tests.test_forest.test_iris('ExtraTreesClassifier', 'entropy') ... ok
sklearn.ensemble.tests.test_forest.test_iris('RandomForestClassifier', 'gini') ... ok
sklearn.ensemble.tests.test_forest.test_iris('RandomForestClassifier', 'entropy') ... ok
sklearn.ensemble.tests.test_forest.test_boston('ExtraTreesRegressor', 'mse') ... ok
sklearn.ensemble.tests.test_forest.test_boston('RandomForestRegressor', 'mse') ... ok
sklearn.ensemble.tests.test_forest.test_regressor_attributes('ExtraTreesRegressor',) ... ok
sklearn.ensemble.tests.test_forest.test_regressor_attributes('RandomForestRegressor',) ... ok
sklearn.ensemble.tests.test_forest.test_probability('ExtraTreesClassifier',) ... ok
sklearn.ensemble.tests.test_forest.test_probability('RandomForestClassifier',) ... ok
sklearn.ensemble.tests.test_forest.test_importances('ExtraTreesClassifier', array([[ 1.48006984, -1.35738004,  0.46249366, ..., -1.28080671, ... ok
sklearn.ensemble.tests.test_forest.test_importances('RandomForestClassifier', array([[ 1.48006984, -1.35738004,  0.46249366, ..., -1.28080671, ... ok
sklearn.ensemble.tests.test_forest.test_unfitted_feature_importances('ExtraTreesRegressor',) ... ok
sklearn.ensemble.tests.test_forest.test_unfitted_feature_importances('RandomForestRegressor',) ... ok
sklearn.ensemble.tests.test_forest.test_unfitted_feature_importances('RandomTreesEmbedding',) ... ok
sklearn.ensemble.tests.test_forest.test_unfitted_feature_importances('ExtraTreesClassifier',) ... ok
sklearn.ensemble.tests.test_forest.test_unfitted_feature_importances('RandomForestClassifier',) ... ok
sklearn.ensemble.tests.test_forest.test_oob_score('ExtraTreesClassifier', array([[ 5.8,  2.8,  5.1,  2.4], ... ok
sklearn.ensemble.tests.test_forest.test_oob_score('ExtraTreesClassifier', array([[ 5.8,  2.8,  5.1,  2.4], ... ok
sklearn.ensemble.tests.test_forest.test_oob_score('RandomForestClassifier', array([[ 5.8,  2.8,  5.1,  2.4], ... ok
sklearn.ensemble.tests.test_forest.test_oob_score('RandomForestClassifier', array([[ 5.8,  2.8,  5.1,  2.4], ... ok
sklearn.ensemble.tests.test_forest.test_oob_score('ExtraTreesRegressor', array([[  3.16360000e+00,   0.00000000e+00,   1.81000000e+01, ..., ... ok
sklearn.ensemble.tests.test_forest.test_oob_score('RandomForestRegressor', array([[  3.16360000e+00,   0.00000000e+00,   1.81000000e+01, ..., ... ok
sklearn.ensemble.tests.test_forest.test_oob_score_raise_error('ExtraTreesRegressor',) ... ok
sklearn.ensemble.tests.test_forest.test_oob_score_raise_error('RandomForestRegressor',) ... ok
sklearn.ensemble.tests.test_forest.test_oob_score_raise_error('RandomTreesEmbedding',) ... ok
sklearn.ensemble.tests.test_forest.test_oob_score_raise_error('ExtraTreesClassifier',) ... ok
sklearn.ensemble.tests.test_forest.test_oob_score_raise_error('RandomForestClassifier',) ... ok
sklearn.ensemble.tests.test_forest.test_gridsearch('ExtraTreesClassifier',) ... ok
sklearn.ensemble.tests.test_forest.test_gridsearch('RandomForestClassifier',) ... ok
sklearn.ensemble.tests.test_forest.test_parallel('ExtraTreesClassifier', array([[ 5.8,  2.8,  5.1,  2.4], ... ok
sklearn.ensemble.tests.test_forest.test_parallel('RandomForestClassifier', array([[ 5.8,  2.8,  5.1,  2.4], ... ok
sklearn.ensemble.tests.test_forest.test_parallel('ExtraTreesRegressor', array([[  3.16360000e+00,   0.00000000e+00,   1.81000000e+01, ..., ... ok
sklearn.ensemble.tests.test_forest.test_parallel('RandomForestRegressor', array([[  3.16360000e+00,   0.00000000e+00,   1.81000000e+01, ..., ... ok
sklearn.ensemble.tests.test_forest.test_pickle('ExtraTreesClassifier', array([[ 5.8,  2.8,  5.1,  2.4], ... ok
sklearn.ensemble.tests.test_forest.test_pickle('RandomForestClassifier', array([[ 5.8,  2.8,  5.1,  2.4], ... ok
sklearn.ensemble.tests.test_forest.test_pickle('ExtraTreesRegressor', array([[  3.16360000e+00,   0.00000000e+00,   1.81000000e+01, ..., ... ok
sklearn.ensemble.tests.test_forest.test_pickle('RandomForestRegressor', array([[  3.16360000e+00,   0.00000000e+00,   1.81000000e+01, ..., ... ok
sklearn.ensemble.tests.test_forest.test_multioutput('ExtraTreesClassifier',) ... ok
sklearn.ensemble.tests.test_forest.test_multioutput('RandomForestClassifier',) ... ok
sklearn.ensemble.tests.test_forest.test_multioutput('ExtraTreesRegressor',) ... ok
sklearn.ensemble.tests.test_forest.test_multioutput('RandomForestRegressor',) ... ok
sklearn.ensemble.tests.test_forest.test_classes_shape('ExtraTreesClassifier',) ... ok
sklearn.ensemble.tests.test_forest.test_classes_shape('RandomForestClassifier',) ... ok
Test that the `sparse_output` parameter of RandomTreesEmbedding ... ok
Test that the `sparse_output` parameter of RandomTreesEmbedding ... ok
sklearn.ensemble.tests.test_forest.test_random_hasher ... ok
sklearn.ensemble.tests.test_forest.test_random_hasher_sparse_data ... ok
sklearn.ensemble.tests.test_forest.test_parallel_train ... ok
sklearn.ensemble.tests.test_forest.test_distribution ... ok
sklearn.ensemble.tests.test_forest.test_max_leaf_nodes_max_depth('ExtraTreesRegressor', array([[  1.62434536e+00,  -6.11756414e-01,  -5.28171752e-01, ... ok
sklearn.ensemble.tests.test_forest.test_max_leaf_nodes_max_depth('RandomForestRegressor', array([[  1.62434536e+00,  -6.11756414e-01,  -5.28171752e-01, ... ok
sklearn.ensemble.tests.test_forest.test_max_leaf_nodes_max_depth('RandomTreesEmbedding', array([[  1.62434536e+00,  -6.11756414e-01,  -5.28171752e-01, ... ok
sklearn.ensemble.tests.test_forest.test_max_leaf_nodes_max_depth('ExtraTreesClassifier', array([[  1.62434536e+00,  -6.11756414e-01,  -5.28171752e-01, ... ok
sklearn.ensemble.tests.test_forest.test_max_leaf_nodes_max_depth('RandomForestClassifier', array([[  1.62434536e+00,  -6.11756414e-01,  -5.28171752e-01, ... ok
sklearn.ensemble.tests.test_forest.test_min_samples_leaf('ExtraTreesRegressor', array([[  1.62434542e+00,  -6.11756384e-01,  -5.28171778e-01, ... ok
sklearn.ensemble.tests.test_forest.test_min_samples_leaf('RandomForestRegressor', array([[  1.62434542e+00,  -6.11756384e-01,  -5.28171778e-01, ... ok
sklearn.ensemble.tests.test_forest.test_min_samples_leaf('RandomTreesEmbedding', array([[  1.62434542e+00,  -6.11756384e-01,  -5.28171778e-01, ... ok
sklearn.ensemble.tests.test_forest.test_min_samples_leaf('ExtraTreesClassifier', array([[  1.62434542e+00,  -6.11756384e-01,  -5.28171778e-01, ... ok
sklearn.ensemble.tests.test_forest.test_min_samples_leaf('RandomForestClassifier', array([[  1.62434542e+00,  -6.11756384e-01,  -5.28171778e-01, ... ok
sklearn.ensemble.tests.test_forest.test_min_weight_fraction_leaf('ExtraTreesRegressor', array([[  1.62434542e+00,  -6.11756384e-01,  -5.28171778e-01, ... ok
sklearn.ensemble.tests.test_forest.test_min_weight_fraction_leaf('RandomForestRegressor', array([[  1.62434542e+00,  -6.11756384e-01,  -5.28171778e-01, ... ok
sklearn.ensemble.tests.test_forest.test_min_weight_fraction_leaf('RandomTreesEmbedding', array([[  1.62434542e+00,  -6.11756384e-01,  -5.28171778e-01, ... ok
sklearn.ensemble.tests.test_forest.test_min_weight_fraction_leaf('ExtraTreesClassifier', array([[  1.62434542e+00,  -6.11756384e-01,  -5.28171778e-01, ... ok
sklearn.ensemble.tests.test_forest.test_min_weight_fraction_leaf('RandomForestClassifier', array([[  1.62434542e+00,  -6.11756384e-01,  -5.28171778e-01, ... ok
sklearn.ensemble.tests.test_forest.test_sparse_input('ExtraTreesRegressor', array([[  3.,   1.,   4.,   0.,   3.,   0.,   7.,   2.,   1.,   0.,   5., ... ok
sklearn.ensemble.tests.test_forest.test_sparse_input('ExtraTreesRegressor', array([[  3.,   1.,   4.,   0.,   3.,   0.,   7.,   2.,   1.,   0.,   5., ... ok
sklearn.ensemble.tests.test_forest.test_sparse_input('ExtraTreesRegressor', array([[  3.,   1.,   4.,   0.,   3.,   0.,   7.,   2.,   1.,   0.,   5., ... ok
sklearn.ensemble.tests.test_forest.test_sparse_input('RandomForestRegressor', array([[  3.,   1.,   4.,   0.,   3.,   0.,   7.,   2.,   1.,   0.,   5., ... ok
sklearn.ensemble.tests.test_forest.test_sparse_input('RandomForestRegressor', array([[  3.,   1.,   4.,   0.,   3.,   0.,   7.,   2.,   1.,   0.,   5., ... ok
sklearn.ensemble.tests.test_forest.test_sparse_input('RandomForestRegressor', array([[  3.,   1.,   4.,   0.,   3.,   0.,   7.,   2.,   1.,   0.,   5., ... ok
sklearn.ensemble.tests.test_forest.test_sparse_input('RandomTreesEmbedding', array([[  3.,   1.,   4.,   0.,   3.,   0.,   7.,   2.,   1.,   0.,   5., ... ok
sklearn.ensemble.tests.test_forest.test_sparse_input('RandomTreesEmbedding', array([[  3.,   1.,   4.,   0.,   3.,   0.,   7.,   2.,   1.,   0.,   5., ... ok
sklearn.ensemble.tests.test_forest.test_sparse_input('RandomTreesEmbedding', array([[  3.,   1.,   4.,   0.,   3.,   0.,   7.,   2.,   1.,   0.,   5., ... ok
sklearn.ensemble.tests.test_forest.test_sparse_input('ExtraTreesClassifier', array([[  3.,   1.,   4.,   0.,   3.,   0.,   7.,   2.,   1.,   0.,   5., ... ok
sklearn.ensemble.tests.test_forest.test_sparse_input('ExtraTreesClassifier', array([[  3.,   1.,   4.,   0.,   3.,   0.,   7.,   2.,   1.,   0.,   5., ... ok
sklearn.ensemble.tests.test_forest.test_sparse_input('ExtraTreesClassifier', array([[  3.,   1.,   4.,   0.,   3.,   0.,   7.,   2.,   1.,   0.,   5., ... ok
sklearn.ensemble.tests.test_forest.test_sparse_input('RandomForestClassifier', array([[  3.,   1.,   4.,   0.,   3.,   0.,   7.,   2.,   1.,   0.,   5., ... ok
sklearn.ensemble.tests.test_forest.test_sparse_input('RandomForestClassifier', array([[  3.,   1.,   4.,   0.,   3.,   0.,   7.,   2.,   1.,   0.,   5., ... ok
sklearn.ensemble.tests.test_forest.test_sparse_input('RandomForestClassifier', array([[  3.,   1.,   4.,   0.,   3.,   0.,   7.,   2.,   1.,   0.,   5., ... ok
sklearn.ensemble.tests.test_forest.test_memory_layout('ExtraTreesClassifier', <type 'numpy.float64'>) ... ok
sklearn.ensemble.tests.test_forest.test_memory_layout('ExtraTreesClassifier', <type 'numpy.float32'>) ... ok
sklearn.ensemble.tests.test_forest.test_memory_layout('RandomForestClassifier', <type 'numpy.float64'>) ... ok
sklearn.ensemble.tests.test_forest.test_memory_layout('RandomForestClassifier', <type 'numpy.float32'>) ... ok
sklearn.ensemble.tests.test_forest.test_memory_layout('ExtraTreesRegressor', <type 'numpy.float64'>) ... ok
sklearn.ensemble.tests.test_forest.test_memory_layout('ExtraTreesRegressor', <type 'numpy.float32'>) ... ok
sklearn.ensemble.tests.test_forest.test_memory_layout('RandomForestRegressor', <type 'numpy.float64'>) ... ok
sklearn.ensemble.tests.test_forest.test_memory_layout('RandomForestRegressor', <type 'numpy.float32'>) ... ok
sklearn.ensemble.tests.test_forest.test_1d_input('ExtraTreesRegressor', array([ 5.8,  6. ,  5.5,  7.3,  5. ,  6.3,  5. ,  6.7,  6.8,  6.1,  6.1, ... ok
sklearn.ensemble.tests.test_forest.test_1d_input('RandomForestRegressor', array([ 5.8,  6. ,  5.5,  7.3,  5. ,  6.3,  5. ,  6.7,  6.8,  6.1,  6.1, ... ok
sklearn.ensemble.tests.test_forest.test_1d_input('RandomTreesEmbedding', array([ 5.8,  6. ,  5.5,  7.3,  5. ,  6.3,  5. ,  6.7,  6.8,  6.1,  6.1, ... ok
sklearn.ensemble.tests.test_forest.test_1d_input('ExtraTreesClassifier', array([ 5.8,  6. ,  5.5,  7.3,  5. ,  6.3,  5. ,  6.7,  6.8,  6.1,  6.1, ... ok
sklearn.ensemble.tests.test_forest.test_1d_input('RandomForestClassifier', array([ 5.8,  6. ,  5.5,  7.3,  5. ,  6.3,  5. ,  6.7,  6.8,  6.1,  6.1, ... ok
sklearn.ensemble.tests.test_forest.test_class_weights('ExtraTreesClassifier',) ... ok
sklearn.ensemble.tests.test_forest.test_class_weights('RandomForestClassifier',) ... ok
sklearn.ensemble.tests.test_forest.test_class_weight_auto_and_bootstrap_multi_output('ExtraTreesClassifier',) ... ok
sklearn.ensemble.tests.test_forest.test_class_weight_auto_and_bootstrap_multi_output('RandomForestClassifier',) ... ok
sklearn.ensemble.tests.test_forest.test_class_weight_errors('ExtraTreesClassifier',) ... ok
sklearn.ensemble.tests.test_forest.test_class_weight_errors('RandomForestClassifier',) ... ok
sklearn.ensemble.tests.test_forest.test_warm_start('ExtraTreesRegressor',) ... ok
sklearn.ensemble.tests.test_forest.test_warm_start('RandomForestRegressor',) ... ok
sklearn.ensemble.tests.test_forest.test_warm_start('RandomTreesEmbedding',) ... ok
sklearn.ensemble.tests.test_forest.test_warm_start('ExtraTreesClassifier',) ... ok
sklearn.ensemble.tests.test_forest.test_warm_start('RandomForestClassifier',) ... ok
sklearn.ensemble.tests.test_forest.test_warm_start_clear('ExtraTreesRegressor',) ... ok
sklearn.ensemble.tests.test_forest.test_warm_start_clear('RandomForestRegressor',) ... ok
sklearn.ensemble.tests.test_forest.test_warm_start_clear('RandomTreesEmbedding',) ... ok
sklearn.ensemble.tests.test_forest.test_warm_start_clear('ExtraTreesClassifier',) ... ok
sklearn.ensemble.tests.test_forest.test_warm_start_clear('RandomForestClassifier',) ... ok
sklearn.ensemble.tests.test_forest.test_warm_start_smaller_n_estimators('ExtraTreesRegressor',) ... ok
sklearn.ensemble.tests.test_forest.test_warm_start_smaller_n_estimators('RandomForestRegressor',) ... ok
sklearn.ensemble.tests.test_forest.test_warm_start_smaller_n_estimators('RandomTreesEmbedding',) ... ok
sklearn.ensemble.tests.test_forest.test_warm_start_smaller_n_estimators('ExtraTreesClassifier',) ... ok
sklearn.ensemble.tests.test_forest.test_warm_start_smaller_n_estimators('RandomForestClassifier',) ... ok
sklearn.ensemble.tests.test_forest.test_warm_start_equal_n_estimators('ExtraTreesRegressor',) ... ok
sklearn.ensemble.tests.test_forest.test_warm_start_equal_n_estimators('RandomForestRegressor',) ... ok
sklearn.ensemble.tests.test_forest.test_warm_start_equal_n_estimators('RandomTreesEmbedding',) ... ok
sklearn.ensemble.tests.test_forest.test_warm_start_equal_n_estimators('ExtraTreesClassifier',) ... ok
sklearn.ensemble.tests.test_forest.test_warm_start_equal_n_estimators('RandomForestClassifier',) ... ok
sklearn.ensemble.tests.test_forest.test_warm_start_oob('ExtraTreesClassifier',) ... ok
sklearn.ensemble.tests.test_forest.test_warm_start_oob('RandomForestClassifier',) ... ok
sklearn.ensemble.tests.test_forest.test_warm_start_oob('ExtraTreesRegressor',) ... ok
sklearn.ensemble.tests.test_forest.test_warm_start_oob('RandomForestRegressor',) ... ok
sklearn.ensemble.tests.test_gradient_boosting.test_classification_toy ... ok
sklearn.ensemble.tests.test_gradient_boosting.test_parameter_checks ... ok
sklearn.ensemble.tests.test_gradient_boosting.test_loss_function ... ok
sklearn.ensemble.tests.test_gradient_boosting.test_classification_synthetic ... ok
sklearn.ensemble.tests.test_gradient_boosting.test_boston ... ok
sklearn.ensemble.tests.test_gradient_boosting.test_iris ... ok
sklearn.ensemble.tests.test_gradient_boosting.test_regression_synthetic ... ok
sklearn.ensemble.tests.test_gradient_boosting.test_feature_importances ... ok
sklearn.ensemble.tests.test_gradient_boosting.test_probability_log ... ok
sklearn.ensemble.tests.test_gradient_boosting.test_check_inputs ... ok
sklearn.ensemble.tests.test_gradient_boosting.test_check_inputs_predict ... ok
sklearn.ensemble.tests.test_gradient_boosting.test_check_max_features ... ok
sklearn.ensemble.tests.test_gradient_boosting.test_max_feature_regression ... ok
sklearn.ensemble.tests.test_gradient_boosting.test_max_feature_auto ... ok
sklearn.ensemble.tests.test_gradient_boosting.test_staged_predict ... ok
sklearn.ensemble.tests.test_gradient_boosting.test_staged_predict_proba ... ok
sklearn.ensemble.tests.test_gradient_boosting.test_staged_functions_defensive ... ok
sklearn.ensemble.tests.test_gradient_boosting.test_serialization ... ok
sklearn.ensemble.tests.test_gradient_boosting.test_degenerate_targets ... ok
sklearn.ensemble.tests.test_gradient_boosting.test_quantile_loss ... ok
sklearn.ensemble.tests.test_gradient_boosting.test_symbol_labels ... ok
sklearn.ensemble.tests.test_gradient_boosting.test_float_class_labels ... ok
sklearn.ensemble.tests.test_gradient_boosting.test_shape_y ... ok
sklearn.ensemble.tests.test_gradient_boosting.test_mem_layout ... ok
sklearn.ensemble.tests.test_gradient_boosting.test_oob_improvement ... ok
sklearn.ensemble.tests.test_gradient_boosting.test_oob_improvement_raise ... ok
sklearn.ensemble.tests.test_gradient_boosting.test_oob_multilcass_iris ... ok
sklearn.ensemble.tests.test_gradient_boosting.test_verbose_output ... ok
sklearn.ensemble.tests.test_gradient_boosting.test_more_verbose_output ... ok
sklearn.ensemble.tests.test_gradient_boosting.test_warm_start ... ok
sklearn.ensemble.tests.test_gradient_boosting.test_warm_start_n_estimators ... ok
sklearn.ensemble.tests.test_gradient_boosting.test_warm_start_max_depth ... ok
sklearn.ensemble.tests.test_gradient_boosting.test_warm_start_clear ... ok
sklearn.ensemble.tests.test_gradient_boosting.test_warm_start_zero_n_estimators ... ok
sklearn.ensemble.tests.test_gradient_boosting.test_warm_start_smaller_n_estimators ... ok
sklearn.ensemble.tests.test_gradient_boosting.test_warm_start_equal_n_estimators ... ok
sklearn.ensemble.tests.test_gradient_boosting.test_warm_start_oob_switch ... ok
sklearn.ensemble.tests.test_gradient_boosting.test_warm_start_oob ... ok
sklearn.ensemble.tests.test_gradient_boosting.test_monitor_early_stopping ... ok
sklearn.ensemble.tests.test_gradient_boosting.test_complete_classification ... ok
sklearn.ensemble.tests.test_gradient_boosting.test_complete_regression ... ok
sklearn.ensemble.tests.test_gradient_boosting.test_zero_estimator_reg ... ok
sklearn.ensemble.tests.test_gradient_boosting.test_zero_estimator_clf ... ok
sklearn.ensemble.tests.test_gradient_boosting.test_max_leaf_nodes_max_depth ... ok
sklearn.ensemble.tests.test_gradient_boosting.test_warm_start_wo_nestimators_change ... ok
sklearn.ensemble.tests.test_gradient_boosting.test_probability_exponential ... ok
sklearn.ensemble.tests.test_gradient_boosting.test_non_uniform_weights_toy_edge_case_reg ... ok
Regression test for https://github.com/scikit-learn/scikit-learn/issues/4447 ... ok
sklearn.ensemble.tests.test_gradient_boosting.test_non_uniform_weights_toy_edge_case_clf ... ok
sklearn.ensemble.tests.test_gradient_boosting_loss_functions.test_binomial_deviance ... ok
sklearn.ensemble.tests.test_gradient_boosting_loss_functions.test_log_odds_estimator ... ok
sklearn.ensemble.tests.test_gradient_boosting_loss_functions.test_sample_weight_smoke ... ok
sklearn.ensemble.tests.test_gradient_boosting_loss_functions.test_sample_weight_init_estimators ... ok
sklearn.ensemble.tests.test_gradient_boosting_loss_functions.test_weighted_percentile ... ok
sklearn.ensemble.tests.test_gradient_boosting_loss_functions.test_weighted_percentile_equal ... ok
sklearn.ensemble.tests.test_gradient_boosting_loss_functions.test_weighted_percentile_zero_weight ... ok
sklearn.ensemble.tests.test_gradient_boosting_loss_functions.test_sample_weight_deviance ... ok
sklearn.ensemble.tests.test_partial_dependence.test_partial_dependence_classifier ... ok
sklearn.ensemble.tests.test_partial_dependence.test_partial_dependence_multiclass ... ok
sklearn.ensemble.tests.test_partial_dependence.test_partial_dependence_regressor ... ok
sklearn.ensemble.tests.test_partial_dependence.test_partial_dependecy_input ... ok
sklearn.ensemble.tests.test_partial_dependence.test_plot_partial_dependence ... SKIP: Matplotlib not available.
sklearn.ensemble.tests.test_partial_dependence.test_plot_partial_dependence_input ... SKIP: Matplotlib not available.
sklearn.ensemble.tests.test_partial_dependence.test_plot_partial_dependence_multiclass ... SKIP: Matplotlib not available.
sklearn.ensemble.tests.test_weight_boosting.test_classification_toy ... ok
sklearn.ensemble.tests.test_weight_boosting.test_regression_toy ... ok
sklearn.ensemble.tests.test_weight_boosting.test_iris ... ok
sklearn.ensemble.tests.test_weight_boosting.test_boston ... ok
sklearn.ensemble.tests.test_weight_boosting.test_staged_predict ... ok
sklearn.ensemble.tests.test_weight_boosting.test_gridsearch ... ok
sklearn.ensemble.tests.test_weight_boosting.test_pickle ... ok
sklearn.ensemble.tests.test_weight_boosting.test_importances ... ok
sklearn.ensemble.tests.test_weight_boosting.test_error ... ok
sklearn.ensemble.tests.test_weight_boosting.test_base_estimator ... ok
sklearn.ensemble.tests.test_weight_boosting.test_sample_weight_missing ... ok
sklearn.ensemble.tests.test_weight_boosting.test_sparse_classification ... ok
sklearn.ensemble.tests.test_weight_boosting.test_sparse_regression ... ok
sklearn.feature_extraction.tests.test_dict_vectorizer.test_dictvectorizer ... ok
sklearn.feature_extraction.tests.test_dict_vectorizer.test_feature_selection ... ok
sklearn.feature_extraction.tests.test_dict_vectorizer.test_one_of_k ... ok
sklearn.feature_extraction.tests.test_dict_vectorizer.test_unseen_or_no_features ... ok
sklearn.feature_extraction.tests.test_dict_vectorizer.test_deterministic_vocabulary ... ok
sklearn.feature_extraction.tests.test_feature_hasher.test_feature_hasher_dicts ... ok
sklearn.feature_extraction.tests.test_feature_hasher.test_feature_hasher_strings ... ok
sklearn.feature_extraction.tests.test_feature_hasher.test_feature_hasher_pairs ... ok
sklearn.feature_extraction.tests.test_feature_hasher.test_hash_empty_input ... ok
sklearn.feature_extraction.tests.test_feature_hasher.test_hasher_invalid_input ... ok
sklearn.feature_extraction.tests.test_feature_hasher.test_hasher_set_params ... ok
sklearn.feature_extraction.tests.test_feature_hasher.test_hasher_zeros ... ok
sklearn.feature_extraction.tests.test_image.test_img_to_graph ... ok
sklearn.feature_extraction.tests.test_image.test_grid_to_graph ... ok
sklearn.feature_extraction.tests.test_image.test_connect_regions ... ok
sklearn.feature_extraction.tests.test_image.test_connect_regions_with_grid ... ok
sklearn.feature_extraction.tests.test_image.test_extract_patches_all ... ok
sklearn.feature_extraction.tests.test_image.test_extract_patches_all_color ... ok
sklearn.feature_extraction.tests.test_image.test_extract_patches_all_rect ... ok
sklearn.feature_extraction.tests.test_image.test_extract_patches_max_patches ... ok
sklearn.feature_extraction.tests.test_image.test_reconstruct_patches_perfect ... ok
sklearn.feature_extraction.tests.test_image.test_reconstruct_patches_perfect_color ... ok
sklearn.feature_extraction.tests.test_image.test_patch_extractor_fit ... ok
sklearn.feature_extraction.tests.test_image.test_patch_extractor_max_patches ... ok
sklearn.feature_extraction.tests.test_image.test_patch_extractor_max_patches_default ... ok
sklearn.feature_extraction.tests.test_image.test_patch_extractor_all_patches ... ok
sklearn.feature_extraction.tests.test_image.test_patch_extractor_color ... ok
sklearn.feature_extraction.tests.test_image.test_extract_patches_strided ... ok
sklearn.feature_extraction.tests.test_image.test_extract_patches_square ... ok
sklearn.feature_extraction.tests.test_image.test_width_patch ... ok
sklearn.feature_extraction.tests.test_text.test_strip_accents ... ok
sklearn.feature_extraction.tests.test_text.test_to_ascii ... ok
sklearn.feature_extraction.tests.test_text.test_word_analyzer_unigrams ... ok
sklearn.feature_extraction.tests.test_text.test_word_analyzer_unigrams_and_bigrams ... ok
sklearn.feature_extraction.tests.test_text.test_unicode_decode_error ... ok
sklearn.feature_extraction.tests.test_text.test_char_ngram_analyzer ... ok
sklearn.feature_extraction.tests.test_text.test_char_wb_ngram_analyzer ... ok
sklearn.feature_extraction.tests.test_text.test_countvectorizer_custom_vocabulary ... ok
sklearn.feature_extraction.tests.test_text.test_countvectorizer_custom_vocabulary_pipeline ... ok
sklearn.feature_extraction.tests.test_text.test_countvectorizer_custom_vocabulary_repeated_indeces ... ok
sklearn.feature_extraction.tests.test_text.test_countvectorizer_custom_vocabulary_gap_index ... ok
sklearn.feature_extraction.tests.test_text.test_countvectorizer_stop_words ... ok
sklearn.feature_extraction.tests.test_text.test_countvectorizer_empty_vocabulary ... ok
sklearn.feature_extraction.tests.test_text.test_fit_countvectorizer_twice ... ok
sklearn.feature_extraction.tests.test_text.test_tf_idf_smoothing ... ok
sklearn.feature_extraction.tests.test_text.test_tfidf_no_smoothing ... ok
sklearn.feature_extraction.tests.test_text.test_sublinear_tf ... ok
sklearn.feature_extraction.tests.test_text.test_vectorizer ... ok
sklearn.feature_extraction.tests.test_text.test_tfidf_vectorizer_setters ... ok
sklearn.feature_extraction.tests.test_text.test_hashing_vectorizer ... ok
sklearn.feature_extraction.tests.test_text.test_feature_names ... ok
sklearn.feature_extraction.tests.test_text.test_vectorizer_max_features ... ok
sklearn.feature_extraction.tests.test_text.test_count_vectorizer_max_features ... ok
sklearn.feature_extraction.tests.test_text.test_vectorizer_max_df ... ok
sklearn.feature_extraction.tests.test_text.test_vectorizer_min_df ... ok
sklearn.feature_extraction.tests.test_text.test_count_binary_occurrences ... ok
sklearn.feature_extraction.tests.test_text.test_hashed_binary_occurrences ... ok
sklearn.feature_extraction.tests.test_text.test_vectorizer_inverse_transform ... ok
sklearn.feature_extraction.tests.test_text.test_count_vectorizer_pipeline_grid_selection ... ok
sklearn.feature_extraction.tests.test_text.test_vectorizer_pipeline_grid_selection ... ok
sklearn.feature_extraction.tests.test_text.test_vectorizer_pipeline_cross_validation ... ok
sklearn.feature_extraction.tests.test_text.test_vectorizer_unicode ... ok
sklearn.feature_extraction.tests.test_text.test_tfidf_vectorizer_with_fixed_vocabulary ... ok
sklearn.feature_extraction.tests.test_text.test_pickling_vectorizer ... ok
sklearn.feature_extraction.tests.test_text.test_stop_words_removal ... ok
sklearn.feature_extraction.tests.test_text.test_pickling_transformer ... ok
sklearn.feature_extraction.tests.test_text.test_non_unique_vocab ... ok
sklearn.feature_extraction.tests.test_text.test_hashingvectorizer_nan_in_docs ... ok
sklearn.feature_extraction.tests.test_text.test_tfidfvectorizer_binary ... ok
sklearn.feature_extraction.tests.test_text.test_tfidfvectorizer_export_idf ... ok
sklearn.feature_extraction.tests.test_text.test_vectorizer_vocab_clone ... ok
sklearn.feature_selection.tests.test_base.test_transform_dense ... ok
sklearn.feature_selection.tests.test_base.test_transform_sparse ... ok
sklearn.feature_selection.tests.test_base.test_inverse_transform_dense ... ok
sklearn.feature_selection.tests.test_base.test_inverse_transform_sparse ... ok
sklearn.feature_selection.tests.test_base.test_get_support ... ok
sklearn.feature_selection.tests.test_chi2.test_chi2 ... /root/.local/lib/python2.7/site-packages/sklearn/utils/extmath.py:105: NonBLASDotWarning: Data must be of same type. Supported types are 32 and 64 bit float. Falling back to np.dot.
  'Falling back to np.dot.', NonBLASDotWarning)
ok
sklearn.feature_selection.tests.test_chi2.test_chi2_coo ... ok
sklearn.feature_selection.tests.test_chi2.test_chi2_negative ... ok
sklearn.feature_selection.tests.test_chi2.test_chisquare ... ok
sklearn.feature_selection.tests.test_feature_select.test_f_oneway_vs_scipy_stats ... ok
sklearn.feature_selection.tests.test_feature_select.test_f_oneway_ints ... ok
sklearn.feature_selection.tests.test_feature_select.test_f_classif ... ok
sklearn.feature_selection.tests.test_feature_select.test_f_regression ... ok
sklearn.feature_selection.tests.test_feature_select.test_f_regression_input_dtype ... ok
sklearn.feature_selection.tests.test_feature_select.test_f_regression_center ... ok
sklearn.feature_selection.tests.test_feature_select.test_f_classif_multi_class ... ok
sklearn.feature_selection.tests.test_feature_select.test_select_percentile_classif ... ok
sklearn.feature_selection.tests.test_feature_select.test_select_percentile_classif_sparse ... ok
sklearn.feature_selection.tests.test_feature_select.test_select_kbest_classif ... ok
sklearn.feature_selection.tests.test_feature_select.test_select_kbest_all ... ok
sklearn.feature_selection.tests.test_feature_select.test_select_kbest_zero ... ok
sklearn.feature_selection.tests.test_feature_select.test_select_heuristics_classif ... ok
sklearn.feature_selection.tests.test_feature_select.test_select_percentile_regression ... ok
sklearn.feature_selection.tests.test_feature_select.test_select_percentile_regression_full ... ok
sklearn.feature_selection.tests.test_feature_select.test_invalid_percentile ... ok
sklearn.feature_selection.tests.test_feature_select.test_select_kbest_regression ... ok
sklearn.feature_selection.tests.test_feature_select.test_select_heuristics_regression ... ok
sklearn.feature_selection.tests.test_feature_select.test_select_fdr_regression ... ok
sklearn.feature_selection.tests.test_feature_select.test_select_fwe_regression ... ok
sklearn.feature_selection.tests.test_feature_select.test_selectkbest_tiebreaking ... ok
sklearn.feature_selection.tests.test_feature_select.test_selectpercentile_tiebreaking ... ok
sklearn.feature_selection.tests.test_feature_select.test_tied_pvalues ... /root/.local/lib/python2.7/site-packages/sklearn/utils/extmath.py:105: NonBLASDotWarning: Data must be of same type. Supported types are 32 and 64 bit float. Falling back to np.dot.
  'Falling back to np.dot.', NonBLASDotWarning)
ok
sklearn.feature_selection.tests.test_feature_select.test_tied_scores ... ok
sklearn.feature_selection.tests.test_feature_select.test_nans ... ok
sklearn.feature_selection.tests.test_feature_select.test_score_func_error ... ok
sklearn.feature_selection.tests.test_feature_select.test_invalid_k ... ok
sklearn.feature_selection.tests.test_feature_select.test_f_classif_constant_feature ... ok
sklearn.feature_selection.tests.test_feature_select.test_no_feature_selected ... ok
sklearn.feature_selection.tests.test_from_model.test_transform_linear_model ... ok
sklearn.feature_selection.tests.test_from_model.test_invalid_input ... ok
sklearn.feature_selection.tests.test_rfe.test_rfe_set_params ... /root/.local/lib/python2.7/site-packages/sklearn/feature_selection/rfe.py:145: DeprecationWarning: The parameter 'estimator_params' is deprecated as of version 0.16 and will be removed in 0.18. The parameter is no longer necessary because the value is set via the estimator initialisation or set_params function.
  , DeprecationWarning)
ok
sklearn.feature_selection.tests.test_rfe.test_rfe_deprecation_estimator_params ... ok
sklearn.feature_selection.tests.test_rfe.test_rfe ... ok
sklearn.feature_selection.tests.test_rfe.test_rfe_mockclassifier ... ok
sklearn.feature_selection.tests.test_rfe.test_rfecv ... ok
sklearn.feature_selection.tests.test_rfe.test_rfecv_mockclassifier ... ok
sklearn.feature_selection.tests.test_rfe.test_rfe_min_step ... ok
sklearn.feature_selection.tests.test_variance_threshold.test_zero_variance ... ok
sklearn.feature_selection.tests.test_variance_threshold.test_variance_threshold ... ok
sklearn.gaussian_process.tests.test_gaussian_process.test_1d ... ok
sklearn.gaussian_process.tests.test_gaussian_process.test_2d ... ok
sklearn.gaussian_process.tests.test_gaussian_process.test_2d_2d ... ok
sklearn.gaussian_process.tests.test_gaussian_process.test_wrong_number_of_outputs ... ok
sklearn.gaussian_process.tests.test_gaussian_process.test_more_builtin_correlation_models ... ok
sklearn.gaussian_process.tests.test_gaussian_process.test_ordinary_kriging ... ok
sklearn.gaussian_process.tests.test_gaussian_process.test_no_normalize ... ok
sklearn.gaussian_process.tests.test_gaussian_process.test_random_starts ... ok
sklearn.gaussian_process.tests.test_gaussian_process.test_mse_solving ... ok
sklearn.linear_model.tests.test_base.test_linear_regression ... /root/.local/lib/python2.7/site-packages/sklearn/utils/extmath.py:105: NonBLASDotWarning: Data must be of same type. Supported types are 32 and 64 bit float. Falling back to np.dot.
  'Falling back to np.dot.', NonBLASDotWarning)
ok
Test for the n_jobs parameter on the fit method and the constructor ... ok
sklearn.linear_model.tests.test_base.test_fit_intercept ... ok
Test that linear regression also works with sparse data ... ok
Test multiple-outcome linear regressions ... ok
Test multiple-outcome linear regressions with sparse data ... ok
sklearn.linear_model.tests.test_base.test_center_data ... ok
sklearn.linear_model.tests.test_base.test_center_data_multioutput ... ok
sklearn.linear_model.tests.test_base.test_center_data_weighted ... ok
sklearn.linear_model.tests.test_base.test_sparse_center_data ... ok
sklearn.linear_model.tests.test_base.test_csr_sparse_center_data ... ok
sklearn.linear_model.tests.test_bayes.test_bayesian_on_diabetes ... SKIP: XFailed Test
sklearn.linear_model.tests.test_bayes.test_toy_bayesian_ridge_object ... ok
sklearn.linear_model.tests.test_bayes.test_toy_ard_object ... ok
sklearn.linear_model.tests.test_coordinate_descent.test_lasso_zero ... ok
sklearn.linear_model.tests.test_coordinate_descent.test_lasso_toy ... ok
sklearn.linear_model.tests.test_coordinate_descent.test_enet_toy ... ok
sklearn.linear_model.tests.test_coordinate_descent.test_lasso_cv ... ok
sklearn.linear_model.tests.test_coordinate_descent.test_lasso_cv_positive_constraint ... ok
sklearn.linear_model.tests.test_coordinate_descent.test_lasso_path_return_models_vs_new_return_gives_same_coefficients ... ok
sklearn.linear_model.tests.test_coordinate_descent.test_enet_path ... ok
sklearn.linear_model.tests.test_coordinate_descent.test_path_parameters ... ok
sklearn.linear_model.tests.test_coordinate_descent.test_warm_start ... ok
sklearn.linear_model.tests.test_coordinate_descent.test_lasso_alpha_warning ... ok
sklearn.linear_model.tests.test_coordinate_descent.test_lasso_positive_constraint ... ok
sklearn.linear_model.tests.test_coordinate_descent.test_enet_positive_constraint ... ok
sklearn.linear_model.tests.test_coordinate_descent.test_enet_cv_positive_constraint ... ok
sklearn.linear_model.tests.test_coordinate_descent.test_uniform_targets ... ok
sklearn.linear_model.tests.test_coordinate_descent.test_multi_task_lasso_and_enet ... ok
sklearn.linear_model.tests.test_coordinate_descent.test_enet_multitarget ... ok
sklearn.linear_model.tests.test_coordinate_descent.test_multioutput_enetcv_error ... ok
sklearn.linear_model.tests.test_coordinate_descent.test_multitask_enet_and_lasso_cv ... /root/.local/lib/python2.7/site-packages/sklearn/linear_model/coordinate_descent.py:1615: UserWarning: Objective did not converge, you might want to increase the number of iterations
  warnings.warn('Objective did not converge, you might want'
ok
sklearn.linear_model.tests.test_coordinate_descent.test_1d_multioutput_enet_and_multitask_enet_cv ... ok
sklearn.linear_model.tests.test_coordinate_descent.test_1d_multioutput_lasso_and_multitask_lasso_cv ... ok
sklearn.linear_model.tests.test_coordinate_descent.test_sparse_input_dtype_enet_and_lassocv ... ok
sklearn.linear_model.tests.test_coordinate_descent.test_precompute_invalid_argument ... ok
sklearn.linear_model.tests.test_coordinate_descent.test_warm_start_convergence ... ok
sklearn.linear_model.tests.test_coordinate_descent.test_warm_start_convergence_with_regularizer_decrement ... ok
sklearn.linear_model.tests.test_coordinate_descent.test_random_descent ... ok
sklearn.linear_model.tests.test_coordinate_descent.test_deprection_precompute_enet ... ok
sklearn.linear_model.tests.test_coordinate_descent.test_enet_path_positive ... ok
sklearn.linear_model.tests.test_coordinate_descent.test_sparse_dense_descent_paths ... ok
sklearn.linear_model.tests.test_least_angle.test_simple ... ok
sklearn.linear_model.tests.test_least_angle.test_simple_precomputed ... ok
sklearn.linear_model.tests.test_least_angle.test_all_precomputed ... ok
sklearn.linear_model.tests.test_least_angle.test_lars_lstsq ... ok
sklearn.linear_model.tests.test_least_angle.test_lasso_gives_lstsq_solution ... ok
sklearn.linear_model.tests.test_least_angle.test_collinearity ... ok
sklearn.linear_model.tests.test_least_angle.test_no_path ... ok
sklearn.linear_model.tests.test_least_angle.test_no_path_precomputed ... ok
sklearn.linear_model.tests.test_least_angle.test_no_path_all_precomputed ... ok
sklearn.linear_model.tests.test_least_angle.test_singular_matrix ... ok
sklearn.linear_model.tests.test_least_angle.test_rank_deficient_design ... ok
sklearn.linear_model.tests.test_least_angle.test_lasso_lars_vs_lasso_cd ... ok
sklearn.linear_model.tests.test_least_angle.test_lasso_lars_vs_lasso_cd_early_stopping ... ok
sklearn.linear_model.tests.test_least_angle.test_lasso_lars_path_length ... ok
sklearn.linear_model.tests.test_least_angle.test_lasso_lars_vs_lasso_cd_ill_conditioned ... ok
sklearn.linear_model.tests.test_least_angle.test_lasso_lars_vs_lasso_cd_ill_conditioned2 ... /root/.local/lib/python2.7/site-packages/sklearn/linear_model/coordinate_descent.py:444: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations
  ConvergenceWarning)
ok
sklearn.linear_model.tests.test_least_angle.test_lars_add_features ... ok
sklearn.linear_model.tests.test_least_angle.test_lars_n_nonzero_coefs ... ok
sklearn.linear_model.tests.test_least_angle.test_multitarget ... ok
sklearn.linear_model.tests.test_least_angle.test_lars_cv ... ok
sklearn.linear_model.tests.test_least_angle.test_lasso_lars_ic ... ok
sklearn.linear_model.tests.test_least_angle.test_no_warning_for_zero_mse ... ok
sklearn.linear_model.tests.test_logistic.test_predict_2_classes ... /root/.local/lib/python2.7/site-packages/sklearn/utils/extmath.py:105: NonBLASDotWarning: Data must be of same type. Supported types are 32 and 64 bit float. Falling back to np.dot.
  'Falling back to np.dot.', NonBLASDotWarning)
ok
sklearn.linear_model.tests.test_logistic.test_error ... ok
sklearn.linear_model.tests.test_logistic.test_predict_3_classes ... ok
sklearn.linear_model.tests.test_logistic.test_predict_iris ... ok
sklearn.linear_model.tests.test_logistic.test_multinomial_validation ... ok
sklearn.linear_model.tests.test_logistic.test_multinomial_binary ... ok
sklearn.linear_model.tests.test_logistic.test_sparsify ... ok
sklearn.linear_model.tests.test_logistic.test_inconsistent_input ... ok
sklearn.linear_model.tests.test_logistic.test_write_parameters ... ok
sklearn.linear_model.tests.test_logistic.test_nan ... ok
sklearn.linear_model.tests.test_logistic.test_consistency_path ... ok
sklearn.linear_model.tests.test_logistic.test_liblinear_random_state ... ok
sklearn.linear_model.tests.test_logistic.test_logistic_loss_and_grad ... ok
sklearn.linear_model.tests.test_logistic.test_logistic_loss_grad_hess ... ok
sklearn.linear_model.tests.test_logistic.test_logistic_cv ... ok
sklearn.linear_model.tests.test_logistic.test_logistic_cv_sparse ... ok
sklearn.linear_model.tests.test_logistic.test_intercept_logistic_helper ... ok
sklearn.linear_model.tests.test_logistic.test_ovr_multinomial_iris ... ok
sklearn.linear_model.tests.test_logistic.test_logistic_regression_solvers ... ok
sklearn.linear_model.tests.test_logistic.test_logistic_regression_solvers_multiclass ... ok
sklearn.linear_model.tests.test_logistic.test_logistic_regressioncv_class_weights ... ok
sklearn.linear_model.tests.test_logistic.test_logistic_regression_convergence_warnings ... iter  1 act 9.024e+00 pre 8.038e+00 delta 1.275e+00 f 1.386e+01 |g| 1.683e+01 CG   3
iter  2 act 1.035e+00 pre 8.814e-01 delta 1.275e+00 f 4.839e+00 |g| 3.844e+00 CG   3
ok
sklearn.linear_model.tests.test_logistic.test_logistic_regression_multinomial ... ok
sklearn.linear_model.tests.test_logistic.test_multinomial_loss_grad_hess ... ok
sklearn.linear_model.tests.test_logistic.test_liblinear_decision_function_zero ... ok
sklearn.linear_model.tests.test_logistic.test_liblinear_logregcv_sparse ... ok
sklearn.linear_model.tests.test_logistic.test_logreg_intercept_scaling ... ok
sklearn.linear_model.tests.test_logistic.test_logreg_intercept_scaling_zero ... ok
sklearn.linear_model.tests.test_omp.test_correct_shapes ... ok
sklearn.linear_model.tests.test_omp.test_correct_shapes_gram ... ok
sklearn.linear_model.tests.test_omp.test_n_nonzero_coefs ... ok
sklearn.linear_model.tests.test_omp.test_tol ... ok
sklearn.linear_model.tests.test_omp.test_with_without_gram ... ok
sklearn.linear_model.tests.test_omp.test_with_without_gram_tol ... ok
sklearn.linear_model.tests.test_omp.test_unreachable_accuracy ... /root/.local/lib/python2.7/site-packages/sklearn/linear_model/omp.py:383: RuntimeWarning:  Orthogonal matching pursuit ended prematurely due to linear
dependence in the dictionary. The requested precision might not have been met.

  copy_X=copy_X, return_path=return_path)
/root/.local/lib/python2.7/site-packages/sklearn/linear_model/omp.py:372: RuntimeWarning:  Orthogonal matching pursuit ended prematurely due to linear
dependence in the dictionary. The requested precision might not have been met.

  copy_Gram=copy_X, copy_Xy=False, return_path=return_path)
ok
sklearn.linear_model.tests.test_omp.test_bad_input ... ok
sklearn.linear_model.tests.test_omp.test_perfect_signal_recovery ... ok
sklearn.linear_model.tests.test_omp.test_estimator ... ok
sklearn.linear_model.tests.test_omp.test_identical_regressors ... ok
sklearn.linear_model.tests.test_omp.test_swapped_regressors ... ok
sklearn.linear_model.tests.test_omp.test_no_atoms ... ok
sklearn.linear_model.tests.test_omp.test_omp_path ... ok
sklearn.linear_model.tests.test_omp.test_omp_return_path_prop_with_gram ... ok
sklearn.linear_model.tests.test_omp.test_omp_cv ... /root/.local/lib/python2.7/site-packages/sklearn/linear_model/omp.py:383: RuntimeWarning:  Orthogonal matching pursuit ended prematurely due to linear
dependence in the dictionary. The requested precision might not have been met.

  copy_X=copy_X, return_path=return_path)
ok
sklearn.linear_model.tests.test_omp.test_omp_reaches_least_squares ... ok
sklearn.linear_model.tests.test_passive_aggressive.test_classifier_accuracy ... ok
sklearn.linear_model.tests.test_passive_aggressive.test_classifier_partial_fit ... ok
sklearn.linear_model.tests.test_passive_aggressive.test_classifier_refit ... ok
sklearn.linear_model.tests.test_passive_aggressive.test_classifier_correctness ... ok
sklearn.linear_model.tests.test_passive_aggressive.test_classifier_undefined_methods ... ok
sklearn.linear_model.tests.test_passive_aggressive.test_regressor_mse ... ok
sklearn.linear_model.tests.test_passive_aggressive.test_regressor_partial_fit ... ok
sklearn.linear_model.tests.test_passive_aggressive.test_regressor_correctness ... ok
sklearn.linear_model.tests.test_passive_aggressive.test_regressor_undefined_methods ... ok
sklearn.linear_model.tests.test_perceptron.test_perceptron_accuracy ... ok
sklearn.linear_model.tests.test_perceptron.test_perceptron_correctness ... ok
sklearn.linear_model.tests.test_perceptron.test_undefined_methods ... ok
sklearn.linear_model.tests.test_randomized_l1.test_lasso_stability_path ... ok
sklearn.linear_model.tests.test_randomized_l1.test_randomized_lasso ... ok
sklearn.linear_model.tests.test_randomized_l1.test_randomized_logistic ... ok
sklearn.linear_model.tests.test_randomized_l1.test_randomized_logistic_sparse ... ok
sklearn.linear_model.tests.test_ransac.test_ransac_inliers_outliers ... ok
sklearn.linear_model.tests.test_ransac.test_ransac_is_data_valid ... ok
sklearn.linear_model.tests.test_ransac.test_ransac_is_model_valid ... ok
sklearn.linear_model.tests.test_ransac.test_ransac_max_trials ... ok
sklearn.linear_model.tests.test_ransac.test_ransac_stop_n_inliers ... ok
sklearn.linear_model.tests.test_ransac.test_ransac_stop_score ... ok
sklearn.linear_model.tests.test_ransac.test_ransac_score ... /root/.local/lib/python2.7/site-packages/sklearn/utils/extmath.py:105: NonBLASDotWarning: Data must be of same type. Supported types are 32 and 64 bit float. Falling back to np.dot.
  'Falling back to np.dot.', NonBLASDotWarning)
ok
sklearn.linear_model.tests.test_ransac.test_ransac_predict ... ok
sklearn.linear_model.tests.test_ransac.test_ransac_sparse_coo ... ok
sklearn.linear_model.tests.test_ransac.test_ransac_sparse_csr ... ok
sklearn.linear_model.tests.test_ransac.test_ransac_sparse_csc ... ok
sklearn.linear_model.tests.test_ransac.test_ransac_none_estimator ... ok
sklearn.linear_model.tests.test_ransac.test_ransac_min_n_samples ... ok
sklearn.linear_model.tests.test_ransac.test_ransac_multi_dimensional_targets ... ok
sklearn.linear_model.tests.test_ransac.test_ransac_residual_metric ... ok
sklearn.linear_model.tests.test_ransac.test_ransac_default_residual_threshold ... ok
sklearn.linear_model.tests.test_ransac.test_ransac_dynamic_max_trials ... ok
sklearn.linear_model.tests.test_ridge.test_ridge ... ok
sklearn.linear_model.tests.test_ridge.test_primal_dual_relationship ... ok
sklearn.linear_model.tests.test_ridge.test_ridge_singular ... ok
sklearn.linear_model.tests.test_ridge.test_ridge_sample_weights ... ok
sklearn.linear_model.tests.test_ridge.test_ridge_shapes ... ok
sklearn.linear_model.tests.test_ridge.test_ridge_intercept ... ok
sklearn.linear_model.tests.test_ridge.test_toy_ridge_object ... ok
sklearn.linear_model.tests.test_ridge.test_ridge_vs_lstsq ... ok
sklearn.linear_model.tests.test_ridge.test_ridge_individual_penalties ... ok
sklearn.linear_model.tests.test_ridge.test_dense_sparse ... ok
sklearn.linear_model.tests.test_ridge.test_ridge_cv_sparse_svd ... ok
sklearn.linear_model.tests.test_ridge.test_ridge_sparse_svd ... ok
sklearn.linear_model.tests.test_ridge.test_class_weights ... ok
sklearn.linear_model.tests.test_ridge.test_class_weights_cv ... ok
sklearn.linear_model.tests.test_ridge.test_ridgecv_store_cv_values ... ok
sklearn.linear_model.tests.test_ridge.test_raises_value_error_if_sample_weights_greater_than_1d ... ok
sklearn.linear_model.tests.test_ridge.test_sparse_design_with_sample_weights ... ok
sklearn.linear_model.tests.test_ridge.test_raises_value_error_if_solver_not_supported ... ok
sklearn.linear_model.tests.test_ridge.test_sparse_cg_max_iter ... ok
test_argument_coef (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... ok
test_auto_weight (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... ok
test_average_binary_computed_correctly (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... ok
Tests that class_weight passed through fit raises warning. ... ok
test_class_weights (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... ok
test_clone (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... ok
test_equal_class_weight (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... ok
test_fit_then_partial_fit (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... ok
test_input_format (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... ok
test_late_onset_averaging_not_reached (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... ok
test_late_onset_averaging_reached (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... ok
test_multiple_fit (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... ok
test_partial_fit_binary (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... /root/.local/lib/python2.7/site-packages/sklearn/utils/extmath.py:105: NonBLASDotWarning: Data must be of same type. Supported types are 32 and 64 bit float. Falling back to np.dot.
  'Falling back to np.dot.', NonBLASDotWarning)
ok
test_partial_fit_equal_fit_constant (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... ok
test_partial_fit_equal_fit_invscaling (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... ok
test_partial_fit_equal_fit_optimal (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... ok
test_partial_fit_exception (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... ok
test_partial_fit_multiclass (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... ok
test_partial_fit_weight_class_auto (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... ok
test_plain_has_no_average_attr (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... ok
test_provide_coef (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... ok
test_regression_losses (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... ok
test_sample_weights (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... ok
test_set_coef_multiclass (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... ok
test_set_intercept (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... ok
test_set_intercept_binary (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... ok
test_set_intercept_to_intercept (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... ok
test_sgd (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... ok
test_sgd_at_least_two_labels (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... ok
test_sgd_bad_alpha (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... ok
test_sgd_bad_eta0 (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... ok
test_sgd_bad_l1_ratio (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... ok
test_sgd_bad_learning_rate_schedule (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... ok
test_sgd_bad_loss (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... ok
test_sgd_bad_penalty (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... ok
test_sgd_l1 (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... ok
test_sgd_multiclass (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... ok
test_sgd_multiclass_average (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... ok
test_sgd_multiclass_njobs (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... ok
test_sgd_multiclass_with_init_coef (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... ok
test_sgd_n_iter_param (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... ok
test_sgd_proba (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... /root/.local/lib/python2.7/site-packages/sklearn/linear_model/stochastic_gradient.py:841: RuntimeWarning: divide by zero encountered in log
  return np.log(self.predict_proba(X))
ok
test_sgd_shuffle_param (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... ok
test_warm_start_constant (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... ok
test_warm_start_invscaling (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... ok
test_warm_start_multiclass (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... ok
test_warm_start_optimal (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... ok
test_weights_multiplied (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... ok
test_wrong_class_weight_format (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... ok
test_wrong_class_weight_label (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... ok
test_wrong_sample_weights (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... ok
test_average_sparse (sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase) ... ok
test_clone (sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase) ... ok
test_elasticnet_convergence (sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase) ... ok
test_input_format (sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase) ... ok
test_late_onset_averaging_not_reached (sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase) ... ok
test_late_onset_averaging_reached (sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase) ... ok
test_loss_function_epsilon (sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase) ... ok
test_partial_fit (sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase) ... ok
test_partial_fit_equal_fit_constant (sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase) ... ok
test_partial_fit_equal_fit_invscaling (sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase) ... ok
test_partial_fit_equal_fit_optimal (sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase) ... ok
test_plain_has_no_average_attr (sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase) ... ok
test_sgd (sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase) ... ok
test_sgd_averaged_computed_correctly (sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase) ... ok
test_sgd_averaged_partial_fit (sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase) ... ok
test_sgd_bad_loss (sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase) ... ok
test_sgd_bad_penalty (sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase) ... ok
test_sgd_epsilon_insensitive (sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase) ... ok
test_sgd_huber_fit (sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase) ... ok
test_sgd_least_squares_fit (sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase) ... ok
test_warm_start_constant (sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase) ... ok
test_warm_start_invscaling (sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase) ... ok
test_warm_start_optimal (sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase) ... ok
test_argument_coef (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... ok
test_auto_weight (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... ok
test_average_binary_computed_correctly (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... ok
Tests that class_weight passed through fit raises warning. ... ok
test_class_weights (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... ok
test_clone (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... ok
test_equal_class_weight (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... ok
test_fit_then_partial_fit (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... ok
test_input_format (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... ok
test_late_onset_averaging_not_reached (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... ok
test_late_onset_averaging_reached (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... ok
test_multiple_fit (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... ok
test_partial_fit_binary (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... ok
test_partial_fit_equal_fit_constant (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... ok
test_partial_fit_equal_fit_invscaling (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... ok
test_partial_fit_equal_fit_optimal (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... ok
test_partial_fit_exception (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... ok
test_partial_fit_multiclass (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... ok
test_partial_fit_weight_class_auto (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... ok
test_plain_has_no_average_attr (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... ok
test_provide_coef (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... ok
test_regression_losses (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... ok
test_sample_weights (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... ok
test_set_coef_multiclass (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... ok
test_set_intercept (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... ok
test_set_intercept_binary (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... ok
test_set_intercept_to_intercept (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... ok
test_sgd (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... ok
test_sgd_at_least_two_labels (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... ok
test_sgd_bad_alpha (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... ok
test_sgd_bad_eta0 (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... ok
test_sgd_bad_l1_ratio (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... ok
test_sgd_bad_learning_rate_schedule (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... ok
test_sgd_bad_loss (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... ok
test_sgd_bad_penalty (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... ok
test_sgd_l1 (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... ok
test_sgd_multiclass (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... ok
test_sgd_multiclass_average (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... ok
test_sgd_multiclass_njobs (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... ok
test_sgd_multiclass_with_init_coef (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... ok
test_sgd_n_iter_param (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... ok
test_sgd_proba (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... /root/.local/lib/python2.7/site-packages/sklearn/linear_model/stochastic_gradient.py:841: RuntimeWarning: divide by zero encountered in log
  return np.log(self.predict_proba(X))
ok
test_sgd_shuffle_param (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... ok
test_warm_start_constant (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... ok
test_warm_start_invscaling (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... ok
test_warm_start_multiclass (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... ok
test_warm_start_optimal (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... ok
test_weights_multiplied (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... ok
test_wrong_class_weight_format (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... ok
test_wrong_class_weight_label (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... ok
test_wrong_sample_weights (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... ok
test_average_sparse (sklearn.linear_model.tests.test_sgd.SparseSGDRegressorTestCase) ... ok
test_clone (sklearn.linear_model.tests.test_sgd.SparseSGDRegressorTestCase) ... ok
test_elasticnet_convergence (sklearn.linear_model.tests.test_sgd.SparseSGDRegressorTestCase) ... ok
test_input_format (sklearn.linear_model.tests.test_sgd.SparseSGDRegressorTestCase) ... ok
test_late_onset_averaging_not_reached (sklearn.linear_model.tests.test_sgd.SparseSGDRegressorTestCase) ... ok
test_late_onset_averaging_reached (sklearn.linear_model.tests.test_sgd.SparseSGDRegressorTestCase) ... ok
test_loss_function_epsilon (sklearn.linear_model.tests.test_sgd.SparseSGDRegressorTestCase) ... ok
test_partial_fit (sklearn.linear_model.tests.test_sgd.SparseSGDRegressorTestCase) ... ok
test_partial_fit_equal_fit_constant (sklearn.linear_model.tests.test_sgd.SparseSGDRegressorTestCase) ... ok
test_partial_fit_equal_fit_invscaling (sklearn.linear_model.tests.test_sgd.SparseSGDRegressorTestCase) ... ok
test_partial_fit_equal_fit_optimal (sklearn.linear_model.tests.test_sgd.SparseSGDRegressorTestCase) ... ok
test_plain_has_no_average_attr (sklearn.linear_model.tests.test_sgd.SparseSGDRegressorTestCase) ... ok
test_sgd (sklearn.linear_model.tests.test_sgd.SparseSGDRegressorTestCase) ... ok
test_sgd_averaged_computed_correctly (sklearn.linear_model.tests.test_sgd.SparseSGDRegressorTestCase) ... ok
test_sgd_averaged_partial_fit (sklearn.linear_model.tests.test_sgd.SparseSGDRegressorTestCase) ... ok
test_sgd_bad_loss (sklearn.linear_model.tests.test_sgd.SparseSGDRegressorTestCase) ... ok
test_sgd_bad_penalty (sklearn.linear_model.tests.test_sgd.SparseSGDRegressorTestCase) ... ok
test_sgd_epsilon_insensitive (sklearn.linear_model.tests.test_sgd.SparseSGDRegressorTestCase) ... ok
test_sgd_huber_fit (sklearn.linear_model.tests.test_sgd.SparseSGDRegressorTestCase) ... ok
test_sgd_least_squares_fit (sklearn.linear_model.tests.test_sgd.SparseSGDRegressorTestCase) ... ok
test_warm_start_constant (sklearn.linear_model.tests.test_sgd.SparseSGDRegressorTestCase) ... ok
test_warm_start_invscaling (sklearn.linear_model.tests.test_sgd.SparseSGDRegressorTestCase) ... ok
test_warm_start_optimal (sklearn.linear_model.tests.test_sgd.SparseSGDRegressorTestCase) ... ok
sklearn.linear_model.tests.test_sgd.test_l1_ratio ... ok
sklearn.linear_model.tests.test_sgd.test_underflow_or_overlow ... ok
sklearn.linear_model.tests.test_sgd.test_numerical_stability_large_gradient ... ok
sklearn.linear_model.tests.test_sgd.test_large_regularization ... ok
sklearn.linear_model.tests.test_sparse_coordinate_descent.test_sparse_coef ... ok
sklearn.linear_model.tests.test_sparse_coordinate_descent.test_normalize_option ... ok
sklearn.linear_model.tests.test_sparse_coordinate_descent.test_lasso_zero ... /root/.local/lib/python2.7/site-packages/sklearn/utils/extmath.py:105: NonBLASDotWarning: Data must be of same type. Supported types are 32 and 64 bit float. Falling back to np.dot.
  'Falling back to np.dot.', NonBLASDotWarning)
ok
sklearn.linear_model.tests.test_sparse_coordinate_descent.test_enet_toy_list_input ... /root/.local/lib/python2.7/site-packages/sklearn/utils/extmath.py:105: NonBLASDotWarning: Data must be of same type. Supported types are 32 and 64 bit float. Falling back to np.dot.
  'Falling back to np.dot.', NonBLASDotWarning)
ok
sklearn.linear_model.tests.test_sparse_coordinate_descent.test_enet_toy_explicit_sparse_input ... ok
sklearn.linear_model.tests.test_sparse_coordinate_descent.test_sparse_enet_not_as_toy_dataset ... ok
sklearn.linear_model.tests.test_sparse_coordinate_descent.test_sparse_lasso_not_as_toy_dataset ... ok
sklearn.linear_model.tests.test_sparse_coordinate_descent.test_enet_multitarget ... ok
sklearn.linear_model.tests.test_sparse_coordinate_descent.test_path_parameters ... ok
sklearn.linear_model.tests.test_sparse_coordinate_descent.test_same_output_sparse_dense_lasso_and_enet_cv ... ok
sklearn.linear_model.tests.test_theil_sen.test_modweiszfeld_step_1d ... ok
sklearn.linear_model.tests.test_theil_sen.test_modweiszfeld_step_2d ... ok
sklearn.linear_model.tests.test_theil_sen.test_spatial_median_1d ... ok
sklearn.linear_model.tests.test_theil_sen.test_spatial_median_2d ... ok
sklearn.linear_model.tests.test_theil_sen.test_theil_sen_1d ... ok
sklearn.linear_model.tests.test_theil_sen.test_theil_sen_1d_no_intercept ... ok
sklearn.linear_model.tests.test_theil_sen.test_theil_sen_2d ... ok
sklearn.linear_model.tests.test_theil_sen.test_calc_breakdown_point ... ok
sklearn.linear_model.tests.test_theil_sen.test_checksubparams_negative_subpopulation ... ok
sklearn.linear_model.tests.test_theil_sen.test_checksubparams_too_few_subsamples ... ok
sklearn.linear_model.tests.test_theil_sen.test_checksubparams_too_many_subsamples ... ok
sklearn.linear_model.tests.test_theil_sen.test_checksubparams_n_subsamples_if_less_samples_than_features ... ok
sklearn.linear_model.tests.test_theil_sen.test_subpopulation ... ok
sklearn.linear_model.tests.test_theil_sen.test_subsamples ... ok
sklearn.linear_model.tests.test_theil_sen.test_verbosity ... ok
sklearn.linear_model.tests.test_theil_sen.test_theil_sen_parallel ... ok
sklearn.linear_model.tests.test_theil_sen.test_less_samples_than_features ... ok
sklearn.metrics.cluster.tests.test_bicluster.test_jaccard ... ok
sklearn.metrics.cluster.tests.test_bicluster.test_consensus_score ... ok
Different number of biclusters in A and B ... ok
sklearn.metrics.cluster.tests.test_supervised.test_error_messages_on_wrong_input ... ok
sklearn.metrics.cluster.tests.test_supervised.test_perfect_matches ... ok
sklearn.metrics.cluster.tests.test_supervised.test_homogeneous_but_not_complete_labeling ... ok
sklearn.metrics.cluster.tests.test_supervised.test_complete_but_not_homogeneous_labeling ... ok
sklearn.metrics.cluster.tests.test_supervised.test_not_complete_and_not_homogeneous_labeling ... ok
sklearn.metrics.cluster.tests.test_supervised.test_non_consicutive_labels ... ok
Check that adjusted scores are almost zero on random labels ... ok
Compute the Adjusted Mutual Information and test against known values ... ok
sklearn.metrics.cluster.tests.test_supervised.test_entropy ... ok
sklearn.metrics.cluster.tests.test_supervised.test_contingency_matrix ... ok
Check numerical stability when information is exactly zero ... ok
Check relation between v_measure, entropy and mutual information ... ok
Tests the Silhouette Coefficient. ... ok
Assert Silhouette Coefficient != nan when there is 1 sample in a class. ... /usr/lib/python2.7/dist-packages/numpy/core/fromnumeric.py:2374: RuntimeWarning: invalid value encountered in double_scalars
  return mean(axis, dtype, out)
ok
Assert 1 < n_labels < n_samples ... ok
sklearn.metrics.tests.test_classification.test_multilabel_accuracy_score_subset_accuracy ... ok
sklearn.metrics.tests.test_classification.test_precision_recall_f1_score_binary ... ok
sklearn.metrics.tests.test_classification.test_average_precision_score_score_non_binary_class ... ok
sklearn.metrics.tests.test_classification.test_average_precision_score_duplicate_values ... ok
sklearn.metrics.tests.test_classification.test_average_precision_score_tied_values ... ok
sklearn.metrics.tests.test_classification.test_confusion_matrix_binary ... ok
sklearn.metrics.tests.test_classification.test_precision_recall_f1_score_multiclass ... ok
sklearn.metrics.tests.test_classification.test__check_targets ... ok
sklearn.metrics.tests.test_classification.test_matthews_corrcoef_nan ... ok
sklearn.metrics.tests.test_classification.test_multilabel_classification_report ... ok
sklearn.metrics.tests.test_classification.test_precision_recall_f1_score_multilabel_1 ... ok
sklearn.metrics.tests.test_classification.test_precision_recall_f1_score_multilabel_2 ... ok
sklearn.metrics.tests.test_classification.test_precision_recall_f1_score_with_an_empty_prediction ... ok
sklearn.metrics.tests.test_classification.test_precision_recall_f_binary_single_class ... ok
sklearn.metrics.tests.test_classification.test_precision_recall_fscore_support_errors ... ok
sklearn.metrics.tests.test_classification.test_precision_refcall_f1_score_multilabel_unordered_labels ... ok
sklearn.metrics.tests.test_classification.test_precision_recall_f1_score_multiclass_pos_label_none ... ok
sklearn.metrics.tests.test_classification.test_zero_precision_recall ... ok
sklearn.metrics.tests.test_classification.test_confusion_matrix_multiclass ... ok
sklearn.metrics.tests.test_classification.test_confusion_matrix_multiclass_subset_labels ... ok
sklearn.metrics.tests.test_classification.test_classification_report_multiclass ... ok
sklearn.metrics.tests.test_classification.test_classification_report_multiclass_with_digits ... ok
sklearn.metrics.tests.test_classification.test_classification_report_multiclass_with_string_label ... ok
sklearn.metrics.tests.test_classification.test_classification_report_multiclass_with_unicode_label ... ok
sklearn.metrics.tests.test_classification.test_multilabel_zero_one_loss_subset ... ok
sklearn.metrics.tests.test_classification.test_multilabel_hamming_loss ... ok
sklearn.metrics.tests.test_classification.test_multilabel_jaccard_similarity_score ... ok
sklearn.metrics.tests.test_classification.test_precision_recall_f1_no_labels ... ok
sklearn.metrics.tests.test_classification.test_prf_warnings ... ok
sklearn.metrics.tests.test_classification.test_recall_warnings ... ok
sklearn.metrics.tests.test_classification.test_precision_warnings ... ok
sklearn.metrics.tests.test_classification.test_fscore_warnings ... ok
sklearn.metrics.tests.test_classification.test_prf_average_compat ... ok
sklearn.metrics.tests.test_classification.test_hinge_loss_binary ... ok
sklearn.metrics.tests.test_classification.test_hinge_loss_multiclass ... ok
sklearn.metrics.tests.test_classification.test_hinge_loss_multiclass_missing_labels_with_labels_none ... ok
sklearn.metrics.tests.test_classification.test_hinge_loss_multiclass_with_missing_labels ... ok
sklearn.metrics.tests.test_classification.test_hinge_loss_multiclass_invariance_lists ... ok
sklearn.metrics.tests.test_classification.test_log_loss ... ok
sklearn.metrics.tests.test_classification.test_brier_score_loss ... ok
sklearn.metrics.tests.test_common.test_format_invariance_with_1d_vectors ... ok
sklearn.metrics.tests.test_common.test_invariance_string_vs_numbers_labels ... ok
sklearn.metrics.tests.test_common.test_multilabel_representation_invariance ... ok
sklearn.metrics.tests.test_common.test_sample_order_invariance ... ok
sklearn.metrics.tests.test_common.test_sample_order_invariance_multilabel_and_multioutput ... ok
sklearn.metrics.tests.test_common.test_symmetry ... ok
sklearn.metrics.tests.test_common.test_single_sample('f1_score',) ... ok
sklearn.metrics.tests.test_common.test_single_sample('precision_score',) ... ok
sklearn.metrics.tests.test_common.test_single_sample('f2_score',) ... ok
sklearn.metrics.tests.test_common.test_single_sample('macro_f2_score',) ... ok
sklearn.metrics.tests.test_common.test_single_sample('weighted_f0.5_score',) ... ok
sklearn.metrics.tests.test_common.test_single_sample('jaccard_similarity_score',) ... ok
sklearn.metrics.tests.test_common.test_single_sample('macro_recall_score',) ... ok
sklearn.metrics.tests.test_common.test_single_sample('unnormalized_accuracy_score',) ... ok
sklearn.metrics.tests.test_common.test_single_sample('macro_f0.5_score',) ... ok
sklearn.metrics.tests.test_common.test_single_sample('explained_variance_score',) ... ok
sklearn.metrics.tests.test_common.test_single_sample('confusion_matrix',) ... ok
sklearn.metrics.tests.test_common.test_single_sample('mean_absolute_error',) ... ok
sklearn.metrics.tests.test_common.test_single_sample('weighted_precision_score',) ... ok
sklearn.metrics.tests.test_common.test_single_sample('micro_f0.5_score',) ... ok
sklearn.metrics.tests.test_common.test_single_sample('mean_squared_error',) ... ok
sklearn.metrics.tests.test_common.test_single_sample('unnormalized_zero_one_loss',) ... ok
sklearn.metrics.tests.test_common.test_single_sample('matthews_corrcoef_score',) ... ok
sklearn.metrics.tests.test_common.test_single_sample('unnormalized_jaccard_similarity_score',) ... ok
sklearn.metrics.tests.test_common.test_single_sample('weighted_recall_score',) ... ok
sklearn.metrics.tests.test_common.test_single_sample('median_absolute_error',) ... ok
sklearn.metrics.tests.test_common.test_single_sample('micro_f1_score',) ... ok
sklearn.metrics.tests.test_common.test_single_sample('weighted_f2_score',) ... ok
sklearn.metrics.tests.test_common.test_single_sample('f0.5_score',) ... ok
sklearn.metrics.tests.test_common.test_single_sample('micro_f2_score',) ... ok
sklearn.metrics.tests.test_common.test_single_sample('r2_score',) ... ok
sklearn.metrics.tests.test_common.test_single_sample('zero_one_loss',) ... ok
sklearn.metrics.tests.test_common.test_single_sample('weighted_f1_score',) ... ok
sklearn.metrics.tests.test_common.test_single_sample('micro_precision_score',) ... ok
sklearn.metrics.tests.test_common.test_single_sample('accuracy_score',) ... ok
sklearn.metrics.tests.test_common.test_single_sample('macro_precision_score',) ... ok
sklearn.metrics.tests.test_common.test_single_sample('recall_score',) ... ok
sklearn.metrics.tests.test_common.test_single_sample('macro_f1_score',) ... ok
sklearn.metrics.tests.test_common.test_single_sample('micro_recall_score',) ... ok
sklearn.metrics.tests.test_common.test_single_sample('hamming_loss',) ... ok
sklearn.metrics.tests.test_common.test_single_sample('mean_absolute_error',) ... ok
sklearn.metrics.tests.test_common.test_single_sample('mean_squared_error',) ... ok
sklearn.metrics.tests.test_common.test_single_sample('r2_score',) ... ok
sklearn.metrics.tests.test_common.test_single_sample('accuracy_score',) ... ok
sklearn.metrics.tests.test_common.test_single_sample('unnormalized_accuracy_score',) ... ok
sklearn.metrics.tests.test_common.test_single_sample('hamming_loss',) ... ok
sklearn.metrics.tests.test_common.test_single_sample('jaccard_similarity_score',) ... ok
sklearn.metrics.tests.test_common.test_single_sample('unnormalized_jaccard_similarity_score',) ... ok
sklearn.metrics.tests.test_common.test_single_sample('zero_one_loss',) ... ok
sklearn.metrics.tests.test_common.test_single_sample('unnormalized_zero_one_loss',) ... ok
sklearn.metrics.tests.test_common.test_single_sample('precision_score',) ... ok
sklearn.metrics.tests.test_common.test_single_sample('recall_score',) ... ok
sklearn.metrics.tests.test_common.test_single_sample('f1_score',) ... ok
sklearn.metrics.tests.test_common.test_single_sample('f2_score',) ... ok
sklearn.metrics.tests.test_common.test_single_sample('f0.5_score',) ... ok
sklearn.metrics.tests.test_common.test_single_sample('weighted_f0.5_score',) ... ok
sklearn.metrics.tests.test_common.test_single_sample('weighted_f1_score',) ... ok
sklearn.metrics.tests.test_common.test_single_sample('weighted_f2_score',) ... ok
sklearn.metrics.tests.test_common.test_single_sample('weighted_precision_score',) ... ok
sklearn.metrics.tests.test_common.test_single_sample('weighted_recall_score',) ... ok
sklearn.metrics.tests.test_common.test_single_sample('micro_f0.5_score',) ... ok
sklearn.metrics.tests.test_common.test_single_sample('micro_f1_score',) ... ok
sklearn.metrics.tests.test_common.test_single_sample('micro_f2_score',) ... ok
sklearn.metrics.tests.test_common.test_single_sample('micro_precision_score',) ... ok
sklearn.metrics.tests.test_common.test_single_sample('micro_recall_score',) ... ok
sklearn.metrics.tests.test_common.test_single_sample('macro_f0.5_score',) ... ok
sklearn.metrics.tests.test_common.test_single_sample('macro_f1_score',) ... ok
sklearn.metrics.tests.test_common.test_single_sample('macro_f2_score',) ... ok
sklearn.metrics.tests.test_common.test_single_sample('macro_precision_score',) ... ok
sklearn.metrics.tests.test_common.test_single_sample('macro_recall_score',) ... ok
sklearn.metrics.tests.test_common.test_single_sample('samples_f0.5_score',) ... ok
sklearn.metrics.tests.test_common.test_single_sample('samples_f1_score',) ... ok
sklearn.metrics.tests.test_common.test_single_sample('samples_f2_score',) ... ok
sklearn.metrics.tests.test_common.test_single_sample('samples_precision_score',) ... ok
sklearn.metrics.tests.test_common.test_single_sample('samples_recall_score',) ... ok
sklearn.metrics.tests.test_common.test_multioutput_number_of_output_differ ... ok
sklearn.metrics.tests.test_common.test_multioutput_regression_invariance_to_dimension_shuffling ... ok
sklearn.metrics.tests.test_common.test_normalize_option_binary_classification ... ok
sklearn.metrics.tests.test_common.test_normalize_option_multiclasss_classification ... ok
sklearn.metrics.tests.test_common.test_normalize_option_multilabel_classification ... ok
sklearn.metrics.tests.test_common.test_averaging_multiclass('precision_score', array([0, 1, 0, 1, 1, 2, 0, 2, 0, 0, 0, 2, 1, 2, 2, 0, 1, 1, 1, 1, 0, 1, 0, ... ok
sklearn.metrics.tests.test_common.test_averaging_multiclass('recall_score', array([0, 1, 0, 1, 1, 2, 0, 2, 0, 0, 0, 2, 1, 2, 2, 0, 1, 1, 1, 1, 0, 1, 0, ... ok
sklearn.metrics.tests.test_common.test_averaging_multiclass('f1_score', array([0, 1, 0, 1, 1, 2, 0, 2, 0, 0, 0, 2, 1, 2, 2, 0, 1, 1, 1, 1, 0, 1, 0, ... ok
sklearn.metrics.tests.test_common.test_averaging_multiclass('f2_score', array([0, 1, 0, 1, 1, 2, 0, 2, 0, 0, 0, 2, 1, 2, 2, 0, 1, 1, 1, 1, 0, 1, 0, ... ok
sklearn.metrics.tests.test_common.test_averaging_multiclass('f0.5_score', array([0, 1, 0, 1, 1, 2, 0, 2, 0, 0, 0, 2, 1, 2, 2, 0, 1, 1, 1, 1, 0, 1, 0, ... ok
sklearn.metrics.tests.test_common.test_averaging_multilabel('precision_score', array([[0, 1, 0, 0, 1], ... ok
sklearn.metrics.tests.test_common.test_averaging_multilabel('recall_score', array([[0, 1, 0, 0, 1], ... ok
sklearn.metrics.tests.test_common.test_averaging_multilabel('f1_score', array([[0, 1, 0, 0, 1], ... ok
sklearn.metrics.tests.test_common.test_averaging_multilabel('f2_score', array([[0, 1, 0, 0, 1], ... ok
sklearn.metrics.tests.test_common.test_averaging_multilabel('f0.5_score', array([[0, 1, 0, 0, 1], ... ok
sklearn.metrics.tests.test_common.test_averaging_multilabel('roc_auc_score', array([[0, 1, 0, 0, 1], ... ok
sklearn.metrics.tests.test_common.test_averaging_multilabel('average_precision_score', array([[0, 1, 0, 0, 1], ... ok
sklearn.metrics.tests.test_common.test_averaging_multilabel_all_zeroes('precision_score', array([[ 0.,  0.,  0.], ... ok
sklearn.metrics.tests.test_common.test_averaging_multilabel_all_zeroes('recall_score', array([[ 0.,  0.,  0.], ... ok
sklearn.metrics.tests.test_common.test_averaging_multilabel_all_zeroes('f1_score', array([[ 0.,  0.,  0.], ... ok
sklearn.metrics.tests.test_common.test_averaging_multilabel_all_zeroes('f2_score', array([[ 0.,  0.,  0.], ... ok
sklearn.metrics.tests.test_common.test_averaging_multilabel_all_zeroes('f0.5_score', array([[ 0.,  0.,  0.], ... ok
sklearn.metrics.tests.test_common.test_averaging_multilabel_all_ones('precision_score', array([[ 1.,  1.,  1.], ... ok
sklearn.metrics.tests.test_common.test_averaging_multilabel_all_ones('recall_score', array([[ 1.,  1.,  1.], ... ok
sklearn.metrics.tests.test_common.test_averaging_multilabel_all_ones('f1_score', array([[ 1.,  1.,  1.], ... ok
sklearn.metrics.tests.test_common.test_averaging_multilabel_all_ones('f2_score', array([[ 1.,  1.,  1.], ... ok
sklearn.metrics.tests.test_common.test_averaging_multilabel_all_ones('f0.5_score', array([[ 1.,  1.,  1.], ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('f1_score', <function f1_score at 0x27b8de8>, array([0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('precision_score', <function precision_score at 0x27bc050>, array([0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('f2_score', <functools.partial object at 0x40e4838>, array([0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('macro_f2_score', <functools.partial object at 0x40e4d08>, array([0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('weighted_f0.5_score', <functools.partial object at 0x40e48e8>, array([0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('jaccard_similarity_score', <function jaccard_similarity_score at 0x27b8c80>, array([0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('macro_recall_score', <functools.partial object at 0x40e4db8>, array([0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('unnormalized_accuracy_score', <functools.partial object at 0x40e4730>, array([0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('macro_f0.5_score', <functools.partial object at 0x40e4c58>, array([0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('explained_variance_score', <function explained_variance_score at 0x27d1c80>, array([0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('mean_absolute_error', <function mean_absolute_error at 0x27d1b18>, array([0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('weighted_precision_score', <functools.partial object at 0x40e49f0>, array([0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('hinge_loss', <function hinge_loss at 0x27bc2a8>, array([0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('micro_f0.5_score', <functools.partial object at 0x40e4aa0>, array([0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('mean_squared_error', <function mean_squared_error at 0x27d1b90>, array([0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('unnormalized_zero_one_loss', <functools.partial object at 0x40e47e0>, array([0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('unnormalized_jaccard_similarity_score', <functools.partial object at 0x40e4788>, array([0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('weighted_recall_score', <functools.partial object at 0x40e4a48>, array([0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('micro_f1_score', <functools.partial object at 0x40e4af8>, array([0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('weighted_f2_score', <functools.partial object at 0x40e4998>, array([0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('f0.5_score', <functools.partial object at 0x40e4890>, array([0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('log_loss', <function log_loss at 0x27bc230>, array([0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('micro_f2_score', <functools.partial object at 0x40e4b50>, array([0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('r2_score', <function r2_score at 0x27d1cf8>, array([0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('unnormalized_log_loss', <functools.partial object at 0x40e4fc8>, array([0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('zero_one_loss', <function zero_one_loss at 0x27b8d70>, array([0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('weighted_f1_score', <functools.partial object at 0x40e4940>, array([0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('micro_precision_score', <functools.partial object at 0x40e4ba8>, array([0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('accuracy_score', <function accuracy_score at 0x27b8410>, array([0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('macro_precision_score', <functools.partial object at 0x40e4d60>, array([0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('recall_score', <function recall_score at 0x27bc0c8>, array([0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('macro_f1_score', <functools.partial object at 0x40e4cb0>, array([0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('micro_recall_score', <functools.partial object at 0x40e4c00>, array([0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('f1_score', <function f1_score at 0x27b8de8>, array([4, 0, 3, 3, 3, 1, 3, 2, 4, 0, 0, 4, 2, 1, 0, 1, 1, 0, 1, 4, 3, 0, 3, ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('precision_score', <function precision_score at 0x27bc050>, array([4, 0, 3, 3, 3, 1, 3, 2, 4, 0, 0, 4, 2, 1, 0, 1, 1, 0, 1, 4, 3, 0, 3, ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('f2_score', <functools.partial object at 0x40e4838>, array([4, 0, 3, 3, 3, 1, 3, 2, 4, 0, 0, 4, 2, 1, 0, 1, 1, 0, 1, 4, 3, 0, 3, ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('macro_f2_score', <functools.partial object at 0x40e4d08>, array([4, 0, 3, 3, 3, 1, 3, 2, 4, 0, 0, 4, 2, 1, 0, 1, 1, 0, 1, 4, 3, 0, 3, ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('weighted_f0.5_score', <functools.partial object at 0x40e48e8>, array([4, 0, 3, 3, 3, 1, 3, 2, 4, 0, 0, 4, 2, 1, 0, 1, 1, 0, 1, 4, 3, 0, 3, ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('jaccard_similarity_score', <function jaccard_similarity_score at 0x27b8c80>, array([4, 0, 3, 3, 3, 1, 3, 2, 4, 0, 0, 4, 2, 1, 0, 1, 1, 0, 1, 4, 3, 0, 3, ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('macro_recall_score', <functools.partial object at 0x40e4db8>, array([4, 0, 3, 3, 3, 1, 3, 2, 4, 0, 0, 4, 2, 1, 0, 1, 1, 0, 1, 4, 3, 0, 3, ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('unnormalized_accuracy_score', <functools.partial object at 0x40e4730>, array([4, 0, 3, 3, 3, 1, 3, 2, 4, 0, 0, 4, 2, 1, 0, 1, 1, 0, 1, 4, 3, 0, 3, ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('macro_f0.5_score', <functools.partial object at 0x40e4c58>, array([4, 0, 3, 3, 3, 1, 3, 2, 4, 0, 0, 4, 2, 1, 0, 1, 1, 0, 1, 4, 3, 0, 3, ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('explained_variance_score', <function explained_variance_score at 0x27d1c80>, array([4, 0, 3, 3, 3, 1, 3, 2, 4, 0, 0, 4, 2, 1, 0, 1, 1, 0, 1, 4, 3, 0, 3, ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('mean_absolute_error', <function mean_absolute_error at 0x27d1b18>, array([4, 0, 3, 3, 3, 1, 3, 2, 4, 0, 0, 4, 2, 1, 0, 1, 1, 0, 1, 4, 3, 0, 3, ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('weighted_precision_score', <functools.partial object at 0x40e49f0>, array([4, 0, 3, 3, 3, 1, 3, 2, 4, 0, 0, 4, 2, 1, 0, 1, 1, 0, 1, 4, 3, 0, 3, ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('hinge_loss', <function hinge_loss at 0x27bc2a8>, array([4, 0, 3, 3, 3, 1, 3, 2, 4, 0, 0, 4, 2, 1, 0, 1, 1, 0, 1, 4, 3, 0, 3, ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('micro_f0.5_score', <functools.partial object at 0x40e4aa0>, array([4, 0, 3, 3, 3, 1, 3, 2, 4, 0, 0, 4, 2, 1, 0, 1, 1, 0, 1, 4, 3, 0, 3, ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('mean_squared_error', <function mean_squared_error at 0x27d1b90>, array([4, 0, 3, 3, 3, 1, 3, 2, 4, 0, 0, 4, 2, 1, 0, 1, 1, 0, 1, 4, 3, 0, 3, ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('unnormalized_zero_one_loss', <functools.partial object at 0x40e47e0>, array([4, 0, 3, 3, 3, 1, 3, 2, 4, 0, 0, 4, 2, 1, 0, 1, 1, 0, 1, 4, 3, 0, 3, ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('unnormalized_jaccard_similarity_score', <functools.partial object at 0x40e4788>, array([4, 0, 3, 3, 3, 1, 3, 2, 4, 0, 0, 4, 2, 1, 0, 1, 1, 0, 1, 4, 3, 0, 3, ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('weighted_recall_score', <functools.partial object at 0x40e4a48>, array([4, 0, 3, 3, 3, 1, 3, 2, 4, 0, 0, 4, 2, 1, 0, 1, 1, 0, 1, 4, 3, 0, 3, ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('micro_f1_score', <functools.partial object at 0x40e4af8>, array([4, 0, 3, 3, 3, 1, 3, 2, 4, 0, 0, 4, 2, 1, 0, 1, 1, 0, 1, 4, 3, 0, 3, ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('weighted_f2_score', <functools.partial object at 0x40e4998>, array([4, 0, 3, 3, 3, 1, 3, 2, 4, 0, 0, 4, 2, 1, 0, 1, 1, 0, 1, 4, 3, 0, 3, ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('f0.5_score', <functools.partial object at 0x40e4890>, array([4, 0, 3, 3, 3, 1, 3, 2, 4, 0, 0, 4, 2, 1, 0, 1, 1, 0, 1, 4, 3, 0, 3, ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('log_loss', <function log_loss at 0x27bc230>, array([4, 0, 3, 3, 3, 1, 3, 2, 4, 0, 0, 4, 2, 1, 0, 1, 1, 0, 1, 4, 3, 0, 3, ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('micro_f2_score', <functools.partial object at 0x40e4b50>, array([4, 0, 3, 3, 3, 1, 3, 2, 4, 0, 0, 4, 2, 1, 0, 1, 1, 0, 1, 4, 3, 0, 3, ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('r2_score', <function r2_score at 0x27d1cf8>, array([4, 0, 3, 3, 3, 1, 3, 2, 4, 0, 0, 4, 2, 1, 0, 1, 1, 0, 1, 4, 3, 0, 3, ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('unnormalized_log_loss', <functools.partial object at 0x40e4fc8>, array([4, 0, 3, 3, 3, 1, 3, 2, 4, 0, 0, 4, 2, 1, 0, 1, 1, 0, 1, 4, 3, 0, 3, ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('zero_one_loss', <function zero_one_loss at 0x27b8d70>, array([4, 0, 3, 3, 3, 1, 3, 2, 4, 0, 0, 4, 2, 1, 0, 1, 1, 0, 1, 4, 3, 0, 3, ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('weighted_f1_score', <functools.partial object at 0x40e4940>, array([4, 0, 3, 3, 3, 1, 3, 2, 4, 0, 0, 4, 2, 1, 0, 1, 1, 0, 1, 4, 3, 0, 3, ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('micro_precision_score', <functools.partial object at 0x40e4ba8>, array([4, 0, 3, 3, 3, 1, 3, 2, 4, 0, 0, 4, 2, 1, 0, 1, 1, 0, 1, 4, 3, 0, 3, ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('accuracy_score', <function accuracy_score at 0x27b8410>, array([4, 0, 3, 3, 3, 1, 3, 2, 4, 0, 0, 4, 2, 1, 0, 1, 1, 0, 1, 4, 3, 0, 3, ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('macro_precision_score', <functools.partial object at 0x40e4d60>, array([4, 0, 3, 3, 3, 1, 3, 2, 4, 0, 0, 4, 2, 1, 0, 1, 1, 0, 1, 4, 3, 0, 3, ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('recall_score', <function recall_score at 0x27bc0c8>, array([4, 0, 3, 3, 3, 1, 3, 2, 4, 0, 0, 4, 2, 1, 0, 1, 1, 0, 1, 4, 3, 0, 3, ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('macro_f1_score', <functools.partial object at 0x40e4cb0>, array([4, 0, 3, 3, 3, 1, 3, 2, 4, 0, 0, 4, 2, 1, 0, 1, 1, 0, 1, 4, 3, 0, 3, ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('micro_recall_score', <functools.partial object at 0x40e4c00>, array([4, 0, 3, 3, 3, 1, 3, 2, 4, 0, 0, 4, 2, 1, 0, 1, 1, 0, 1, 4, 3, 0, 3, ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('accuracy_score', <function accuracy_score at 0x27b8410>, [(1, 2), (1,), (0,), (0, 1), (1, 2), (1, 2), (1,), (0,), (0, 1), (1, 2)], [(0, 2), (2,), (0,), (2,), (1,), (0, 2), (2,), (0,), (2,), (1,)]) ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('unnormalized_accuracy_score', <functools.partial object at 0x40e4730>, [(1, 2), (1,), (0,), (0, 1), (1, 2), (1, 2), (1,), (0,), (0, 1), (1, 2)], [(0, 2), (2,), (0,), (2,), (1,), (0, 2), (2,), (0,), (2,), (1,)]) ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('jaccard_similarity_score', <function jaccard_similarity_score at 0x27b8c80>, [(1, 2), (1,), (0,), (0, 1), (1, 2), (1, 2), (1,), (0,), (0, 1), (1, 2)], [(0, 2), (2,), (0,), (2,), (1,), (0, 2), (2,), (0,), (2,), (1,)]) ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('unnormalized_jaccard_similarity_score', <functools.partial object at 0x40e4788>, [(1, 2), (1,), (0,), (0, 1), (1, 2), (1, 2), (1,), (0,), (0, 1), (1, 2)], [(0, 2), (2,), (0,), (2,), (1,), (0, 2), (2,), (0,), (2,), (1,)]) ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('zero_one_loss', <function zero_one_loss at 0x27b8d70>, [(1, 2), (1,), (0,), (0, 1), (1, 2), (1, 2), (1,), (0,), (0, 1), (1, 2)], [(0, 2), (2,), (0,), (2,), (1,), (0, 2), (2,), (0,), (2,), (1,)]) ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('unnormalized_zero_one_loss', <functools.partial object at 0x40e47e0>, [(1, 2), (1,), (0,), (0, 1), (1, 2), (1, 2), (1,), (0,), (0, 1), (1, 2)], [(0, 2), (2,), (0,), (2,), (1,), (0, 2), (2,), (0,), (2,), (1,)]) ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('precision_score', <function precision_score at 0x27bc050>, [(1, 2), (1,), (0,), (0, 1), (1, 2), (1, 2), (1,), (0,), (0, 1), (1, 2)], [(0, 2), (2,), (0,), (2,), (1,), (0, 2), (2,), (0,), (2,), (1,)]) ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('recall_score', <function recall_score at 0x27bc0c8>, [(1, 2), (1,), (0,), (0, 1), (1, 2), (1, 2), (1,), (0,), (0, 1), (1, 2)], [(0, 2), (2,), (0,), (2,), (1,), (0, 2), (2,), (0,), (2,), (1,)]) ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('f1_score', <function f1_score at 0x27b8de8>, [(1, 2), (1,), (0,), (0, 1), (1, 2), (1, 2), (1,), (0,), (0, 1), (1, 2)], [(0, 2), (2,), (0,), (2,), (1,), (0, 2), (2,), (0,), (2,), (1,)]) ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('f2_score', <functools.partial object at 0x40e4838>, [(1, 2), (1,), (0,), (0, 1), (1, 2), (1, 2), (1,), (0,), (0, 1), (1, 2)], [(0, 2), (2,), (0,), (2,), (1,), (0, 2), (2,), (0,), (2,), (1,)]) ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('f0.5_score', <functools.partial object at 0x40e4890>, [(1, 2), (1,), (0,), (0, 1), (1, 2), (1, 2), (1,), (0,), (0, 1), (1, 2)], [(0, 2), (2,), (0,), (2,), (1,), (0, 2), (2,), (0,), (2,), (1,)]) ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('weighted_f0.5_score', <functools.partial object at 0x40e48e8>, [(1, 2), (1,), (0,), (0, 1), (1, 2), (1, 2), (1,), (0,), (0, 1), (1, 2)], [(0, 2), (2,), (0,), (2,), (1,), (0, 2), (2,), (0,), (2,), (1,)]) ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('weighted_f1_score', <functools.partial object at 0x40e4940>, [(1, 2), (1,), (0,), (0, 1), (1, 2), (1, 2), (1,), (0,), (0, 1), (1, 2)], [(0, 2), (2,), (0,), (2,), (1,), (0, 2), (2,), (0,), (2,), (1,)]) ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('weighted_f2_score', <functools.partial object at 0x40e4998>, [(1, 2), (1,), (0,), (0, 1), (1, 2), (1, 2), (1,), (0,), (0, 1), (1, 2)], [(0, 2), (2,), (0,), (2,), (1,), (0, 2), (2,), (0,), (2,), (1,)]) ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('weighted_precision_score', <functools.partial object at 0x40e49f0>, [(1, 2), (1,), (0,), (0, 1), (1, 2), (1, 2), (1,), (0,), (0, 1), (1, 2)], [(0, 2), (2,), (0,), (2,), (1,), (0, 2), (2,), (0,), (2,), (1,)]) ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('weighted_recall_score', <functools.partial object at 0x40e4a48>, [(1, 2), (1,), (0,), (0, 1), (1, 2), (1, 2), (1,), (0,), (0, 1), (1, 2)], [(0, 2), (2,), (0,), (2,), (1,), (0, 2), (2,), (0,), (2,), (1,)]) ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('micro_f0.5_score', <functools.partial object at 0x40e4aa0>, [(1, 2), (1,), (0,), (0, 1), (1, 2), (1, 2), (1,), (0,), (0, 1), (1, 2)], [(0, 2), (2,), (0,), (2,), (1,), (0, 2), (2,), (0,), (2,), (1,)]) ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('micro_f1_score', <functools.partial object at 0x40e4af8>, [(1, 2), (1,), (0,), (0, 1), (1, 2), (1, 2), (1,), (0,), (0, 1), (1, 2)], [(0, 2), (2,), (0,), (2,), (1,), (0, 2), (2,), (0,), (2,), (1,)]) ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('micro_f2_score', <functools.partial object at 0x40e4b50>, [(1, 2), (1,), (0,), (0, 1), (1, 2), (1, 2), (1,), (0,), (0, 1), (1, 2)], [(0, 2), (2,), (0,), (2,), (1,), (0, 2), (2,), (0,), (2,), (1,)]) ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('micro_precision_score', <functools.partial object at 0x40e4ba8>, [(1, 2), (1,), (0,), (0, 1), (1, 2), (1, 2), (1,), (0,), (0, 1), (1, 2)], [(0, 2), (2,), (0,), (2,), (1,), (0, 2), (2,), (0,), (2,), (1,)]) ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('micro_recall_score', <functools.partial object at 0x40e4c00>, [(1, 2), (1,), (0,), (0, 1), (1, 2), (1, 2), (1,), (0,), (0, 1), (1, 2)], [(0, 2), (2,), (0,), (2,), (1,), (0, 2), (2,), (0,), (2,), (1,)]) ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('macro_f0.5_score', <functools.partial object at 0x40e4c58>, [(1, 2), (1,), (0,), (0, 1), (1, 2), (1, 2), (1,), (0,), (0, 1), (1, 2)], [(0, 2), (2,), (0,), (2,), (1,), (0, 2), (2,), (0,), (2,), (1,)]) ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('macro_f1_score', <functools.partial object at 0x40e4cb0>, [(1, 2), (1,), (0,), (0, 1), (1, 2), (1, 2), (1,), (0,), (0, 1), (1, 2)], [(0, 2), (2,), (0,), (2,), (1,), (0, 2), (2,), (0,), (2,), (1,)]) ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('macro_f2_score', <functools.partial object at 0x40e4d08>, [(1, 2), (1,), (0,), (0, 1), (1, 2), (1, 2), (1,), (0,), (0, 1), (1, 2)], [(0, 2), (2,), (0,), (2,), (1,), (0, 2), (2,), (0,), (2,), (1,)]) ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('macro_precision_score', <functools.partial object at 0x40e4d60>, [(1, 2), (1,), (0,), (0, 1), (1, 2), (1, 2), (1,), (0,), (0, 1), (1, 2)], [(0, 2), (2,), (0,), (2,), (1,), (0, 2), (2,), (0,), (2,), (1,)]) ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('macro_recall_score', <functools.partial object at 0x40e4db8>, [(1, 2), (1,), (0,), (0, 1), (1, 2), (1, 2), (1,), (0,), (0, 1), (1, 2)], [(0, 2), (2,), (0,), (2,), (1,), (0, 2), (2,), (0,), (2,), (1,)]) ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('samples_f0.5_score', <functools.partial object at 0x40e4e10>, [(1, 2), (1,), (0,), (0, 1), (1, 2), (1, 2), (1,), (0,), (0, 1), (1, 2)], [(0, 2), (2,), (0,), (2,), (1,), (0, 2), (2,), (0,), (2,), (1,)]) ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('samples_f1_score', <functools.partial object at 0x40e4e68>, [(1, 2), (1,), (0,), (0, 1), (1, 2), (1, 2), (1,), (0,), (0, 1), (1, 2)], [(0, 2), (2,), (0,), (2,), (1,), (0, 2), (2,), (0,), (2,), (1,)]) ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('samples_f2_score', <functools.partial object at 0x40e4ec0>, [(1, 2), (1,), (0,), (0, 1), (1, 2), (1, 2), (1,), (0,), (0, 1), (1, 2)], [(0, 2), (2,), (0,), (2,), (1,), (0, 2), (2,), (0,), (2,), (1,)]) ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('samples_precision_score', <functools.partial object at 0x40e4f18>, [(1, 2), (1,), (0,), (0, 1), (1, 2), (1, 2), (1,), (0,), (0, 1), (1, 2)], [(0, 2), (2,), (0,), (2,), (1,), (0, 2), (2,), (0,), (2,), (1,)]) ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('samples_recall_score', <functools.partial object at 0x40e4f70>, [(1, 2), (1,), (0,), (0, 1), (1, 2), (1, 2), (1,), (0,), (0, 1), (1, 2)], [(0, 2), (2,), (0,), (2,), (1,), (0, 2), (2,), (0,), (2,), (1,)]) ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('accuracy_score', <function accuracy_score at 0x27b8410>, array([[0, 1, 0, ..., 0, 0, 0], ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('unnormalized_accuracy_score', <functools.partial object at 0x40e4730>, array([[0, 1, 0, ..., 0, 0, 0], ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('jaccard_similarity_score', <function jaccard_similarity_score at 0x27b8c80>, array([[0, 1, 0, ..., 0, 0, 0], ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('unnormalized_jaccard_similarity_score', <functools.partial object at 0x40e4788>, array([[0, 1, 0, ..., 0, 0, 0], ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('zero_one_loss', <function zero_one_loss at 0x27b8d70>, array([[0, 1, 0, ..., 0, 0, 0], ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('unnormalized_zero_one_loss', <functools.partial object at 0x40e47e0>, array([[0, 1, 0, ..., 0, 0, 0], ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('precision_score', <function precision_score at 0x27bc050>, array([[0, 1, 0, ..., 0, 0, 0], ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('recall_score', <function recall_score at 0x27bc0c8>, array([[0, 1, 0, ..., 0, 0, 0], ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('f1_score', <function f1_score at 0x27b8de8>, array([[0, 1, 0, ..., 0, 0, 0], ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('f2_score', <functools.partial object at 0x40e4838>, array([[0, 1, 0, ..., 0, 0, 0], ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('f0.5_score', <functools.partial object at 0x40e4890>, array([[0, 1, 0, ..., 0, 0, 0], ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('weighted_f0.5_score', <functools.partial object at 0x40e48e8>, array([[0, 1, 0, ..., 0, 0, 0], ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('weighted_f1_score', <functools.partial object at 0x40e4940>, array([[0, 1, 0, ..., 0, 0, 0], ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('weighted_f2_score', <functools.partial object at 0x40e4998>, array([[0, 1, 0, ..., 0, 0, 0], ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('weighted_precision_score', <functools.partial object at 0x40e49f0>, array([[0, 1, 0, ..., 0, 0, 0], ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('weighted_recall_score', <functools.partial object at 0x40e4a48>, array([[0, 1, 0, ..., 0, 0, 0], ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('micro_f0.5_score', <functools.partial object at 0x40e4aa0>, array([[0, 1, 0, ..., 0, 0, 0], ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('micro_f1_score', <functools.partial object at 0x40e4af8>, array([[0, 1, 0, ..., 0, 0, 0], ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('micro_f2_score', <functools.partial object at 0x40e4b50>, array([[0, 1, 0, ..., 0, 0, 0], ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('micro_precision_score', <functools.partial object at 0x40e4ba8>, array([[0, 1, 0, ..., 0, 0, 0], ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('micro_recall_score', <functools.partial object at 0x40e4c00>, array([[0, 1, 0, ..., 0, 0, 0], ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('macro_f0.5_score', <functools.partial object at 0x40e4c58>, array([[0, 1, 0, ..., 0, 0, 0], ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('macro_f1_score', <functools.partial object at 0x40e4cb0>, array([[0, 1, 0, ..., 0, 0, 0], ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('macro_f2_score', <functools.partial object at 0x40e4d08>, array([[0, 1, 0, ..., 0, 0, 0], ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('macro_precision_score', <functools.partial object at 0x40e4d60>, array([[0, 1, 0, ..., 0, 0, 0], ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('macro_recall_score', <functools.partial object at 0x40e4db8>, array([[0, 1, 0, ..., 0, 0, 0], ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('samples_f0.5_score', <functools.partial object at 0x40e4e10>, array([[0, 1, 0, ..., 0, 0, 0], ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('samples_f1_score', <functools.partial object at 0x40e4e68>, array([[0, 1, 0, ..., 0, 0, 0], ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('samples_f2_score', <functools.partial object at 0x40e4ec0>, array([[0, 1, 0, ..., 0, 0, 0], ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('samples_precision_score', <functools.partial object at 0x40e4f18>, array([[0, 1, 0, ..., 0, 0, 0], ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('samples_recall_score', <functools.partial object at 0x40e4f70>, array([[0, 1, 0, ..., 0, 0, 0], ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('log_loss', <function log_loss at 0x27bc230>, array([[0, 1, 0, ..., 0, 0, 0], ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('unnormalized_log_loss', <functools.partial object at 0x40e4fc8>, array([[0, 1, 0, ..., 0, 0, 0], ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('roc_auc_score', <function roc_auc_score at 0x27467d0>, array([[0, 1, 0, ..., 0, 0, 0], ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('weighted_roc_auc', <functools.partial object at 0x40f0050>, array([[0, 1, 0, ..., 0, 0, 0], ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('samples_roc_auc', <functools.partial object at 0x40f00a8>, array([[0, 1, 0, ..., 0, 0, 0], ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('micro_roc_auc', <functools.partial object at 0x40f0100>, array([[0, 1, 0, ..., 0, 0, 0], ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('macro_roc_auc', <functools.partial object at 0x40f0158>, array([[0, 1, 0, ..., 0, 0, 0], ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('average_precision_score', <function average_precision_score at 0x2746758>, array([[0, 1, 0, ..., 0, 0, 0], ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('weighted_average_precision_score', <functools.partial object at 0x40f01b0>, array([[0, 1, 0, ..., 0, 0, 0], ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('samples_average_precision_score', <functools.partial object at 0x40f0208>, array([[0, 1, 0, ..., 0, 0, 0], ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('micro_average_precision_score', <functools.partial object at 0x40f0260>, array([[0, 1, 0, ..., 0, 0, 0], ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('macro_average_precision_score', <functools.partial object at 0x40f02b8>, array([[0, 1, 0, ..., 0, 0, 0], ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('coverage_error', <function coverage_error at 0x2746a28>, array([[0, 1, 0, ..., 0, 0, 0], ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('mean_absolute_error', <function mean_absolute_error at 0x27d1b18>, array([[0, 1, 0, ..., 0, 0, 0], ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('mean_squared_error', <function mean_squared_error at 0x27d1b90>, array([[0, 1, 0, ..., 0, 0, 0], ... ok
sklearn.metrics.tests.test_common.test_sample_weight_invariance('r2_score', <function r2_score at 0x27d1cf8>, array([[0, 1, 0, ..., 0, 0, 0], ... ok
sklearn.metrics.tests.test_common.test_no_averaging_labels ... /root/.local/lib/python2.7/site-packages/sklearn/metrics/classification.py:958: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples.
  'precision', 'predicted', average, warn_for)
/root/.local/lib/python2.7/site-packages/sklearn/metrics/classification.py:960: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples.
  'recall', 'true', average, warn_for)
/root/.local/lib/python2.7/site-packages/sklearn/metrics/classification.py:958: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no predicted samples.
  'precision', 'predicted', average, warn_for)
/root/.local/lib/python2.7/site-packages/sklearn/metrics/classification.py:960: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true samples.
  'recall', 'true', average, warn_for)
ok
sklearn.metrics.tests.test_pairwise.test_pairwise_distances ... ok
sklearn.metrics.tests.test_pairwise.test_pairwise_parallel(<function pairwise_distances at 0x27cc488>, 'euclidean', {}) ... ok
sklearn.metrics.tests.test_pairwise.test_pairwise_parallel(<function pairwise_distances at 0x27cc488>, <function wminkowski at 0x275d7d0>, {'p': 1, 'w': array([ 1.,  2.,  3.,  4.])}) ... ok
sklearn.metrics.tests.test_pairwise.test_pairwise_parallel(<function pairwise_distances at 0x27cc488>, 'wminkowski', {'p': 1, 'w': array([ 1.,  2.,  3.,  4.])}) ... ok
sklearn.metrics.tests.test_pairwise.test_pairwise_parallel(<function pairwise_kernels at 0x27cc578>, 'polynomial', {'degree': 1}) ... ok
sklearn.metrics.tests.test_pairwise.test_pairwise_parallel(<function pairwise_kernels at 0x27cc578>, <function callable_rbf_kernel at 0x40f3d70>, {'gamma': 0.1}) ... ok
sklearn.metrics.tests.test_pairwise.test_pairwise_callable_nonstrict_metric ... ok
sklearn.metrics.tests.test_pairwise.test_pairwise_kernels ... ok
sklearn.metrics.tests.test_pairwise.test_pairwise_kernels_filter_param ... ok
sklearn.metrics.tests.test_pairwise.test_paired_distances ... ok
sklearn.metrics.tests.test_pairwise.test_pairwise_distances_argmin_min ... ok
sklearn.metrics.tests.test_pairwise.test_euclidean_distances ... ok
sklearn.metrics.tests.test_pairwise.test_paired_euclidean_distances ... ok
sklearn.metrics.tests.test_pairwise.test_paired_manhattan_distances ... ok
sklearn.metrics.tests.test_pairwise.test_chi_square_kernel ... ok
sklearn.metrics.tests.test_pairwise.test_kernel_symmetry ... ok
sklearn.metrics.tests.test_pairwise.test_kernel_sparse ... ok
sklearn.metrics.tests.test_pairwise.test_linear_kernel ... ok
sklearn.metrics.tests.test_pairwise.test_rbf_kernel ... ok
sklearn.metrics.tests.test_pairwise.test_cosine_similarity ... ok
sklearn.metrics.tests.test_pairwise.test_check_dense_matrices ... ok
sklearn.metrics.tests.test_pairwise.test_check_XB_returned ... ok
sklearn.metrics.tests.test_pairwise.test_check_different_dimensions ... ok
sklearn.metrics.tests.test_pairwise.test_check_invalid_dimensions ... ok
sklearn.metrics.tests.test_pairwise.test_check_sparse_arrays ... ok
sklearn.metrics.tests.test_pairwise.test_check_tuple_input ... ok
sklearn.metrics.tests.test_pairwise.test_check_preserve_type ... ok
sklearn.metrics.tests.test_ranking.test_roc_curve ... ok
sklearn.metrics.tests.test_ranking.test_roc_curve_end_points ... ok
sklearn.metrics.tests.test_ranking.test_roc_returns_consistency ... ok
sklearn.metrics.tests.test_ranking.test_roc_nonrepeating_thresholds ... ok
sklearn.metrics.tests.test_ranking.test_roc_curve_multi ... ok
sklearn.metrics.tests.test_ranking.test_roc_curve_confidence ... ok
sklearn.metrics.tests.test_ranking.test_roc_curve_hard ... ok
sklearn.metrics.tests.test_ranking.test_roc_curve_one_label ... ok
sklearn.metrics.tests.test_ranking.test_roc_curve_toydata ... /root/.local/lib/python2.7/site-packages/sklearn/metrics/ranking.py:496: UndefinedMetricWarning: No positive samples in y_true, true positive value should be meaningless
  UndefinedMetricWarning)
/root/.local/lib/python2.7/site-packages/sklearn/metrics/ranking.py:488: UndefinedMetricWarning: No negative samples in y_true, false positive value should be meaningless
  UndefinedMetricWarning)
ok
sklearn.metrics.tests.test_ranking.test_auc ... ok
sklearn.metrics.tests.test_ranking.test_auc_duplicate_values ... ok
sklearn.metrics.tests.test_ranking.test_auc_errors ... ok
sklearn.metrics.tests.test_ranking.test_auc_score_non_binary_class ... ok
sklearn.metrics.tests.test_ranking.test_precision_recall_curve ... ok
sklearn.metrics.tests.test_ranking.test_precision_recall_curve_pos_label ... ok
sklearn.metrics.tests.test_ranking.test_precision_recall_curve_errors ... ok
sklearn.metrics.tests.test_ranking.test_precision_recall_curve_toydata ... ok
sklearn.metrics.tests.test_ranking.test_score_scale_invariance ... ok
sklearn.metrics.tests.test_ranking.test_label_ranking_avp(<function label_ranking_average_precision_score at 0x27469b0>,) ... ok
sklearn.metrics.tests.test_ranking.test_label_ranking_avp(<function label_ranking_average_precision_score at 0x27469b0>,) ... ok
sklearn.metrics.tests.test_ranking.test_label_ranking_avp(<function label_ranking_average_precision_score at 0x27469b0>,) ... ok
sklearn.metrics.tests.test_ranking.test_label_ranking_avp(<function label_ranking_average_precision_score at 0x27469b0>,) ... ok
sklearn.metrics.tests.test_ranking.test_label_ranking_avp(<function label_ranking_average_precision_score at 0x27469b0>,) ... ok
sklearn.metrics.tests.test_ranking.test_label_ranking_avp(<function _my_lrap at 0x40ff9b0>,) ... ok
sklearn.metrics.tests.test_ranking.test_label_ranking_avp(<function _my_lrap at 0x40ff9b0>,) ... ok
sklearn.metrics.tests.test_ranking.test_label_ranking_avp(<function _my_lrap at 0x40ff9b0>,) ... ok
sklearn.metrics.tests.test_ranking.test_label_ranking_avp(<function _my_lrap at 0x40ff9b0>,) ... ok
sklearn.metrics.tests.test_ranking.test_label_ranking_avp(<function label_ranking_average_precision_score at 0x27469b0>,) ... ok
sklearn.metrics.tests.test_ranking.test_label_ranking_avp(<function label_ranking_average_precision_score at 0x27469b0>, 2, 1, 0) ... ok
sklearn.metrics.tests.test_ranking.test_label_ranking_avp(<function label_ranking_average_precision_score at 0x27469b0>, 5, 1, 0) ... ok
sklearn.metrics.tests.test_ranking.test_label_ranking_avp(<function label_ranking_average_precision_score at 0x27469b0>, 10, 1, 0) ... ok
sklearn.metrics.tests.test_ranking.test_label_ranking_avp(<function label_ranking_average_precision_score at 0x27469b0>, 2, 2, 0) ... ok
sklearn.metrics.tests.test_ranking.test_label_ranking_avp(<function label_ranking_average_precision_score at 0x27469b0>, 5, 2, 0) ... ok
sklearn.metrics.tests.test_ranking.test_label_ranking_avp(<function label_ranking_average_precision_score at 0x27469b0>, 10, 2, 0) ... ok
sklearn.metrics.tests.test_ranking.test_label_ranking_avp(<function label_ranking_average_precision_score at 0x27469b0>, 2, 8, 0) ... ok
sklearn.metrics.tests.test_ranking.test_label_ranking_avp(<function label_ranking_average_precision_score at 0x27469b0>, 5, 8, 0) ... ok
sklearn.metrics.tests.test_ranking.test_label_ranking_avp(<function label_ranking_average_precision_score at 0x27469b0>, 10, 8, 0) ... ok
sklearn.metrics.tests.test_ranking.test_label_ranking_avp(<function label_ranking_average_precision_score at 0x27469b0>, 2, 20, 0) ... ok
sklearn.metrics.tests.test_ranking.test_label_ranking_avp(<function label_ranking_average_precision_score at 0x27469b0>, 5, 20, 0) ... ok
sklearn.metrics.tests.test_ranking.test_label_ranking_avp(<function label_ranking_average_precision_score at 0x27469b0>, 10, 20, 0) ... ok
sklearn.metrics.tests.test_ranking.test_coverage_error ... ok
sklearn.metrics.tests.test_ranking.test_coverage_tie_handling ... ok
sklearn.metrics.tests.test_regression.test_regression_metrics ... ok
sklearn.metrics.tests.test_regression.test_multioutput_regression ... ok
sklearn.metrics.tests.test_regression.test_regression_metrics_at_limits ... ok
sklearn.metrics.tests.test_regression.test__check_reg_targets ... ok
sklearn.metrics.tests.test_score_objects.test_check_scoring ... ok
sklearn.metrics.tests.test_score_objects.test_check_scoring_gridsearchcv ... ok
sklearn.metrics.tests.test_score_objects.test_make_scorer ... ok
sklearn.metrics.tests.test_score_objects.test_classification_scores ... ok
sklearn.metrics.tests.test_score_objects.test_regression_scorers ... ok
sklearn.metrics.tests.test_score_objects.test_thresholded_scorers ... ok
sklearn.metrics.tests.test_score_objects.test_thresholded_scorers_multilabel_indicator_data ... ok
sklearn.metrics.tests.test_score_objects.test_unsupervised_scorers ... ok
sklearn.metrics.tests.test_score_objects.test_raises_on_score_list ... ok
sklearn.metrics.tests.test_score_objects.test_scorer_sample_weight ... ok
test_eval (sklearn.mixture.tests.test_dpgmm.TestDPGMMWithDiagCovars) ... ok
test_sample (sklearn.mixture.tests.test_dpgmm.TestDPGMMWithDiagCovars) ... ok
test_train (sklearn.mixture.tests.test_dpgmm.TestDPGMMWithDiagCovars) ... ok
test_train_1d (sklearn.mixture.tests.test_dpgmm.TestDPGMMWithDiagCovars) ... ok
test_train_degenerate (sklearn.mixture.tests.test_dpgmm.TestDPGMMWithDiagCovars) ... ok
test_eval (sklearn.mixture.tests.test_dpgmm.TestDPGMMWithFullCovars) ... ok
test_sample (sklearn.mixture.tests.test_dpgmm.TestDPGMMWithFullCovars) ... ok
test_train (sklearn.mixture.tests.test_dpgmm.TestDPGMMWithFullCovars) ... ok
test_train_1d (sklearn.mixture.tests.test_dpgmm.TestDPGMMWithFullCovars) ... ok
test_train_degenerate (sklearn.mixture.tests.test_dpgmm.TestDPGMMWithFullCovars) ... ok
test_eval (sklearn.mixture.tests.test_dpgmm.TestDPGMMWithSphericalCovars) ... ok
test_sample (sklearn.mixture.tests.test_dpgmm.TestDPGMMWithSphericalCovars) ... ok
test_train (sklearn.mixture.tests.test_dpgmm.TestDPGMMWithSphericalCovars) ... ok
test_train_1d (sklearn.mixture.tests.test_dpgmm.TestDPGMMWithSphericalCovars) ... ok
test_train_degenerate (sklearn.mixture.tests.test_dpgmm.TestDPGMMWithSphericalCovars) ... ok
test_eval (sklearn.mixture.tests.test_dpgmm.TestDPGMMWithTiedCovars) ... ok
test_sample (sklearn.mixture.tests.test_dpgmm.TestDPGMMWithTiedCovars) ... ok
test_train (sklearn.mixture.tests.test_dpgmm.TestDPGMMWithTiedCovars) ... ok
test_train_1d (sklearn.mixture.tests.test_dpgmm.TestDPGMMWithTiedCovars) ... ok
test_train_degenerate (sklearn.mixture.tests.test_dpgmm.TestDPGMMWithTiedCovars) ... ok
test_eval (sklearn.mixture.tests.test_dpgmm.TestVBGMMWithDiagCovars) ... ok
test_sample (sklearn.mixture.tests.test_dpgmm.TestVBGMMWithDiagCovars) ... ok
test_train (sklearn.mixture.tests.test_dpgmm.TestVBGMMWithDiagCovars) ... ok
test_train_1d (sklearn.mixture.tests.test_dpgmm.TestVBGMMWithDiagCovars) ... ok
test_train_degenerate (sklearn.mixture.tests.test_dpgmm.TestVBGMMWithDiagCovars) ... ok
test_eval (sklearn.mixture.tests.test_dpgmm.TestVBGMMWithFullCovars) ... ok
test_sample (sklearn.mixture.tests.test_dpgmm.TestVBGMMWithFullCovars) ... ok
test_train (sklearn.mixture.tests.test_dpgmm.TestVBGMMWithFullCovars) ... ok
test_train_1d (sklearn.mixture.tests.test_dpgmm.TestVBGMMWithFullCovars) ... ok
test_train_degenerate (sklearn.mixture.tests.test_dpgmm.TestVBGMMWithFullCovars) ... ok
test_eval (sklearn.mixture.tests.test_dpgmm.TestVBGMMWithSphericalCovars) ... ok
test_sample (sklearn.mixture.tests.test_dpgmm.TestVBGMMWithSphericalCovars) ... ok
test_train (sklearn.mixture.tests.test_dpgmm.TestVBGMMWithSphericalCovars) ... ok
test_train_1d (sklearn.mixture.tests.test_dpgmm.TestVBGMMWithSphericalCovars) ... ok
test_train_degenerate (sklearn.mixture.tests.test_dpgmm.TestVBGMMWithSphericalCovars) ... ok
test_eval (sklearn.mixture.tests.test_dpgmm.TestVBGMMWithTiedCovars) ... ok
test_sample (sklearn.mixture.tests.test_dpgmm.TestVBGMMWithTiedCovars) ... ok
test_train (sklearn.mixture.tests.test_dpgmm.TestVBGMMWithTiedCovars) ... ok
test_train_1d (sklearn.mixture.tests.test_dpgmm.TestVBGMMWithTiedCovars) ... ok
test_train_degenerate (sklearn.mixture.tests.test_dpgmm.TestVBGMMWithTiedCovars) ... ok
sklearn.mixture.tests.test_dpgmm.test_class_weights ... ok
sklearn.mixture.tests.test_dpgmm.test_log_normalize ... ok
test_eval (sklearn.mixture.tests.test_gmm.TestGMMWithDiagonalCovars) ... ok
test_sample (sklearn.mixture.tests.test_gmm.TestGMMWithDiagonalCovars) ... ok
test_train (sklearn.mixture.tests.test_gmm.TestGMMWithDiagonalCovars) ... ok
test_train_1d (sklearn.mixture.tests.test_gmm.TestGMMWithDiagonalCovars) ... ok
test_train_degenerate (sklearn.mixture.tests.test_gmm.TestGMMWithDiagonalCovars) ... ok
test_eval (sklearn.mixture.tests.test_gmm.TestGMMWithFullCovars) ... ok
test_sample (sklearn.mixture.tests.test_gmm.TestGMMWithFullCovars) ... ok
test_train (sklearn.mixture.tests.test_gmm.TestGMMWithFullCovars) ... ok
test_train_1d (sklearn.mixture.tests.test_gmm.TestGMMWithFullCovars) ... ok
test_train_degenerate (sklearn.mixture.tests.test_gmm.TestGMMWithFullCovars) ... ok
test_eval (sklearn.mixture.tests.test_gmm.TestGMMWithSphericalCovars) ... ok
test_sample (sklearn.mixture.tests.test_gmm.TestGMMWithSphericalCovars) ... ok
test_train (sklearn.mixture.tests.test_gmm.TestGMMWithSphericalCovars) ... ok
test_train_1d (sklearn.mixture.tests.test_gmm.TestGMMWithSphericalCovars) ... ok
test_train_degenerate (sklearn.mixture.tests.test_gmm.TestGMMWithSphericalCovars) ... ok
test_eval (sklearn.mixture.tests.test_gmm.TestGMMWithTiedCovars) ... ok
test_sample (sklearn.mixture.tests.test_gmm.TestGMMWithTiedCovars) ... ok
test_train (sklearn.mixture.tests.test_gmm.TestGMMWithTiedCovars) ... ok
test_train_1d (sklearn.mixture.tests.test_gmm.TestGMMWithTiedCovars) ... ok
test_train_degenerate (sklearn.mixture.tests.test_gmm.TestGMMWithTiedCovars) ... ok
sklearn.mixture.tests.test_gmm.test_sample_gaussian ... ok
sklearn.mixture.tests.test_gmm.test_lmvnpdf_diag ... ok
sklearn.mixture.tests.test_gmm.test_lmvnpdf_spherical ... ok
sklearn.mixture.tests.test_gmm.test_lmvnpdf_full ... ok
sklearn.mixture.tests.test_gmm.test_GMM_attributes ... ok
sklearn.mixture.tests.test_gmm.test_multiple_init ... ok
sklearn.mixture.tests.test_gmm.test_n_parameters ... ok
sklearn.mixture.tests.test_gmm.test_1d_1component ... ok
sklearn.mixture.tests.test_gmm.test_aic ... ok
sklearn.mixture.tests.test_gmm.test_positive_definite_covars('full',) ... ok
sklearn.mixture.tests.test_gmm.test_positive_definite_covars('tied',) ... ok
sklearn.mixture.tests.test_gmm.test_positive_definite_covars('diag',) ... ok
sklearn.mixture.tests.test_gmm.test_positive_definite_covars('spherical',) ... ok
Test l1_min_c loss='squared_hinge' dense multi-class no-intercept ... /root/.local/lib/python2.7/site-packages/sklearn/utils/extmath.py:105: NonBLASDotWarning: Data must be of same type. Supported types are 32 and 64 bit float. Falling back to np.dot.
  'Falling back to np.dot.', NonBLASDotWarning)
ok
Test l1_min_c loss='squared_hinge' dense multi-class fit-intercept ... ok
Test l1_min_c loss='squared_hinge' dense two-classes no-intercept ... ok
Test l1_min_c loss='squared_hinge' dense two-classes fit-intercept ... ok
Test l1_min_c loss='squared_hinge' sparse multi-class no-intercept ... ok
Test l1_min_c loss='squared_hinge' sparse multi-class fit-intercept ... ok
Test l1_min_c loss='squared_hinge' sparse two-classes no-intercept ... ok
Test l1_min_c loss='squared_hinge' sparse two-classes fit-intercept ... ok
Test l1_min_c loss='log' dense multi-class no-intercept ... ok
Test l1_min_c loss='log' dense multi-class fit-intercept ... ok
Test l1_min_c loss='log' dense two-classes no-intercept ... ok
Test l1_min_c loss='log' dense two-classes fit-intercept ... ok
Test l1_min_c loss='log' sparse multi-class no-intercept ... ok
Test l1_min_c loss='log' sparse multi-class fit-intercept ... ok
Test l1_min_c loss='log' sparse two-classes no-intercept ... ok
Test l1_min_c loss='log' sparse two-classes fit-intercept ... ok
sklearn.svm.tests.test_bounds.test_l2_deprecation ... ok
sklearn.svm.tests.test_bounds.test_ill_posed_min_c ... ok
sklearn.svm.tests.test_bounds.test_unsupported_loss ... ok
Check that sparse SVC gives the same result as SVC ... ok
sklearn.svm.tests.test_sparse.test_unsorted_indices ... ok
sklearn.svm.tests.test_sparse.test_svc_with_custom_kernel ... ok
sklearn.svm.tests.test_sparse.test_svc_iris ... ok
Test decision_function ... ok
sklearn.svm.tests.test_sparse.test_error ... ok
sklearn.svm.tests.test_sparse.test_linearsvc ... ok
sklearn.svm.tests.test_sparse.test_linearsvc_iris ... ok
sklearn.svm.tests.test_sparse.test_weight ... ok
sklearn.svm.tests.test_sparse.test_sample_weights ... ok
sklearn.svm.tests.test_sparse.test_sparse_liblinear_intercept_handling ... ok
sklearn.svm.tests.test_sparse.test_sparse_realdata ... ok
sklearn.svm.tests.test_sparse.test_sparse_svc_clone_with_callable_kernel ... ok
sklearn.svm.tests.test_sparse.test_timeout ... ok
sklearn.svm.tests.test_sparse.test_consistent_proba ... /root/.local/lib/python2.7/site-packages/sklearn/svm/base.py:209: ConvergenceWarning: Solver terminated early (max_iter=1).  Consider pre-processing your data with StandardScaler or MinMaxScaler.
  % self.max_iter, ConvergenceWarning)
ok
sklearn.svm.tests.test_svm.test_libsvm_parameters ... ok
sklearn.svm.tests.test_svm.test_libsvm_iris ... ok
sklearn.svm.tests.test_svm.test_single_sample_1d ... /root/.local/lib/python2.7/site-packages/sklearn/utils/extmath.py:105: NonBLASDotWarning: Data must be of same type. Supported types are 32 and 64 bit float. Falling back to np.dot.
  'Falling back to np.dot.', NonBLASDotWarning)
ok
sklearn.svm.tests.test_svm.test_precomputed ... ok
sklearn.svm.tests.test_svm.test_svr ... ok
sklearn.svm.tests.test_svm.test_linearsvr ... ok
sklearn.svm.tests.test_svm.test_svr_errors ... ok
sklearn.svm.tests.test_svm.test_oneclass ... ok
sklearn.svm.tests.test_svm.test_oneclass_decision_function ... ok
sklearn.svm.tests.test_svm.test_tweak_params ... ok
sklearn.svm.tests.test_svm.test_probability ... ok
sklearn.svm.tests.test_svm.test_decision_function ... ok
sklearn.svm.tests.test_svm.test_svr_decision_function ... ok
sklearn.svm.tests.test_svm.test_weight ... ok
sklearn.svm.tests.test_svm.test_sample_weights ... ok
sklearn.svm.tests.test_svm.test_auto_weight ... /root/.local/lib/python2.7/site-packages/sklearn/metrics/classification.py:958: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no predicted samples.
  'precision', 'predicted', average, warn_for)
ok
sklearn.svm.tests.test_svm.test_bad_input ... ok
sklearn.svm.tests.test_svm.test_sparse_precomputed ... ok
sklearn.svm.tests.test_svm.test_linearsvc_parameters ... ok
sklearn.svm.tests.test_svm.test_linearsvx_loss_penalty_deprecations ... ok
sklearn.svm.tests.test_svm.test_linear_svx_uppercase_loss_penalty ... ok
sklearn.svm.tests.test_svm.test_linearsvc ... /root/.local/lib/python2.7/site-packages/sklearn/utils/extmath.py:105: NonBLASDotWarning: Data must be of same type. Supported types are 32 and 64 bit float. Falling back to np.dot.
  'Falling back to np.dot.', NonBLASDotWarning)
ok
sklearn.svm.tests.test_svm.test_linearsvc_crammer_singer ... ok
sklearn.svm.tests.test_svm.test_crammer_singer_binary ... ok
sklearn.svm.tests.test_svm.test_linearsvc_iris ... ok
sklearn.svm.tests.test_svm.test_dense_liblinear_intercept_handling ... ok
sklearn.svm.tests.test_svm.test_liblinear_set_coef ... ok
sklearn.svm.tests.test_svm.test_immutable_coef_property ... ok
sklearn.svm.tests.test_svm.test_inheritance ... ok
sklearn.svm.tests.test_svm.test_linearsvc_verbose ... ok
sklearn.svm.tests.test_svm.test_svc_clone_with_callable_kernel ... ok
sklearn.svm.tests.test_svm.test_svc_bad_kernel ... ok
sklearn.svm.tests.test_svm.test_timeout ... ok
sklearn.svm.tests.test_svm.test_unfitted ... ok
sklearn.svm.tests.test_svm.test_consistent_proba ... /root/.local/lib/python2.7/site-packages/sklearn/svm/base.py:209: ConvergenceWarning: Solver terminated early (max_iter=1).  Consider pre-processing your data with StandardScaler or MinMaxScaler.
  % self.max_iter, ConvergenceWarning)
ok
sklearn.svm.tests.test_svm.test_linear_svc_convergence_warnings ...
optimization finished, #iter = 2

WARNING: reaching max number of iterations
Using -s 2 may be faster (also see FAQ)

Objective value = -0.221693
nSV = 2
ok
sklearn.svm.tests.test_svm.test_svr_coef_sign ... ok
sklearn.svm.tests.test_svm.test_linear_svc_intercept_scaling ... ok
sklearn.svm.tests.test_svm.test_lsvc_intercept_scaling_zero ... ok
sklearn.tree.tests.test_export.test_graphviz_toy ... ok
sklearn.tree.tests.test_export.test_graphviz_errors ... ok
sklearn.tree.tests.test_tree.test_classification_toy ... ok
sklearn.tree.tests.test_tree.test_weighted_classification_toy ... ok
sklearn.tree.tests.test_tree.test_regression_toy ... ok
sklearn.tree.tests.test_tree.test_xor ... ok
sklearn.tree.tests.test_tree.test_iris ... ok
sklearn.tree.tests.test_tree.test_boston ... ok
sklearn.tree.tests.test_tree.test_probability ... /root/.local/lib/python2.7/site-packages/sklearn/tree/tree.py:634: RuntimeWarning: divide by zero encountered in log
  return np.log(proba)
ok
sklearn.tree.tests.test_tree.test_arrayrepr ... ok
sklearn.tree.tests.test_tree.test_pure_set ... ok
sklearn.tree.tests.test_tree.test_numerical_stability ... ok
sklearn.tree.tests.test_tree.test_importances ... ok
sklearn.tree.tests.test_tree.test_importances_raises ... ok
sklearn.tree.tests.test_tree.test_importances_gini_equal_mse ... ok
sklearn.tree.tests.test_tree.test_max_features ... ok
sklearn.tree.tests.test_tree.test_error ... ok
sklearn.tree.tests.test_tree.test_min_samples_leaf ... ok
sklearn.tree.tests.test_tree.test_min_weight_fraction_leaf('Presort-DecisionTreeRegressor', 'iris') ... ok
sklearn.tree.tests.test_tree.test_min_weight_fraction_leaf('ExtraTreeRegressor', 'iris') ... ok
sklearn.tree.tests.test_tree.test_min_weight_fraction_leaf('DecisionTreeRegressor', 'iris') ... ok
sklearn.tree.tests.test_tree.test_min_weight_fraction_leaf('ExtraTreeClassifier', 'iris') ... ok
sklearn.tree.tests.test_tree.test_min_weight_fraction_leaf('Presort-DecisionTreeClassifier', 'iris') ... ok
sklearn.tree.tests.test_tree.test_min_weight_fraction_leaf('DecisionTreeClassifier', 'iris') ... ok
sklearn.tree.tests.test_tree.test_min_weight_fraction_leaf('ExtraTreeRegressor', 'multilabel', True) ... ok
sklearn.tree.tests.test_tree.test_min_weight_fraction_leaf('DecisionTreeRegressor', 'multilabel', True) ... ok
sklearn.tree.tests.test_tree.test_min_weight_fraction_leaf('ExtraTreeClassifier', 'multilabel', True) ... ok
sklearn.tree.tests.test_tree.test_min_weight_fraction_leaf('DecisionTreeClassifier', 'multilabel', True) ... ok
sklearn.tree.tests.test_tree.test_pickle ... ok
sklearn.tree.tests.test_tree.test_multioutput ... /root/.local/lib/python2.7/site-packages/sklearn/tree/tree.py:638: RuntimeWarning: divide by zero encountered in log
  proba[k] = np.log(proba[k])
ok
sklearn.tree.tests.test_tree.test_classes_shape ... ok
sklearn.tree.tests.test_tree.test_unbalanced_iris ... ok
sklearn.tree.tests.test_tree.test_memory_layout ... ok
sklearn.tree.tests.test_tree.test_sample_weight ... ok
sklearn.tree.tests.test_tree.test_sample_weight_invalid ... ok
sklearn.tree.tests.test_tree.test_class_weights('ExtraTreeClassifier',) ... ok
sklearn.tree.tests.test_tree.test_class_weights('Presort-DecisionTreeClassifier',) ... ok
sklearn.tree.tests.test_tree.test_class_weights('DecisionTreeClassifier',) ... ok
sklearn.tree.tests.test_tree.test_class_weight_errors('ExtraTreeClassifier',) ... ok
sklearn.tree.tests.test_tree.test_class_weight_errors('Presort-DecisionTreeClassifier',) ... ok
sklearn.tree.tests.test_tree.test_class_weight_errors('DecisionTreeClassifier',) ... ok
sklearn.tree.tests.test_tree.test_max_leaf_nodes ... ok
sklearn.tree.tests.test_tree.test_max_leaf_nodes_max_depth ... ok
sklearn.tree.tests.test_tree.test_arrays_persist ... ok
sklearn.tree.tests.test_tree.test_only_constant_features ... ok
sklearn.tree.tests.test_tree.test_with_only_one_non_constant_features ... ok
sklearn.tree.tests.test_tree.test_big_input ... ok
sklearn.tree.tests.test_tree.test_realloc ... ok
sklearn.tree.tests.test_tree.test_huge_allocations ... ok
sklearn.tree.tests.test_tree.test_sparse_input('ExtraTreeRegressor', 'clf_small', None) ... ok
sklearn.tree.tests.test_tree.test_sparse_input('ExtraTreeRegressor', 'toy', None) ... ok
sklearn.tree.tests.test_tree.test_sparse_input('ExtraTreeRegressor', 'digits', 3) ... ok
sklearn.tree.tests.test_tree.test_sparse_input('ExtraTreeRegressor', 'multilabel', None) ... ok
sklearn.tree.tests.test_tree.test_sparse_input('ExtraTreeRegressor', 'sparse-pos', None) ... ok
sklearn.tree.tests.test_tree.test_sparse_input('ExtraTreeRegressor', 'sparse-neg', None) ... ok
sklearn.tree.tests.test_tree.test_sparse_input('ExtraTreeRegressor', 'sparse-mix', None) ... ok
sklearn.tree.tests.test_tree.test_sparse_input('ExtraTreeRegressor', 'zeros', None) ... ok
sklearn.tree.tests.test_tree.test_sparse_input('DecisionTreeRegressor', 'clf_small', None) ... ok
sklearn.tree.tests.test_tree.test_sparse_input('DecisionTreeRegressor', 'toy', None) ... ok
sklearn.tree.tests.test_tree.test_sparse_input('DecisionTreeRegressor', 'digits', 3) ... ok
sklearn.tree.tests.test_tree.test_sparse_input('DecisionTreeRegressor', 'multilabel', None) ... ok
sklearn.tree.tests.test_tree.test_sparse_input('DecisionTreeRegressor', 'sparse-pos', None) ... ok
sklearn.tree.tests.test_tree.test_sparse_input('DecisionTreeRegressor', 'sparse-neg', None) ... ok
sklearn.tree.tests.test_tree.test_sparse_input('DecisionTreeRegressor', 'sparse-mix', None) ... ok
sklearn.tree.tests.test_tree.test_sparse_input('DecisionTreeRegressor', 'zeros', None) ... ok
sklearn.tree.tests.test_tree.test_sparse_input('ExtraTreeClassifier', 'clf_small', None) ... ok
sklearn.tree.tests.test_tree.test_sparse_input('ExtraTreeClassifier', 'toy', None) ... ok
sklearn.tree.tests.test_tree.test_sparse_input('ExtraTreeClassifier', 'digits', 3) ... ok
sklearn.tree.tests.test_tree.test_sparse_input('ExtraTreeClassifier', 'multilabel', None) ... ok
sklearn.tree.tests.test_tree.test_sparse_input('ExtraTreeClassifier', 'sparse-pos', None) ... ok
sklearn.tree.tests.test_tree.test_sparse_input('ExtraTreeClassifier', 'sparse-neg', None) ... ok
sklearn.tree.tests.test_tree.test_sparse_input('ExtraTreeClassifier', 'sparse-mix', None) ... ok
sklearn.tree.tests.test_tree.test_sparse_input('ExtraTreeClassifier', 'zeros', None) ... ok
sklearn.tree.tests.test_tree.test_sparse_input('DecisionTreeClassifier', 'clf_small', None) ... ok
sklearn.tree.tests.test_tree.test_sparse_input('DecisionTreeClassifier', 'toy', None) ... ok
sklearn.tree.tests.test_tree.test_sparse_input('DecisionTreeClassifier', 'digits', 3) ... ok
sklearn.tree.tests.test_tree.test_sparse_input('DecisionTreeClassifier', 'multilabel', None) ... ok
sklearn.tree.tests.test_tree.test_sparse_input('DecisionTreeClassifier', 'sparse-pos', None) ... ok
sklearn.tree.tests.test_tree.test_sparse_input('DecisionTreeClassifier', 'sparse-neg', None) ... ok
sklearn.tree.tests.test_tree.test_sparse_input('DecisionTreeClassifier', 'sparse-mix', None) ... ok
sklearn.tree.tests.test_tree.test_sparse_input('DecisionTreeClassifier', 'zeros', None) ... ok
sklearn.tree.tests.test_tree.test_sparse_input('ExtraTreeRegressor', 'boston', 2) ... ok
sklearn.tree.tests.test_tree.test_sparse_input('ExtraTreeRegressor', 'reg_small', 2) ... ok
sklearn.tree.tests.test_tree.test_sparse_input('DecisionTreeRegressor', 'boston', 2) ... ok
sklearn.tree.tests.test_tree.test_sparse_input('DecisionTreeRegressor', 'reg_small', 2) ... ok
sklearn.tree.tests.test_tree.test_sparse_parameters('ExtraTreeRegressor', 'sparse-pos') ... ok
sklearn.tree.tests.test_tree.test_sparse_parameters('ExtraTreeRegressor', 'sparse-neg') ... ok
sklearn.tree.tests.test_tree.test_sparse_parameters('ExtraTreeRegressor', 'sparse-mix') ... ok
sklearn.tree.tests.test_tree.test_sparse_parameters('ExtraTreeRegressor', 'zeros') ... ok
sklearn.tree.tests.test_tree.test_sparse_parameters('DecisionTreeRegressor', 'sparse-pos') ... ok
sklearn.tree.tests.test_tree.test_sparse_parameters('DecisionTreeRegressor', 'sparse-neg') ... ok
sklearn.tree.tests.test_tree.test_sparse_parameters('DecisionTreeRegressor', 'sparse-mix') ... ok
sklearn.tree.tests.test_tree.test_sparse_parameters('DecisionTreeRegressor', 'zeros') ... ok
sklearn.tree.tests.test_tree.test_sparse_parameters('ExtraTreeClassifier', 'sparse-pos') ... ok
sklearn.tree.tests.test_tree.test_sparse_parameters('ExtraTreeClassifier', 'sparse-neg') ... ok
sklearn.tree.tests.test_tree.test_sparse_parameters('ExtraTreeClassifier', 'sparse-mix') ... ok
sklearn.tree.tests.test_tree.test_sparse_parameters('ExtraTreeClassifier', 'zeros') ... ok
sklearn.tree.tests.test_tree.test_sparse_parameters('DecisionTreeClassifier', 'sparse-pos') ... ok
sklearn.tree.tests.test_tree.test_sparse_parameters('DecisionTreeClassifier', 'sparse-neg') ... ok
sklearn.tree.tests.test_tree.test_sparse_parameters('DecisionTreeClassifier', 'sparse-mix') ... ok
sklearn.tree.tests.test_tree.test_sparse_parameters('DecisionTreeClassifier', 'zeros') ... ok
sklearn.tree.tests.test_tree.test_sparse_criterion('ExtraTreeRegressor', 'sparse-pos') ... ok
sklearn.tree.tests.test_tree.test_sparse_criterion('ExtraTreeRegressor', 'sparse-neg') ... ok
sklearn.tree.tests.test_tree.test_sparse_criterion('ExtraTreeRegressor', 'sparse-mix') ... ok
sklearn.tree.tests.test_tree.test_sparse_criterion('ExtraTreeRegressor', 'zeros') ... ok
sklearn.tree.tests.test_tree.test_sparse_criterion('DecisionTreeRegressor', 'sparse-pos') ... ok
sklearn.tree.tests.test_tree.test_sparse_criterion('DecisionTreeRegressor', 'sparse-neg') ... ok
sklearn.tree.tests.test_tree.test_sparse_criterion('DecisionTreeRegressor', 'sparse-mix') ... ok
sklearn.tree.tests.test_tree.test_sparse_criterion('DecisionTreeRegressor', 'zeros') ... ok
sklearn.tree.tests.test_tree.test_sparse_criterion('ExtraTreeClassifier', 'sparse-pos') ... ok
sklearn.tree.tests.test_tree.test_sparse_criterion('ExtraTreeClassifier', 'sparse-neg') ... ok
sklearn.tree.tests.test_tree.test_sparse_criterion('ExtraTreeClassifier', 'sparse-mix') ... ok
sklearn.tree.tests.test_tree.test_sparse_criterion('ExtraTreeClassifier', 'zeros') ... ok
sklearn.tree.tests.test_tree.test_sparse_criterion('DecisionTreeClassifier', 'sparse-pos') ... ok
sklearn.tree.tests.test_tree.test_sparse_criterion('DecisionTreeClassifier', 'sparse-neg') ... ok
sklearn.tree.tests.test_tree.test_sparse_criterion('DecisionTreeClassifier', 'sparse-mix') ... ok
sklearn.tree.tests.test_tree.test_sparse_criterion('DecisionTreeClassifier', 'zeros') ... ok
sklearn.tree.tests.test_tree.test_explicit_sparse_zeros('ExtraTreeRegressor',) ... ok
sklearn.tree.tests.test_tree.test_explicit_sparse_zeros('DecisionTreeRegressor',) ... ok
sklearn.tree.tests.test_tree.test_explicit_sparse_zeros('ExtraTreeClassifier',) ... ok
sklearn.tree.tests.test_tree.test_explicit_sparse_zeros('DecisionTreeClassifier',) ... ok
sklearn.tree.tests.test_tree.test_1d_input('Presort-DecisionTreeRegressor',) ... ok
sklearn.tree.tests.test_tree.test_1d_input('ExtraTreeRegressor',) ... ok
sklearn.tree.tests.test_tree.test_1d_input('DecisionTreeRegressor',) ... ok
sklearn.tree.tests.test_tree.test_1d_input('ExtraTreeClassifier',) ... ok
sklearn.tree.tests.test_tree.test_1d_input('Presort-DecisionTreeClassifier',) ... ok
sklearn.tree.tests.test_tree.test_1d_input('DecisionTreeClassifier',) ... ok
sklearn.tree.tests.test_tree.test_min_weight_leaf_split_level('Presort-DecisionTreeRegressor',) ... ok
sklearn.tree.tests.test_tree.test_min_weight_leaf_split_level('ExtraTreeRegressor',) ... ok
sklearn.tree.tests.test_tree.test_min_weight_leaf_split_level('DecisionTreeRegressor',) ... ok
sklearn.tree.tests.test_tree.test_min_weight_leaf_split_level('ExtraTreeClassifier',) ... ok
sklearn.tree.tests.test_tree.test_min_weight_leaf_split_level('Presort-DecisionTreeClassifier',) ... ok
sklearn.tree.tests.test_tree.test_min_weight_leaf_split_level('DecisionTreeClassifier',) ... ok
sklearn.utils.tests.test_bench.test_total_seconds ... ok
sklearn.utils.tests.test_class_weight.test_compute_class_weight ... ok
sklearn.utils.tests.test_class_weight.test_compute_class_weight_not_present ... ok
sklearn.utils.tests.test_class_weight.test_compute_class_weight_auto_negative ... ok
sklearn.utils.tests.test_class_weight.test_compute_class_weight_auto_unordered ... ok
sklearn.utils.tests.test_class_weight.test_compute_sample_weight ... ok
sklearn.utils.tests.test_class_weight.test_compute_sample_weight_with_subsample ... ok
sklearn.utils.tests.test_class_weight.test_compute_sample_weight_errors ... ok
sklearn.utils.tests.test_extmath.test_density ... ok
sklearn.utils.tests.test_extmath.test_uniform_weights ... ok
sklearn.utils.tests.test_extmath.test_random_weights ... ok
sklearn.utils.tests.test_extmath.test_logsumexp ... ok
sklearn.utils.tests.test_extmath.test_randomized_svd_low_rank ... ok
sklearn.utils.tests.test_extmath.test_norm_squared_norm ... ok
sklearn.utils.tests.test_extmath.test_row_norms ... ok
sklearn.utils.tests.test_extmath.test_randomized_svd_low_rank_with_noise ... ok
sklearn.utils.tests.test_extmath.test_randomized_svd_infinite_rank ... ok
sklearn.utils.tests.test_extmath.test_randomized_svd_transpose_consistency ... ok
sklearn.utils.tests.test_extmath.test_svd_flip ... ok
sklearn.utils.tests.test_extmath.test_randomized_svd_sign_flip ... ok
sklearn.utils.tests.test_extmath.test_cartesian ... ok
sklearn.utils.tests.test_extmath.test_logistic_sigmoid ... ok
sklearn.utils.tests.test_extmath.test_fast_dot ... /root/.local/lib/python2.7/site-packages/sklearn/utils/extmath.py:105: NonBLASDotWarning: Data must be of same type. Supported types are 32 and 64 bit float. Falling back to np.dot.
  'Falling back to np.dot.', NonBLASDotWarning)
ok
sklearn.utils.tests.test_extmath.test_incremental_variance_update_formulas ... ok
sklearn.utils.tests.test_extmath.test_incremental_variance_ddof ... ok
sklearn.utils.tests.test_extmath.test_vector_sign_flip ... ok
sklearn.utils.tests.test_fast_dict.test_int_float_dict ... ok
sklearn.utils.tests.test_fast_dict.test_int_float_dict_argmin ... ok
sklearn.utils.tests.test_fixes.test_expit ... ok
sklearn.utils.tests.test_fixes.test_divide ... ok
sklearn.utils.tests.test_graph.test_graph_laplacian ... ok
sklearn.utils.tests.test_linear_assignment.test_hungarian ... ok
sklearn.utils.tests.test_metaestimators.test_delegated_docstring ... ok
sklearn.utils.tests.test_multiclass.test_unique_labels ... ok
sklearn.utils.tests.test_multiclass.test_is_label_indicator_matrix ... ok
sklearn.utils.tests.test_multiclass.test_is_multilabel ... ok
sklearn.utils.tests.test_multiclass.test_type_of_target ... ok
sklearn.utils.tests.test_multiclass.test_unique_labels_mixed_types ... ok
sklearn.utils.tests.test_multiclass.test_unique_labels_non_specific ... ok
sklearn.utils.tests.test_multiclass.test_is_sequence_of_sequences ... ok
sklearn.utils.tests.test_multiclass.test_class_distribution ... ok
sklearn.utils.tests.test_murmurhash.test_mmhash3_int ... ok
sklearn.utils.tests.test_murmurhash.test_mmhash3_int_array ... ok
sklearn.utils.tests.test_murmurhash.test_mmhash3_bytes ... ok
sklearn.utils.tests.test_murmurhash.test_mmhash3_unicode ... ok
sklearn.utils.tests.test_murmurhash.test_no_collision_on_byte_range ... ok
sklearn.utils.tests.test_murmurhash.test_uniform_distribution ... ok
sklearn.utils.tests.test_random.test_invalid_sample_without_replacement_algorithm ... ok
sklearn.utils.tests.test_random.test_sample_without_replacement_algorithms ... ok
sklearn.utils.tests.test_random.test_random_choice_csc ... /usr/lib/python2.7/dist-packages/scipy/sparse/compressed.py:486: SparseEfficiencyWarning: changing the sparsity structure of a csc_matrix is expensive. lil_matrix is more efficient.
  SparseEfficiencyWarning)
/root/.local/lib/python2.7/site-packages/sklearn/utils/random.py:279: RuntimeWarning: invalid value encountered in true_divide
  np.sum(class_probability_nz))
ok
sklearn.utils.tests.test_random.test_random_choice_csc_errors ... ok
sklearn.utils.tests.test_shortest_path.test_floyd_warshall ... ok
sklearn.utils.tests.test_shortest_path.test_dijkstra ... ok
sklearn.utils.tests.test_shortest_path.test_shortest_path ... ok
sklearn.utils.tests.test_shortest_path.test_dijkstra_bug_fix ... ok
sklearn.utils.tests.test_sparsefuncs.test_mean_variance_axis0 ... ok
sklearn.utils.tests.test_sparsefuncs.test_mean_variance_illegal_axis ... ok
sklearn.utils.tests.test_sparsefuncs.test_mean_variance_axis1 ... ok
sklearn.utils.tests.test_sparsefuncs.test_densify_rows ... ok
sklearn.utils.tests.test_sparsefuncs.test_inplace_column_scale ... ok
sklearn.utils.tests.test_sparsefuncs.test_inplace_row_scale ... ok
sklearn.utils.tests.test_sparsefuncs.test_inplace_swap_row ... ok
sklearn.utils.tests.test_sparsefuncs.test_inplace_swap_column ... ok
sklearn.utils.tests.test_sparsefuncs.test_min_max_axis0 ... ok
sklearn.utils.tests.test_sparsefuncs.test_min_max_axis1 ... ok
sklearn.utils.tests.test_sparsefuncs.test_min_max_axis_errors ... ok
sklearn.utils.tests.test_sparsefuncs.test_count_nonzero ... ok
sklearn.utils.tests.test_sparsefuncs.test_csc_row_median ... ok
sklearn.utils.tests.test_stats.test_cases([100], 'max', [1.0]) ... ok
sklearn.utils.tests.test_stats.test_cases([100, 100, 100], 'max', [3.0, 3.0, 3.0]) ... ok
sklearn.utils.tests.test_stats.test_cases([100, 300, 200], 'max', [1.0, 3.0, 2.0]) ... ok
sklearn.utils.tests.test_stats.test_cases([100, 200, 300, 200], 'max', [1.0, 3.0, 4.0, 3.0]) ... ok
sklearn.utils.tests.test_stats.test_cases([100, 200, 300, 200, 100], 'max', [2.0, 4.0, 5.0, 4.0, 2.0]) ... ok
test_warn (sklearn.utils.tests.test_testing.TestWarns) ... ok
test_warn_wrong_warning (sklearn.utils.tests.test_testing.TestWarns) ... ok
sklearn.utils.tests.test_testing.test_assert_less ... ok
sklearn.utils.tests.test_testing.test_assert_greater ... ok
sklearn.utils.tests.test_testing.test_assert_less_equal ... ok
sklearn.utils.tests.test_testing.test_assert_greater_equal ... ok
sklearn.utils.tests.test_testing.test_set_random_state ... ok
sklearn.utils.tests.test_testing.test_assert_raise_message ... ok
sklearn.utils.tests.test_utils.test_make_rng ... ok
sklearn.utils.tests.test_utils.test_resample_noarg ... ok
sklearn.utils.tests.test_utils.test_deprecated ... ok
sklearn.utils.tests.test_utils.test_resample_value_errors ... ok
sklearn.utils.tests.test_utils.test_safe_mask ... ok
sklearn.utils.tests.test_utils.test_pinvh_simple_real ... ok
sklearn.utils.tests.test_utils.test_pinvh_nonpositive ... ok
sklearn.utils.tests.test_utils.test_pinvh_simple_complex ... ok
sklearn.utils.tests.test_utils.test_column_or_1d ... ok
sklearn.utils.tests.test_utils.test_safe_indexing ... ok
sklearn.utils.tests.test_utils.test_safe_indexing_pandas ... SKIP: Pandas not found
sklearn.utils.tests.test_utils.test_safe_indexing_mock_pandas ... ok
sklearn.utils.tests.test_utils.test_shuffle_on_ndim_equals_three ... ok
sklearn.utils.tests.test_utils.test_shuffle_dont_convert_to_array ... ok
sklearn.utils.tests.test_validation.test_as_float_array ... ok
sklearn.utils.tests.test_validation.test_np_matrix ... ok
sklearn.utils.tests.test_validation.test_memmap ... ok
sklearn.utils.tests.test_validation.test_ordering ... ok
sklearn.utils.tests.test_validation.test_check_array ... ok
sklearn.utils.tests.test_validation.test_check_array_pandas_dtype_object_conversion ... ok
sklearn.utils.tests.test_validation.test_check_array_dtype_stability ... ok
sklearn.utils.tests.test_validation.test_check_array_min_samples_and_features_messages ... ok
sklearn.utils.tests.test_validation.test_has_fit_parameter ... ok
sklearn.utils.tests.test_validation.test_check_symmetric ... ok
sklearn.utils.tests.test_validation.test_check_is_fitted ... ok
sklearn.utils.tests.test_validation.test_check_consistent_length ... ok
sklearn.tests.test_base.test_clone ... ok
sklearn.tests.test_base.test_clone_2 ... ok
sklearn.tests.test_base.test_clone_buggy ... ok
sklearn.tests.test_base.test_clone_empty_array ... ok
sklearn.tests.test_base.test_repr ... ok
sklearn.tests.test_base.test_str ... ok
sklearn.tests.test_base.test_get_params ... ok
sklearn.tests.test_base.test_get_params_deprecated ... ok
sklearn.tests.test_base.test_is_classifier ... ok
sklearn.tests.test_base.test_set_params ... ok
sklearn.tests.test_base.test_score_sample_weight ... ok
Test calibration objects with isotonic and sigmoid ... ok
sklearn.tests.test_calibration.test_sample_weight_warning ... ok
Test calibration for multiclass ... ok
Test calibration for prefitted classifiers ... ok
Test calibration values with Platt sigmoid model ... ok
Check calibration_curve function ... ok
Test that calibration can accept nan ... ok
sklearn.tests.test_check_build.test_raise_build_error ... ok
sklearn.tests.test_common.test_all_estimator_no_base_class ... /root/.local/lib/python2.7/site-packages/sklearn/metrics/metrics.py:4: DeprecationWarning: sklearn.metrics.metrics is deprecated and will be removed in 0.18. Please import from sklearn.metrics
  DeprecationWarning)
ok
sklearn.tests.test_common.test_all_estimators('ARDRegression', <class 'sklearn.linear_model.bayes.ARDRegression'>) ... ok
sklearn.tests.test_common.test_all_estimators('AdaBoostClassifier', <class 'sklearn.ensemble.weight_boosting.AdaBoostClassifier'>) ... ok
sklearn.tests.test_common.test_all_estimators('AdaBoostRegressor', <class 'sklearn.ensemble.weight_boosting.AdaBoostRegressor'>) ... ok
sklearn.tests.test_common.test_all_estimators('AdditiveChi2Sampler', <class 'sklearn.kernel_approximation.AdditiveChi2Sampler'>) ... ok
sklearn.tests.test_common.test_all_estimators('AffinityPropagation', <class 'sklearn.cluster.affinity_propagation_.AffinityPropagation'>) ... ok
sklearn.tests.test_common.test_all_estimators('AgglomerativeClustering', <class 'sklearn.cluster.hierarchical.AgglomerativeClustering'>) ... ok
sklearn.tests.test_common.test_all_estimators('BaggingClassifier', <class 'sklearn.ensemble.bagging.BaggingClassifier'>) ... ok
sklearn.tests.test_common.test_all_estimators('BaggingRegressor', <class 'sklearn.ensemble.bagging.BaggingRegressor'>) ... ok
sklearn.tests.test_common.test_all_estimators('BaseEnsemble', <class 'sklearn.ensemble.base.BaseEnsemble'>) ... ok
sklearn.tests.test_common.test_all_estimators('BayesianRidge', <class 'sklearn.linear_model.bayes.BayesianRidge'>) ... ok
sklearn.tests.test_common.test_all_estimators('BernoulliNB', <class 'sklearn.naive_bayes.BernoulliNB'>) ... ok
sklearn.tests.test_common.test_all_estimators('BernoulliRBM', <class 'sklearn.neural_network.rbm.BernoulliRBM'>) ... ok
sklearn.tests.test_common.test_all_estimators('Binarizer', <class 'sklearn.preprocessing.data.Binarizer'>) ... ok
sklearn.tests.test_common.test_all_estimators('Birch', <class 'sklearn.cluster.birch.Birch'>) ... ok
sklearn.tests.test_common.test_all_estimators('CCA', <class 'sklearn.cross_decomposition.cca_.CCA'>) ... ok
sklearn.tests.test_common.test_all_estimators('CalibratedClassifierCV', <class 'sklearn.calibration.CalibratedClassifierCV'>) ... ok
sklearn.tests.test_common.test_all_estimators('DBSCAN', <class 'sklearn.cluster.dbscan_.DBSCAN'>) ... ok
sklearn.tests.test_common.test_all_estimators('DPGMM', <class 'sklearn.mixture.dpgmm.DPGMM'>) ... ok
sklearn.tests.test_common.test_all_estimators('DecisionTreeClassifier', <class 'sklearn.tree.tree.DecisionTreeClassifier'>) ... ok
sklearn.tests.test_common.test_all_estimators('DecisionTreeRegressor', <class 'sklearn.tree.tree.DecisionTreeRegressor'>) ... ok
sklearn.tests.test_common.test_all_estimators('DictionaryLearning', <class 'sklearn.decomposition.dict_learning.DictionaryLearning'>) ... ok
sklearn.tests.test_common.test_all_estimators('ElasticNet', <class 'sklearn.linear_model.coordinate_descent.ElasticNet'>) ... ok
sklearn.tests.test_common.test_all_estimators('ElasticNetCV', <class 'sklearn.linear_model.coordinate_descent.ElasticNetCV'>) ... ok
sklearn.tests.test_common.test_all_estimators('EmpiricalCovariance', <class 'sklearn.covariance.empirical_covariance_.EmpiricalCovariance'>) ... ok
sklearn.tests.test_common.test_all_estimators('ExtraTreeClassifier', <class 'sklearn.tree.tree.ExtraTreeClassifier'>) ... ok
sklearn.tests.test_common.test_all_estimators('ExtraTreeRegressor', <class 'sklearn.tree.tree.ExtraTreeRegressor'>) ... ok
sklearn.tests.test_common.test_all_estimators('ExtraTreesClassifier', <class 'sklearn.ensemble.forest.ExtraTreesClassifier'>) ... ok
sklearn.tests.test_common.test_all_estimators('ExtraTreesRegressor', <class 'sklearn.ensemble.forest.ExtraTreesRegressor'>) ... ok
sklearn.tests.test_common.test_all_estimators('FactorAnalysis', <class 'sklearn.decomposition.factor_analysis.FactorAnalysis'>) ... ok
sklearn.tests.test_common.test_all_estimators('FastICA', <class 'sklearn.decomposition.fastica_.FastICA'>) ... ok
sklearn.tests.test_common.test_all_estimators('FeatureAgglomeration', <class 'sklearn.cluster.hierarchical.FeatureAgglomeration'>) ... ok
sklearn.tests.test_common.test_all_estimators('GMM', <class 'sklearn.mixture.gmm.GMM'>) ... ok
sklearn.tests.test_common.test_all_estimators('GMMHMM', <class 'sklearn.hmm.GMMHMM'>) ... ok
sklearn.tests.test_common.test_all_estimators('GaussianHMM', <class 'sklearn.hmm.GaussianHMM'>) ... ok
sklearn.tests.test_common.test_all_estimators('GaussianNB', <class 'sklearn.naive_bayes.GaussianNB'>) ... ok
sklearn.tests.test_common.test_all_estimators('GaussianProcess', <class 'sklearn.gaussian_process.gaussian_process.GaussianProcess'>) ... ok
sklearn.tests.test_common.test_all_estimators('GaussianRandomProjection', <class 'sklearn.random_projection.GaussianRandomProjection'>) ... ok
sklearn.tests.test_common.test_all_estimators('GenericUnivariateSelect', <class 'sklearn.feature_selection.univariate_selection.GenericUnivariateSelect'>) ... ok
sklearn.tests.test_common.test_all_estimators('GradientBoostingClassifier', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingClassifier'>) ... ok
sklearn.tests.test_common.test_all_estimators('GradientBoostingRegressor', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingRegressor'>) ... ok
sklearn.tests.test_common.test_all_estimators('GraphLasso', <class 'sklearn.covariance.graph_lasso_.GraphLasso'>) ... ok
sklearn.tests.test_common.test_all_estimators('GraphLassoCV', <class 'sklearn.covariance.graph_lasso_.GraphLassoCV'>) ... ok
sklearn.tests.test_common.test_all_estimators('Imputer', <class 'sklearn.preprocessing.imputation.Imputer'>) ... ok
sklearn.tests.test_common.test_all_estimators('IncrementalPCA', <class 'sklearn.decomposition.incremental_pca.IncrementalPCA'>) ... ok
sklearn.tests.test_common.test_all_estimators('Isomap', <class 'sklearn.manifold.isomap.Isomap'>) ... ok
sklearn.tests.test_common.test_all_estimators('KMeans', <class 'sklearn.cluster.k_means_.KMeans'>) ... ok
sklearn.tests.test_common.test_all_estimators('KNeighborsClassifier', <class 'sklearn.neighbors.classification.KNeighborsClassifier'>) ... ok
sklearn.tests.test_common.test_all_estimators('KNeighborsRegressor', <class 'sklearn.neighbors.regression.KNeighborsRegressor'>) ... ok
sklearn.tests.test_common.test_all_estimators('KernelCenterer', <class 'sklearn.preprocessing.data.KernelCenterer'>) ... ok
sklearn.tests.test_common.test_all_estimators('KernelDensity', <class 'sklearn.neighbors.kde.KernelDensity'>) ... ok
sklearn.tests.test_common.test_all_estimators('KernelPCA', <class 'sklearn.decomposition.kernel_pca.KernelPCA'>) ... ok
sklearn.tests.test_common.test_all_estimators('KernelRidge', <class 'sklearn.kernel_ridge.KernelRidge'>) ... ok
sklearn.tests.test_common.test_all_estimators('LDA', <class 'sklearn.lda.LDA'>) ... ok
sklearn.tests.test_common.test_all_estimators('LSHForest', <class 'sklearn.neighbors.approximate.LSHForest'>) ... ok
sklearn.tests.test_common.test_all_estimators('LabelPropagation', <class 'sklearn.semi_supervised.label_propagation.LabelPropagation'>) ... ok
sklearn.tests.test_common.test_all_estimators('LabelSpreading', <class 'sklearn.semi_supervised.label_propagation.LabelSpreading'>) ... ok
sklearn.tests.test_common.test_all_estimators('Lars', <class 'sklearn.linear_model.least_angle.Lars'>) ... ok
sklearn.tests.test_common.test_all_estimators('LarsCV', <class 'sklearn.linear_model.least_angle.LarsCV'>) ... ok
sklearn.tests.test_common.test_all_estimators('Lasso', <class 'sklearn.linear_model.coordinate_descent.Lasso'>) ... ok
sklearn.tests.test_common.test_all_estimators('LassoCV', <class 'sklearn.linear_model.coordinate_descent.LassoCV'>) ... ok
sklearn.tests.test_common.test_all_estimators('LassoLars', <class 'sklearn.linear_model.least_angle.LassoLars'>) ... ok
sklearn.tests.test_common.test_all_estimators('LassoLarsCV', <class 'sklearn.linear_model.least_angle.LassoLarsCV'>) ... ok
sklearn.tests.test_common.test_all_estimators('LassoLarsIC', <class 'sklearn.linear_model.least_angle.LassoLarsIC'>) ... ok
sklearn.tests.test_common.test_all_estimators('LedoitWolf', <class 'sklearn.covariance.shrunk_covariance_.LedoitWolf'>) ... ok
sklearn.tests.test_common.test_all_estimators('LinearRegression', <class 'sklearn.linear_model.base.LinearRegression'>) ... ok
sklearn.tests.test_common.test_all_estimators('LinearSVC', <class 'sklearn.svm.classes.LinearSVC'>) ... ok
sklearn.tests.test_common.test_all_estimators('LinearSVR', <class 'sklearn.svm.classes.LinearSVR'>) ... ok
sklearn.tests.test_common.test_all_estimators('LocallyLinearEmbedding', <class 'sklearn.manifold.locally_linear.LocallyLinearEmbedding'>) ... ok
sklearn.tests.test_common.test_all_estimators('LogisticRegression', <class 'sklearn.linear_model.logistic.LogisticRegression'>) ... ok
sklearn.tests.test_common.test_all_estimators('LogisticRegressionCV', <class 'sklearn.linear_model.logistic.LogisticRegressionCV'>) ... ok
sklearn.tests.test_common.test_all_estimators('MDS', <class 'sklearn.manifold.mds.MDS'>) ... ok
sklearn.tests.test_common.test_all_estimators('MeanShift', <class 'sklearn.cluster.mean_shift_.MeanShift'>) ... ok
sklearn.tests.test_common.test_all_estimators('MinCovDet', <class 'sklearn.covariance.robust_covariance.MinCovDet'>) ... ok
sklearn.tests.test_common.test_all_estimators('MinMaxScaler', <class 'sklearn.preprocessing.data.MinMaxScaler'>) ... ok
sklearn.tests.test_common.test_all_estimators('MiniBatchDictionaryLearning', <class 'sklearn.decomposition.dict_learning.MiniBatchDictionaryLearning'>) ... ok
sklearn.tests.test_common.test_all_estimators('MiniBatchKMeans', <class 'sklearn.cluster.k_means_.MiniBatchKMeans'>) ... ok
sklearn.tests.test_common.test_all_estimators('MiniBatchSparsePCA', <class 'sklearn.decomposition.sparse_pca.MiniBatchSparsePCA'>) ... ok
sklearn.tests.test_common.test_all_estimators('MultiTaskElasticNet', <class 'sklearn.linear_model.coordinate_descent.MultiTaskElasticNet'>) ... ok
sklearn.tests.test_common.test_all_estimators('MultiTaskElasticNetCV', <class 'sklearn.linear_model.coordinate_descent.MultiTaskElasticNetCV'>) ... ok
sklearn.tests.test_common.test_all_estimators('MultiTaskLasso', <class 'sklearn.linear_model.coordinate_descent.MultiTaskLasso'>) ... ok
sklearn.tests.test_common.test_all_estimators('MultiTaskLassoCV', <class 'sklearn.linear_model.coordinate_descent.MultiTaskLassoCV'>) ... ok
sklearn.tests.test_common.test_all_estimators('MultinomialHMM', <class 'sklearn.hmm.MultinomialHMM'>) ... ok
sklearn.tests.test_common.test_all_estimators('MultinomialNB', <class 'sklearn.naive_bayes.MultinomialNB'>) ... ok
sklearn.tests.test_common.test_all_estimators('NMF', <class 'sklearn.decomposition.nmf.NMF'>) ... ok
sklearn.tests.test_common.test_all_estimators('NearestCentroid', <class 'sklearn.neighbors.nearest_centroid.NearestCentroid'>) ... ok
sklearn.tests.test_common.test_all_estimators('NearestNeighbors', <class 'sklearn.neighbors.unsupervised.NearestNeighbors'>) ... ok
sklearn.tests.test_common.test_all_estimators('Normalizer', <class 'sklearn.preprocessing.data.Normalizer'>) ... ok
sklearn.tests.test_common.test_all_estimators('NuSVC', <class 'sklearn.svm.classes.NuSVC'>) ... ok
sklearn.tests.test_common.test_all_estimators('NuSVR', <class 'sklearn.svm.classes.NuSVR'>) ... ok
sklearn.tests.test_common.test_all_estimators('Nystroem', <class 'sklearn.kernel_approximation.Nystroem'>) ... ok
sklearn.tests.test_common.test_all_estimators('OAS', <class 'sklearn.covariance.shrunk_covariance_.OAS'>) ... ok
sklearn.tests.test_common.test_all_estimators('OneClassSVM', <class 'sklearn.svm.classes.OneClassSVM'>) ... ok
sklearn.tests.test_common.test_all_estimators('OneVsOneClassifier', <class 'sklearn.multiclass.OneVsOneClassifier'>) ... ok
sklearn.tests.test_common.test_all_estimators('OneVsRestClassifier', <class 'sklearn.multiclass.OneVsRestClassifier'>) ... ok
sklearn.tests.test_common.test_all_estimators('OrthogonalMatchingPursuit', <class 'sklearn.linear_model.omp.OrthogonalMatchingPursuit'>) ... ok
sklearn.tests.test_common.test_all_estimators('OrthogonalMatchingPursuitCV', <class 'sklearn.linear_model.omp.OrthogonalMatchingPursuitCV'>) ... ok
sklearn.tests.test_common.test_all_estimators('OutputCodeClassifier', <class 'sklearn.multiclass.OutputCodeClassifier'>) ... ok
sklearn.tests.test_common.test_all_estimators('PCA', <class 'sklearn.decomposition.pca.PCA'>) ... ok
sklearn.tests.test_common.test_all_estimators('PLSCanonical', <class 'sklearn.cross_decomposition.pls_.PLSCanonical'>) ... ok
sklearn.tests.test_common.test_all_estimators('PLSRegression', <class 'sklearn.cross_decomposition.pls_.PLSRegression'>) ... ok
sklearn.tests.test_common.test_all_estimators('PLSSVD', <class 'sklearn.cross_decomposition.pls_.PLSSVD'>) ... ok
sklearn.tests.test_common.test_all_estimators('PassiveAggressiveClassifier', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveClassifier'>) ... ok
sklearn.tests.test_common.test_all_estimators('PassiveAggressiveRegressor', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveRegressor'>) ... ok
sklearn.tests.test_common.test_all_estimators('Perceptron', <class 'sklearn.linear_model.perceptron.Perceptron'>) ... ok
sklearn.tests.test_common.test_all_estimators('ProjectedGradientNMF', <class 'sklearn.decomposition.nmf.ProjectedGradientNMF'>) ... ok
sklearn.tests.test_common.test_all_estimators('QDA', <class 'sklearn.qda.QDA'>) ... ok
sklearn.tests.test_common.test_all_estimators('RANSACRegressor', <class 'sklearn.linear_model.ransac.RANSACRegressor'>) ... ok
sklearn.tests.test_common.test_all_estimators('RBFSampler', <class 'sklearn.kernel_approximation.RBFSampler'>) ... ok
sklearn.tests.test_common.test_all_estimators('RFE', <class 'sklearn.feature_selection.rfe.RFE'>) ... ok
sklearn.tests.test_common.test_all_estimators('RFECV', <class 'sklearn.feature_selection.rfe.RFECV'>) ... ok
sklearn.tests.test_common.test_all_estimators('RadiusNeighborsClassifier', <class 'sklearn.neighbors.classification.RadiusNeighborsClassifier'>) ... ok
sklearn.tests.test_common.test_all_estimators('RadiusNeighborsRegressor', <class 'sklearn.neighbors.regression.RadiusNeighborsRegressor'>) ... ok
sklearn.tests.test_common.test_all_estimators('RandomForestClassifier', <class 'sklearn.ensemble.forest.RandomForestClassifier'>) ... ok
sklearn.tests.test_common.test_all_estimators('RandomForestRegressor', <class 'sklearn.ensemble.forest.RandomForestRegressor'>) ... ok
sklearn.tests.test_common.test_all_estimators('RandomizedLasso', <class 'sklearn.linear_model.randomized_l1.RandomizedLasso'>) ... ok
sklearn.tests.test_common.test_all_estimators('RandomizedLogisticRegression', <class 'sklearn.linear_model.randomized_l1.RandomizedLogisticRegression'>) ... ok
sklearn.tests.test_common.test_all_estimators('RandomizedPCA', <class 'sklearn.decomposition.pca.RandomizedPCA'>) ... ok
sklearn.tests.test_common.test_all_estimators('Ridge', <class 'sklearn.linear_model.ridge.Ridge'>) ... ok
sklearn.tests.test_common.test_all_estimators('RidgeCV', <class 'sklearn.linear_model.ridge.RidgeCV'>) ... ok
sklearn.tests.test_common.test_all_estimators('RidgeClassifier', <class 'sklearn.linear_model.ridge.RidgeClassifier'>) ... ok
sklearn.tests.test_common.test_all_estimators('RidgeClassifierCV', <class 'sklearn.linear_model.ridge.RidgeClassifierCV'>) ... ok
sklearn.tests.test_common.test_all_estimators('SGDClassifier', <class 'sklearn.linear_model.stochastic_gradient.SGDClassifier'>) ... ok
sklearn.tests.test_common.test_all_estimators('SGDRegressor', <class 'sklearn.linear_model.stochastic_gradient.SGDRegressor'>) ... ok
sklearn.tests.test_common.test_all_estimators('SVC', <class 'sklearn.svm.classes.SVC'>) ... ok
sklearn.tests.test_common.test_all_estimators('SVR', <class 'sklearn.svm.classes.SVR'>) ... ok
sklearn.tests.test_common.test_all_estimators('SelectFdr', <class 'sklearn.feature_selection.univariate_selection.SelectFdr'>) ... ok
sklearn.tests.test_common.test_all_estimators('SelectFpr', <class 'sklearn.feature_selection.univariate_selection.SelectFpr'>) ... ok
sklearn.tests.test_common.test_all_estimators('SelectFwe', <class 'sklearn.feature_selection.univariate_selection.SelectFwe'>) ... ok
sklearn.tests.test_common.test_all_estimators('SelectKBest', <class 'sklearn.feature_selection.univariate_selection.SelectKBest'>) ... ok
sklearn.tests.test_common.test_all_estimators('SelectPercentile', <class 'sklearn.feature_selection.univariate_selection.SelectPercentile'>) ... ok
sklearn.tests.test_common.test_all_estimators('ShrunkCovariance', <class 'sklearn.covariance.shrunk_covariance_.ShrunkCovariance'>) ... ok
sklearn.tests.test_common.test_all_estimators('SkewedChi2Sampler', <class 'sklearn.kernel_approximation.SkewedChi2Sampler'>) ... ok
sklearn.tests.test_common.test_all_estimators('SparsePCA', <class 'sklearn.decomposition.sparse_pca.SparsePCA'>) ... ok
sklearn.tests.test_common.test_all_estimators('SparseRandomProjection', <class 'sklearn.random_projection.SparseRandomProjection'>) ... ok
sklearn.tests.test_common.test_all_estimators('SpectralBiclustering', <class 'sklearn.cluster.bicluster.SpectralBiclustering'>) ... ok
sklearn.tests.test_common.test_all_estimators('SpectralClustering', <class 'sklearn.cluster.spectral.SpectralClustering'>) ... ok
sklearn.tests.test_common.test_all_estimators('SpectralCoclustering', <class 'sklearn.cluster.bicluster.SpectralCoclustering'>) ... ok
sklearn.tests.test_common.test_all_estimators('SpectralEmbedding', <class 'sklearn.manifold.spectral_embedding_.SpectralEmbedding'>) ... ok
sklearn.tests.test_common.test_all_estimators('StandardScaler', <class 'sklearn.preprocessing.data.StandardScaler'>) ... ok
sklearn.tests.test_common.test_all_estimators('TSNE', <class 'sklearn.manifold.t_sne.TSNE'>) ... ok
sklearn.tests.test_common.test_all_estimators('TheilSenRegressor', <class 'sklearn.linear_model.theil_sen.TheilSenRegressor'>) ... ok
sklearn.tests.test_common.test_all_estimators('VBGMM', <class 'sklearn.mixture.dpgmm.VBGMM'>) ... ok
sklearn.tests.test_common.test_all_estimators('VarianceThreshold', <class 'sklearn.feature_selection.variance_threshold.VarianceThreshold'>) ... ok
sklearn.tests.test_common.test_all_estimators('Ward', <class 'sklearn.cluster.hierarchical.Ward'>) ... ok
sklearn.tests.test_common.test_all_estimators('WardAgglomeration', <class 'sklearn.cluster.hierarchical.WardAgglomeration'>) ... ok
sklearn.tests.test_common.test_all_estimators('_BaseHMM', <class 'sklearn.hmm._BaseHMM'>) ... ok
sklearn.tests.test_common.test_all_estimators('_BaseRidgeCV', <class 'sklearn.linear_model.ridge._BaseRidgeCV'>) ... ok
sklearn.tests.test_common.test_all_estimators('_ConstantPredictor', <class 'sklearn.multiclass._ConstantPredictor'>) ... ok
sklearn.tests.test_common.test_all_estimators('_RidgeGCV', <class 'sklearn.linear_model.ridge._RidgeGCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('ARDRegression', <class 'sklearn.linear_model.bayes.ARDRegression'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('ARDRegression', <class 'sklearn.linear_model.bayes.ARDRegression'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('ARDRegression', <class 'sklearn.linear_model.bayes.ARDRegression'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('ARDRegression', <class 'sklearn.linear_model.bayes.ARDRegression'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('ARDRegression', <class 'sklearn.linear_model.bayes.ARDRegression'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('ARDRegression', <class 'sklearn.linear_model.bayes.ARDRegression'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('ARDRegression', <class 'sklearn.linear_model.bayes.ARDRegression'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('ARDRegression', <class 'sklearn.linear_model.bayes.ARDRegression'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('AdaBoostClassifier', <class 'sklearn.ensemble.weight_boosting.AdaBoostClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('AdaBoostClassifier', <class 'sklearn.ensemble.weight_boosting.AdaBoostClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('AdaBoostClassifier', <class 'sklearn.ensemble.weight_boosting.AdaBoostClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('AdaBoostClassifier', <class 'sklearn.ensemble.weight_boosting.AdaBoostClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('AdaBoostClassifier', <class 'sklearn.ensemble.weight_boosting.AdaBoostClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('AdaBoostClassifier', <class 'sklearn.ensemble.weight_boosting.AdaBoostClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('AdaBoostClassifier', <class 'sklearn.ensemble.weight_boosting.AdaBoostClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('AdaBoostClassifier', <class 'sklearn.ensemble.weight_boosting.AdaBoostClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('AdaBoostRegressor', <class 'sklearn.ensemble.weight_boosting.AdaBoostRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('AdaBoostRegressor', <class 'sklearn.ensemble.weight_boosting.AdaBoostRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('AdaBoostRegressor', <class 'sklearn.ensemble.weight_boosting.AdaBoostRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('AdaBoostRegressor', <class 'sklearn.ensemble.weight_boosting.AdaBoostRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('AdaBoostRegressor', <class 'sklearn.ensemble.weight_boosting.AdaBoostRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('AdaBoostRegressor', <class 'sklearn.ensemble.weight_boosting.AdaBoostRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('AdaBoostRegressor', <class 'sklearn.ensemble.weight_boosting.AdaBoostRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('AdaBoostRegressor', <class 'sklearn.ensemble.weight_boosting.AdaBoostRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('AdditiveChi2Sampler', <class 'sklearn.kernel_approximation.AdditiveChi2Sampler'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('AdditiveChi2Sampler', <class 'sklearn.kernel_approximation.AdditiveChi2Sampler'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('AdditiveChi2Sampler', <class 'sklearn.kernel_approximation.AdditiveChi2Sampler'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('AdditiveChi2Sampler', <class 'sklearn.kernel_approximation.AdditiveChi2Sampler'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('AdditiveChi2Sampler', <class 'sklearn.kernel_approximation.AdditiveChi2Sampler'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('AdditiveChi2Sampler', <class 'sklearn.kernel_approximation.AdditiveChi2Sampler'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('AdditiveChi2Sampler', <class 'sklearn.kernel_approximation.AdditiveChi2Sampler'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('AdditiveChi2Sampler', <class 'sklearn.kernel_approximation.AdditiveChi2Sampler'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('AffinityPropagation', <class 'sklearn.cluster.affinity_propagation_.AffinityPropagation'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('AffinityPropagation', <class 'sklearn.cluster.affinity_propagation_.AffinityPropagation'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('AffinityPropagation', <class 'sklearn.cluster.affinity_propagation_.AffinityPropagation'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('AffinityPropagation', <class 'sklearn.cluster.affinity_propagation_.AffinityPropagation'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('AffinityPropagation', <class 'sklearn.cluster.affinity_propagation_.AffinityPropagation'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('AffinityPropagation', <class 'sklearn.cluster.affinity_propagation_.AffinityPropagation'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('AffinityPropagation', <class 'sklearn.cluster.affinity_propagation_.AffinityPropagation'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('AffinityPropagation', <class 'sklearn.cluster.affinity_propagation_.AffinityPropagation'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('AgglomerativeClustering', <class 'sklearn.cluster.hierarchical.AgglomerativeClustering'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('AgglomerativeClustering', <class 'sklearn.cluster.hierarchical.AgglomerativeClustering'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('AgglomerativeClustering', <class 'sklearn.cluster.hierarchical.AgglomerativeClustering'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('AgglomerativeClustering', <class 'sklearn.cluster.hierarchical.AgglomerativeClustering'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('AgglomerativeClustering', <class 'sklearn.cluster.hierarchical.AgglomerativeClustering'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('AgglomerativeClustering', <class 'sklearn.cluster.hierarchical.AgglomerativeClustering'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('AgglomerativeClustering', <class 'sklearn.cluster.hierarchical.AgglomerativeClustering'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('AgglomerativeClustering', <class 'sklearn.cluster.hierarchical.AgglomerativeClustering'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('BaggingClassifier', <class 'sklearn.ensemble.bagging.BaggingClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('BaggingClassifier', <class 'sklearn.ensemble.bagging.BaggingClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('BaggingClassifier', <class 'sklearn.ensemble.bagging.BaggingClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('BaggingClassifier', <class 'sklearn.ensemble.bagging.BaggingClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('BaggingClassifier', <class 'sklearn.ensemble.bagging.BaggingClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('BaggingClassifier', <class 'sklearn.ensemble.bagging.BaggingClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('BaggingClassifier', <class 'sklearn.ensemble.bagging.BaggingClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('BaggingClassifier', <class 'sklearn.ensemble.bagging.BaggingClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('BaggingRegressor', <class 'sklearn.ensemble.bagging.BaggingRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('BaggingRegressor', <class 'sklearn.ensemble.bagging.BaggingRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('BaggingRegressor', <class 'sklearn.ensemble.bagging.BaggingRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('BaggingRegressor', <class 'sklearn.ensemble.bagging.BaggingRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('BaggingRegressor', <class 'sklearn.ensemble.bagging.BaggingRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('BaggingRegressor', <class 'sklearn.ensemble.bagging.BaggingRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('BaggingRegressor', <class 'sklearn.ensemble.bagging.BaggingRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('BaggingRegressor', <class 'sklearn.ensemble.bagging.BaggingRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('BayesianRidge', <class 'sklearn.linear_model.bayes.BayesianRidge'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('BayesianRidge', <class 'sklearn.linear_model.bayes.BayesianRidge'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('BayesianRidge', <class 'sklearn.linear_model.bayes.BayesianRidge'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('BayesianRidge', <class 'sklearn.linear_model.bayes.BayesianRidge'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('BayesianRidge', <class 'sklearn.linear_model.bayes.BayesianRidge'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('BayesianRidge', <class 'sklearn.linear_model.bayes.BayesianRidge'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('BayesianRidge', <class 'sklearn.linear_model.bayes.BayesianRidge'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('BayesianRidge', <class 'sklearn.linear_model.bayes.BayesianRidge'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('BernoulliNB', <class 'sklearn.naive_bayes.BernoulliNB'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('BernoulliNB', <class 'sklearn.naive_bayes.BernoulliNB'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('BernoulliNB', <class 'sklearn.naive_bayes.BernoulliNB'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('BernoulliNB', <class 'sklearn.naive_bayes.BernoulliNB'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('BernoulliNB', <class 'sklearn.naive_bayes.BernoulliNB'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('BernoulliNB', <class 'sklearn.naive_bayes.BernoulliNB'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('BernoulliNB', <class 'sklearn.naive_bayes.BernoulliNB'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('BernoulliNB', <class 'sklearn.naive_bayes.BernoulliNB'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('BernoulliRBM', <class 'sklearn.neural_network.rbm.BernoulliRBM'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('BernoulliRBM', <class 'sklearn.neural_network.rbm.BernoulliRBM'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('BernoulliRBM', <class 'sklearn.neural_network.rbm.BernoulliRBM'>) ... /root/.local/lib/python2.7/site-packages/sklearn/utils/extmath.py:105: NonBLASDotWarning: Data must be of same type. Supported types are 32 and 64 bit float. Falling back to np.dot.
  'Falling back to np.dot.', NonBLASDotWarning)
ok
sklearn.tests.test_common.test_non_meta_estimators('BernoulliRBM', <class 'sklearn.neural_network.rbm.BernoulliRBM'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('BernoulliRBM', <class 'sklearn.neural_network.rbm.BernoulliRBM'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('BernoulliRBM', <class 'sklearn.neural_network.rbm.BernoulliRBM'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('BernoulliRBM', <class 'sklearn.neural_network.rbm.BernoulliRBM'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('BernoulliRBM', <class 'sklearn.neural_network.rbm.BernoulliRBM'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Binarizer', <class 'sklearn.preprocessing.data.Binarizer'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Binarizer', <class 'sklearn.preprocessing.data.Binarizer'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Binarizer', <class 'sklearn.preprocessing.data.Binarizer'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Binarizer', <class 'sklearn.preprocessing.data.Binarizer'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Binarizer', <class 'sklearn.preprocessing.data.Binarizer'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Binarizer', <class 'sklearn.preprocessing.data.Binarizer'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Binarizer', <class 'sklearn.preprocessing.data.Binarizer'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Binarizer', <class 'sklearn.preprocessing.data.Binarizer'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Birch', <class 'sklearn.cluster.birch.Birch'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Birch', <class 'sklearn.cluster.birch.Birch'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Birch', <class 'sklearn.cluster.birch.Birch'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Birch', <class 'sklearn.cluster.birch.Birch'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Birch', <class 'sklearn.cluster.birch.Birch'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Birch', <class 'sklearn.cluster.birch.Birch'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Birch', <class 'sklearn.cluster.birch.Birch'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Birch', <class 'sklearn.cluster.birch.Birch'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('CCA', <class 'sklearn.cross_decomposition.cca_.CCA'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('CCA', <class 'sklearn.cross_decomposition.cca_.CCA'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('CCA', <class 'sklearn.cross_decomposition.cca_.CCA'>) ... /root/.local/lib/python2.7/site-packages/sklearn/cross_decomposition/pls_.py:277: UserWarning: Y residual constant at iteration 1
  warnings.warn('Y residual constant at iteration %s' % k)
ok
sklearn.tests.test_common.test_non_meta_estimators('CCA', <class 'sklearn.cross_decomposition.cca_.CCA'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('CCA', <class 'sklearn.cross_decomposition.cca_.CCA'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('CCA', <class 'sklearn.cross_decomposition.cca_.CCA'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('CCA', <class 'sklearn.cross_decomposition.cca_.CCA'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('CalibratedClassifierCV', <class 'sklearn.calibration.CalibratedClassifierCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('CalibratedClassifierCV', <class 'sklearn.calibration.CalibratedClassifierCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('CalibratedClassifierCV', <class 'sklearn.calibration.CalibratedClassifierCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('CalibratedClassifierCV', <class 'sklearn.calibration.CalibratedClassifierCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('CalibratedClassifierCV', <class 'sklearn.calibration.CalibratedClassifierCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('CalibratedClassifierCV', <class 'sklearn.calibration.CalibratedClassifierCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('CalibratedClassifierCV', <class 'sklearn.calibration.CalibratedClassifierCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('CalibratedClassifierCV', <class 'sklearn.calibration.CalibratedClassifierCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('DBSCAN', <class 'sklearn.cluster.dbscan_.DBSCAN'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('DBSCAN', <class 'sklearn.cluster.dbscan_.DBSCAN'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('DBSCAN', <class 'sklearn.cluster.dbscan_.DBSCAN'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('DBSCAN', <class 'sklearn.cluster.dbscan_.DBSCAN'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('DBSCAN', <class 'sklearn.cluster.dbscan_.DBSCAN'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('DBSCAN', <class 'sklearn.cluster.dbscan_.DBSCAN'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('DBSCAN', <class 'sklearn.cluster.dbscan_.DBSCAN'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('DBSCAN', <class 'sklearn.cluster.dbscan_.DBSCAN'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('DPGMM', <class 'sklearn.mixture.dpgmm.DPGMM'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('DPGMM', <class 'sklearn.mixture.dpgmm.DPGMM'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('DPGMM', <class 'sklearn.mixture.dpgmm.DPGMM'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('DPGMM', <class 'sklearn.mixture.dpgmm.DPGMM'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('DPGMM', <class 'sklearn.mixture.dpgmm.DPGMM'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('DPGMM', <class 'sklearn.mixture.dpgmm.DPGMM'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('DPGMM', <class 'sklearn.mixture.dpgmm.DPGMM'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('DPGMM', <class 'sklearn.mixture.dpgmm.DPGMM'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('DecisionTreeClassifier', <class 'sklearn.tree.tree.DecisionTreeClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('DecisionTreeClassifier', <class 'sklearn.tree.tree.DecisionTreeClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('DecisionTreeClassifier', <class 'sklearn.tree.tree.DecisionTreeClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('DecisionTreeClassifier', <class 'sklearn.tree.tree.DecisionTreeClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('DecisionTreeClassifier', <class 'sklearn.tree.tree.DecisionTreeClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('DecisionTreeClassifier', <class 'sklearn.tree.tree.DecisionTreeClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('DecisionTreeClassifier', <class 'sklearn.tree.tree.DecisionTreeClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('DecisionTreeClassifier', <class 'sklearn.tree.tree.DecisionTreeClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('DecisionTreeRegressor', <class 'sklearn.tree.tree.DecisionTreeRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('DecisionTreeRegressor', <class 'sklearn.tree.tree.DecisionTreeRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('DecisionTreeRegressor', <class 'sklearn.tree.tree.DecisionTreeRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('DecisionTreeRegressor', <class 'sklearn.tree.tree.DecisionTreeRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('DecisionTreeRegressor', <class 'sklearn.tree.tree.DecisionTreeRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('DecisionTreeRegressor', <class 'sklearn.tree.tree.DecisionTreeRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('DecisionTreeRegressor', <class 'sklearn.tree.tree.DecisionTreeRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('DecisionTreeRegressor', <class 'sklearn.tree.tree.DecisionTreeRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('DictionaryLearning', <class 'sklearn.decomposition.dict_learning.DictionaryLearning'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('DictionaryLearning', <class 'sklearn.decomposition.dict_learning.DictionaryLearning'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('DictionaryLearning', <class 'sklearn.decomposition.dict_learning.DictionaryLearning'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('DictionaryLearning', <class 'sklearn.decomposition.dict_learning.DictionaryLearning'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('DictionaryLearning', <class 'sklearn.decomposition.dict_learning.DictionaryLearning'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('DictionaryLearning', <class 'sklearn.decomposition.dict_learning.DictionaryLearning'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('DictionaryLearning', <class 'sklearn.decomposition.dict_learning.DictionaryLearning'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('DictionaryLearning', <class 'sklearn.decomposition.dict_learning.DictionaryLearning'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('ElasticNet', <class 'sklearn.linear_model.coordinate_descent.ElasticNet'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('ElasticNet', <class 'sklearn.linear_model.coordinate_descent.ElasticNet'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('ElasticNet', <class 'sklearn.linear_model.coordinate_descent.ElasticNet'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('ElasticNet', <class 'sklearn.linear_model.coordinate_descent.ElasticNet'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('ElasticNet', <class 'sklearn.linear_model.coordinate_descent.ElasticNet'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('ElasticNet', <class 'sklearn.linear_model.coordinate_descent.ElasticNet'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('ElasticNet', <class 'sklearn.linear_model.coordinate_descent.ElasticNet'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('ElasticNet', <class 'sklearn.linear_model.coordinate_descent.ElasticNet'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('ElasticNetCV', <class 'sklearn.linear_model.coordinate_descent.ElasticNetCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('ElasticNetCV', <class 'sklearn.linear_model.coordinate_descent.ElasticNetCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('ElasticNetCV', <class 'sklearn.linear_model.coordinate_descent.ElasticNetCV'>) ... /root/.local/lib/python2.7/site-packages/sklearn/linear_model/coordinate_descent.py:444: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations
  ConvergenceWarning)
ok
sklearn.tests.test_common.test_non_meta_estimators('ElasticNetCV', <class 'sklearn.linear_model.coordinate_descent.ElasticNetCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('ElasticNetCV', <class 'sklearn.linear_model.coordinate_descent.ElasticNetCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('ElasticNetCV', <class 'sklearn.linear_model.coordinate_descent.ElasticNetCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('ElasticNetCV', <class 'sklearn.linear_model.coordinate_descent.ElasticNetCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('ElasticNetCV', <class 'sklearn.linear_model.coordinate_descent.ElasticNetCV'>) ... /root/.local/lib/python2.7/site-packages/sklearn/linear_model/coordinate_descent.py:444: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations
  ConvergenceWarning)
ok
sklearn.tests.test_common.test_non_meta_estimators('EmpiricalCovariance', <class 'sklearn.covariance.empirical_covariance_.EmpiricalCovariance'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('EmpiricalCovariance', <class 'sklearn.covariance.empirical_covariance_.EmpiricalCovariance'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('EmpiricalCovariance', <class 'sklearn.covariance.empirical_covariance_.EmpiricalCovariance'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('EmpiricalCovariance', <class 'sklearn.covariance.empirical_covariance_.EmpiricalCovariance'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('EmpiricalCovariance', <class 'sklearn.covariance.empirical_covariance_.EmpiricalCovariance'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('EmpiricalCovariance', <class 'sklearn.covariance.empirical_covariance_.EmpiricalCovariance'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('EmpiricalCovariance', <class 'sklearn.covariance.empirical_covariance_.EmpiricalCovariance'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('EmpiricalCovariance', <class 'sklearn.covariance.empirical_covariance_.EmpiricalCovariance'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('ExtraTreeClassifier', <class 'sklearn.tree.tree.ExtraTreeClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('ExtraTreeClassifier', <class 'sklearn.tree.tree.ExtraTreeClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('ExtraTreeClassifier', <class 'sklearn.tree.tree.ExtraTreeClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('ExtraTreeClassifier', <class 'sklearn.tree.tree.ExtraTreeClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('ExtraTreeClassifier', <class 'sklearn.tree.tree.ExtraTreeClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('ExtraTreeClassifier', <class 'sklearn.tree.tree.ExtraTreeClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('ExtraTreeClassifier', <class 'sklearn.tree.tree.ExtraTreeClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('ExtraTreeClassifier', <class 'sklearn.tree.tree.ExtraTreeClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('ExtraTreeRegressor', <class 'sklearn.tree.tree.ExtraTreeRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('ExtraTreeRegressor', <class 'sklearn.tree.tree.ExtraTreeRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('ExtraTreeRegressor', <class 'sklearn.tree.tree.ExtraTreeRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('ExtraTreeRegressor', <class 'sklearn.tree.tree.ExtraTreeRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('ExtraTreeRegressor', <class 'sklearn.tree.tree.ExtraTreeRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('ExtraTreeRegressor', <class 'sklearn.tree.tree.ExtraTreeRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('ExtraTreeRegressor', <class 'sklearn.tree.tree.ExtraTreeRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('ExtraTreeRegressor', <class 'sklearn.tree.tree.ExtraTreeRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('ExtraTreesClassifier', <class 'sklearn.ensemble.forest.ExtraTreesClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('ExtraTreesClassifier', <class 'sklearn.ensemble.forest.ExtraTreesClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('ExtraTreesClassifier', <class 'sklearn.ensemble.forest.ExtraTreesClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('ExtraTreesClassifier', <class 'sklearn.ensemble.forest.ExtraTreesClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('ExtraTreesClassifier', <class 'sklearn.ensemble.forest.ExtraTreesClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('ExtraTreesClassifier', <class 'sklearn.ensemble.forest.ExtraTreesClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('ExtraTreesClassifier', <class 'sklearn.ensemble.forest.ExtraTreesClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('ExtraTreesClassifier', <class 'sklearn.ensemble.forest.ExtraTreesClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('ExtraTreesRegressor', <class 'sklearn.ensemble.forest.ExtraTreesRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('ExtraTreesRegressor', <class 'sklearn.ensemble.forest.ExtraTreesRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('ExtraTreesRegressor', <class 'sklearn.ensemble.forest.ExtraTreesRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('ExtraTreesRegressor', <class 'sklearn.ensemble.forest.ExtraTreesRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('ExtraTreesRegressor', <class 'sklearn.ensemble.forest.ExtraTreesRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('ExtraTreesRegressor', <class 'sklearn.ensemble.forest.ExtraTreesRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('ExtraTreesRegressor', <class 'sklearn.ensemble.forest.ExtraTreesRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('ExtraTreesRegressor', <class 'sklearn.ensemble.forest.ExtraTreesRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('FactorAnalysis', <class 'sklearn.decomposition.factor_analysis.FactorAnalysis'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('FactorAnalysis', <class 'sklearn.decomposition.factor_analysis.FactorAnalysis'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('FactorAnalysis', <class 'sklearn.decomposition.factor_analysis.FactorAnalysis'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('FactorAnalysis', <class 'sklearn.decomposition.factor_analysis.FactorAnalysis'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('FactorAnalysis', <class 'sklearn.decomposition.factor_analysis.FactorAnalysis'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('FactorAnalysis', <class 'sklearn.decomposition.factor_analysis.FactorAnalysis'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('FactorAnalysis', <class 'sklearn.decomposition.factor_analysis.FactorAnalysis'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('FactorAnalysis', <class 'sklearn.decomposition.factor_analysis.FactorAnalysis'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('FastICA', <class 'sklearn.decomposition.fastica_.FastICA'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('FastICA', <class 'sklearn.decomposition.fastica_.FastICA'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('FastICA', <class 'sklearn.decomposition.fastica_.FastICA'>) ... /root/.local/lib/python2.7/site-packages/sklearn/decomposition/fastica_.py:117: UserWarning: FastICA did not converge. You might want to increase the number of iterations.
  ' to increase the number of iterations.')
ok
sklearn.tests.test_common.test_non_meta_estimators('FastICA', <class 'sklearn.decomposition.fastica_.FastICA'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('FastICA', <class 'sklearn.decomposition.fastica_.FastICA'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('FastICA', <class 'sklearn.decomposition.fastica_.FastICA'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('FastICA', <class 'sklearn.decomposition.fastica_.FastICA'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('FastICA', <class 'sklearn.decomposition.fastica_.FastICA'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('FeatureAgglomeration', <class 'sklearn.cluster.hierarchical.FeatureAgglomeration'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('FeatureAgglomeration', <class 'sklearn.cluster.hierarchical.FeatureAgglomeration'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('FeatureAgglomeration', <class 'sklearn.cluster.hierarchical.FeatureAgglomeration'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('FeatureAgglomeration', <class 'sklearn.cluster.hierarchical.FeatureAgglomeration'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('FeatureAgglomeration', <class 'sklearn.cluster.hierarchical.FeatureAgglomeration'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('FeatureAgglomeration', <class 'sklearn.cluster.hierarchical.FeatureAgglomeration'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('FeatureAgglomeration', <class 'sklearn.cluster.hierarchical.FeatureAgglomeration'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('FeatureAgglomeration', <class 'sklearn.cluster.hierarchical.FeatureAgglomeration'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('GMM', <class 'sklearn.mixture.gmm.GMM'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('GMM', <class 'sklearn.mixture.gmm.GMM'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('GMM', <class 'sklearn.mixture.gmm.GMM'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('GMM', <class 'sklearn.mixture.gmm.GMM'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('GMM', <class 'sklearn.mixture.gmm.GMM'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('GMM', <class 'sklearn.mixture.gmm.GMM'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('GMM', <class 'sklearn.mixture.gmm.GMM'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('GMM', <class 'sklearn.mixture.gmm.GMM'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('GaussianNB', <class 'sklearn.naive_bayes.GaussianNB'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('GaussianNB', <class 'sklearn.naive_bayes.GaussianNB'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('GaussianNB', <class 'sklearn.naive_bayes.GaussianNB'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('GaussianNB', <class 'sklearn.naive_bayes.GaussianNB'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('GaussianNB', <class 'sklearn.naive_bayes.GaussianNB'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('GaussianNB', <class 'sklearn.naive_bayes.GaussianNB'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('GaussianNB', <class 'sklearn.naive_bayes.GaussianNB'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('GaussianNB', <class 'sklearn.naive_bayes.GaussianNB'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('GaussianProcess', <class 'sklearn.gaussian_process.gaussian_process.GaussianProcess'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('GaussianProcess', <class 'sklearn.gaussian_process.gaussian_process.GaussianProcess'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('GaussianProcess', <class 'sklearn.gaussian_process.gaussian_process.GaussianProcess'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('GaussianProcess', <class 'sklearn.gaussian_process.gaussian_process.GaussianProcess'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('GaussianProcess', <class 'sklearn.gaussian_process.gaussian_process.GaussianProcess'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('GaussianProcess', <class 'sklearn.gaussian_process.gaussian_process.GaussianProcess'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('GaussianProcess', <class 'sklearn.gaussian_process.gaussian_process.GaussianProcess'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('GaussianRandomProjection', <class 'sklearn.random_projection.GaussianRandomProjection'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('GaussianRandomProjection', <class 'sklearn.random_projection.GaussianRandomProjection'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('GaussianRandomProjection', <class 'sklearn.random_projection.GaussianRandomProjection'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('GaussianRandomProjection', <class 'sklearn.random_projection.GaussianRandomProjection'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('GaussianRandomProjection', <class 'sklearn.random_projection.GaussianRandomProjection'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('GaussianRandomProjection', <class 'sklearn.random_projection.GaussianRandomProjection'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('GaussianRandomProjection', <class 'sklearn.random_projection.GaussianRandomProjection'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('GaussianRandomProjection', <class 'sklearn.random_projection.GaussianRandomProjection'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('GenericUnivariateSelect', <class 'sklearn.feature_selection.univariate_selection.GenericUnivariateSelect'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('GenericUnivariateSelect', <class 'sklearn.feature_selection.univariate_selection.GenericUnivariateSelect'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('GenericUnivariateSelect', <class 'sklearn.feature_selection.univariate_selection.GenericUnivariateSelect'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('GenericUnivariateSelect', <class 'sklearn.feature_selection.univariate_selection.GenericUnivariateSelect'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('GenericUnivariateSelect', <class 'sklearn.feature_selection.univariate_selection.GenericUnivariateSelect'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('GenericUnivariateSelect', <class 'sklearn.feature_selection.univariate_selection.GenericUnivariateSelect'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('GenericUnivariateSelect', <class 'sklearn.feature_selection.univariate_selection.GenericUnivariateSelect'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('GenericUnivariateSelect', <class 'sklearn.feature_selection.univariate_selection.GenericUnivariateSelect'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('GradientBoostingClassifier', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('GradientBoostingClassifier', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('GradientBoostingClassifier', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('GradientBoostingClassifier', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('GradientBoostingClassifier', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('GradientBoostingClassifier', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('GradientBoostingClassifier', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('GradientBoostingClassifier', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('GradientBoostingRegressor', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('GradientBoostingRegressor', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('GradientBoostingRegressor', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('GradientBoostingRegressor', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('GradientBoostingRegressor', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('GradientBoostingRegressor', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('GradientBoostingRegressor', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('GradientBoostingRegressor', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('GraphLasso', <class 'sklearn.covariance.graph_lasso_.GraphLasso'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('GraphLasso', <class 'sklearn.covariance.graph_lasso_.GraphLasso'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('GraphLasso', <class 'sklearn.covariance.graph_lasso_.GraphLasso'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('GraphLasso', <class 'sklearn.covariance.graph_lasso_.GraphLasso'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('GraphLasso', <class 'sklearn.covariance.graph_lasso_.GraphLasso'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('GraphLasso', <class 'sklearn.covariance.graph_lasso_.GraphLasso'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('GraphLasso', <class 'sklearn.covariance.graph_lasso_.GraphLasso'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('GraphLasso', <class 'sklearn.covariance.graph_lasso_.GraphLasso'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('GraphLassoCV', <class 'sklearn.covariance.graph_lasso_.GraphLassoCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('GraphLassoCV', <class 'sklearn.covariance.graph_lasso_.GraphLassoCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('GraphLassoCV', <class 'sklearn.covariance.graph_lasso_.GraphLassoCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('GraphLassoCV', <class 'sklearn.covariance.graph_lasso_.GraphLassoCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('GraphLassoCV', <class 'sklearn.covariance.graph_lasso_.GraphLassoCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('GraphLassoCV', <class 'sklearn.covariance.graph_lasso_.GraphLassoCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('GraphLassoCV', <class 'sklearn.covariance.graph_lasso_.GraphLassoCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('GraphLassoCV', <class 'sklearn.covariance.graph_lasso_.GraphLassoCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Imputer', <class 'sklearn.preprocessing.imputation.Imputer'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Imputer', <class 'sklearn.preprocessing.imputation.Imputer'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Imputer', <class 'sklearn.preprocessing.imputation.Imputer'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Imputer', <class 'sklearn.preprocessing.imputation.Imputer'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Imputer', <class 'sklearn.preprocessing.imputation.Imputer'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Imputer', <class 'sklearn.preprocessing.imputation.Imputer'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Imputer', <class 'sklearn.preprocessing.imputation.Imputer'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('IncrementalPCA', <class 'sklearn.decomposition.incremental_pca.IncrementalPCA'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('IncrementalPCA', <class 'sklearn.decomposition.incremental_pca.IncrementalPCA'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('IncrementalPCA', <class 'sklearn.decomposition.incremental_pca.IncrementalPCA'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('IncrementalPCA', <class 'sklearn.decomposition.incremental_pca.IncrementalPCA'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('IncrementalPCA', <class 'sklearn.decomposition.incremental_pca.IncrementalPCA'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('IncrementalPCA', <class 'sklearn.decomposition.incremental_pca.IncrementalPCA'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('IncrementalPCA', <class 'sklearn.decomposition.incremental_pca.IncrementalPCA'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('IncrementalPCA', <class 'sklearn.decomposition.incremental_pca.IncrementalPCA'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Isomap', <class 'sklearn.manifold.isomap.Isomap'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Isomap', <class 'sklearn.manifold.isomap.Isomap'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Isomap', <class 'sklearn.manifold.isomap.Isomap'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Isomap', <class 'sklearn.manifold.isomap.Isomap'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Isomap', <class 'sklearn.manifold.isomap.Isomap'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Isomap', <class 'sklearn.manifold.isomap.Isomap'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Isomap', <class 'sklearn.manifold.isomap.Isomap'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Isomap', <class 'sklearn.manifold.isomap.Isomap'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('KMeans', <class 'sklearn.cluster.k_means_.KMeans'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('KMeans', <class 'sklearn.cluster.k_means_.KMeans'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('KMeans', <class 'sklearn.cluster.k_means_.KMeans'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('KMeans', <class 'sklearn.cluster.k_means_.KMeans'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('KMeans', <class 'sklearn.cluster.k_means_.KMeans'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('KMeans', <class 'sklearn.cluster.k_means_.KMeans'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('KMeans', <class 'sklearn.cluster.k_means_.KMeans'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('KMeans', <class 'sklearn.cluster.k_means_.KMeans'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('KNeighborsClassifier', <class 'sklearn.neighbors.classification.KNeighborsClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('KNeighborsClassifier', <class 'sklearn.neighbors.classification.KNeighborsClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('KNeighborsClassifier', <class 'sklearn.neighbors.classification.KNeighborsClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('KNeighborsClassifier', <class 'sklearn.neighbors.classification.KNeighborsClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('KNeighborsClassifier', <class 'sklearn.neighbors.classification.KNeighborsClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('KNeighborsClassifier', <class 'sklearn.neighbors.classification.KNeighborsClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('KNeighborsClassifier', <class 'sklearn.neighbors.classification.KNeighborsClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('KNeighborsClassifier', <class 'sklearn.neighbors.classification.KNeighborsClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('KNeighborsRegressor', <class 'sklearn.neighbors.regression.KNeighborsRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('KNeighborsRegressor', <class 'sklearn.neighbors.regression.KNeighborsRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('KNeighborsRegressor', <class 'sklearn.neighbors.regression.KNeighborsRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('KNeighborsRegressor', <class 'sklearn.neighbors.regression.KNeighborsRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('KNeighborsRegressor', <class 'sklearn.neighbors.regression.KNeighborsRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('KNeighborsRegressor', <class 'sklearn.neighbors.regression.KNeighborsRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('KNeighborsRegressor', <class 'sklearn.neighbors.regression.KNeighborsRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('KNeighborsRegressor', <class 'sklearn.neighbors.regression.KNeighborsRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('KernelCenterer', <class 'sklearn.preprocessing.data.KernelCenterer'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('KernelCenterer', <class 'sklearn.preprocessing.data.KernelCenterer'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('KernelCenterer', <class 'sklearn.preprocessing.data.KernelCenterer'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('KernelCenterer', <class 'sklearn.preprocessing.data.KernelCenterer'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('KernelCenterer', <class 'sklearn.preprocessing.data.KernelCenterer'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('KernelCenterer', <class 'sklearn.preprocessing.data.KernelCenterer'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('KernelCenterer', <class 'sklearn.preprocessing.data.KernelCenterer'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('KernelCenterer', <class 'sklearn.preprocessing.data.KernelCenterer'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('KernelDensity', <class 'sklearn.neighbors.kde.KernelDensity'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('KernelDensity', <class 'sklearn.neighbors.kde.KernelDensity'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('KernelDensity', <class 'sklearn.neighbors.kde.KernelDensity'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('KernelDensity', <class 'sklearn.neighbors.kde.KernelDensity'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('KernelDensity', <class 'sklearn.neighbors.kde.KernelDensity'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('KernelDensity', <class 'sklearn.neighbors.kde.KernelDensity'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('KernelDensity', <class 'sklearn.neighbors.kde.KernelDensity'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('KernelDensity', <class 'sklearn.neighbors.kde.KernelDensity'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('KernelPCA', <class 'sklearn.decomposition.kernel_pca.KernelPCA'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('KernelPCA', <class 'sklearn.decomposition.kernel_pca.KernelPCA'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('KernelPCA', <class 'sklearn.decomposition.kernel_pca.KernelPCA'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('KernelPCA', <class 'sklearn.decomposition.kernel_pca.KernelPCA'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('KernelPCA', <class 'sklearn.decomposition.kernel_pca.KernelPCA'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('KernelPCA', <class 'sklearn.decomposition.kernel_pca.KernelPCA'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('KernelPCA', <class 'sklearn.decomposition.kernel_pca.KernelPCA'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('KernelPCA', <class 'sklearn.decomposition.kernel_pca.KernelPCA'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('KernelRidge', <class 'sklearn.kernel_ridge.KernelRidge'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('KernelRidge', <class 'sklearn.kernel_ridge.KernelRidge'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('KernelRidge', <class 'sklearn.kernel_ridge.KernelRidge'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('KernelRidge', <class 'sklearn.kernel_ridge.KernelRidge'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('KernelRidge', <class 'sklearn.kernel_ridge.KernelRidge'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('KernelRidge', <class 'sklearn.kernel_ridge.KernelRidge'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('KernelRidge', <class 'sklearn.kernel_ridge.KernelRidge'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('KernelRidge', <class 'sklearn.kernel_ridge.KernelRidge'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LDA', <class 'sklearn.lda.LDA'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LDA', <class 'sklearn.lda.LDA'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LDA', <class 'sklearn.lda.LDA'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LDA', <class 'sklearn.lda.LDA'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LDA', <class 'sklearn.lda.LDA'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LDA', <class 'sklearn.lda.LDA'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LDA', <class 'sklearn.lda.LDA'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LDA', <class 'sklearn.lda.LDA'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LSHForest', <class 'sklearn.neighbors.approximate.LSHForest'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LSHForest', <class 'sklearn.neighbors.approximate.LSHForest'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LSHForest', <class 'sklearn.neighbors.approximate.LSHForest'>) ... /root/.local/lib/python2.7/site-packages/sklearn/random_projection.py:369: DataDimensionalityWarning: The number of components is higher than the number of features: n_features < n_components (10 < 32).The dimensionality of the problem will not be reduced.
  DataDimensionalityWarning)
ok
sklearn.tests.test_common.test_non_meta_estimators('LSHForest', <class 'sklearn.neighbors.approximate.LSHForest'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LSHForest', <class 'sklearn.neighbors.approximate.LSHForest'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LSHForest', <class 'sklearn.neighbors.approximate.LSHForest'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LSHForest', <class 'sklearn.neighbors.approximate.LSHForest'>) ... /root/.local/lib/python2.7/site-packages/sklearn/random_projection.py:369: DataDimensionalityWarning: The number of components is higher than the number of features: n_features < n_components (2 < 32).The dimensionality of the problem will not be reduced.
  DataDimensionalityWarning)
ok
sklearn.tests.test_common.test_non_meta_estimators('LSHForest', <class 'sklearn.neighbors.approximate.LSHForest'>) ... /root/.local/lib/python2.7/site-packages/sklearn/random_projection.py:369: DataDimensionalityWarning: The number of components is higher than the number of features: n_features < n_components (10 < 32).The dimensionality of the problem will not be reduced.
  DataDimensionalityWarning)
ok
sklearn.tests.test_common.test_non_meta_estimators('LabelPropagation', <class 'sklearn.semi_supervised.label_propagation.LabelPropagation'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LabelPropagation', <class 'sklearn.semi_supervised.label_propagation.LabelPropagation'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LabelPropagation', <class 'sklearn.semi_supervised.label_propagation.LabelPropagation'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LabelPropagation', <class 'sklearn.semi_supervised.label_propagation.LabelPropagation'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LabelPropagation', <class 'sklearn.semi_supervised.label_propagation.LabelPropagation'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LabelPropagation', <class 'sklearn.semi_supervised.label_propagation.LabelPropagation'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LabelPropagation', <class 'sklearn.semi_supervised.label_propagation.LabelPropagation'>) ... /root/.local/lib/python2.7/site-packages/sklearn/semi_supervised/label_propagation.py:342: RuntimeWarning: underflow encountered in divide
  affinity_matrix /= normalizer[:, np.newaxis]
ok
sklearn.tests.test_common.test_non_meta_estimators('LabelPropagation', <class 'sklearn.semi_supervised.label_propagation.LabelPropagation'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LabelSpreading', <class 'sklearn.semi_supervised.label_propagation.LabelSpreading'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LabelSpreading', <class 'sklearn.semi_supervised.label_propagation.LabelSpreading'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LabelSpreading', <class 'sklearn.semi_supervised.label_propagation.LabelSpreading'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LabelSpreading', <class 'sklearn.semi_supervised.label_propagation.LabelSpreading'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LabelSpreading', <class 'sklearn.semi_supervised.label_propagation.LabelSpreading'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LabelSpreading', <class 'sklearn.semi_supervised.label_propagation.LabelSpreading'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LabelSpreading', <class 'sklearn.semi_supervised.label_propagation.LabelSpreading'>) ... /root/.local/lib/python2.7/site-packages/sklearn/utils/graph.py:174: RuntimeWarning: underflow encountered in divide
  lap /= w
ok
sklearn.tests.test_common.test_non_meta_estimators('LabelSpreading', <class 'sklearn.semi_supervised.label_propagation.LabelSpreading'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Lars', <class 'sklearn.linear_model.least_angle.Lars'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Lars', <class 'sklearn.linear_model.least_angle.Lars'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Lars', <class 'sklearn.linear_model.least_angle.Lars'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Lars', <class 'sklearn.linear_model.least_angle.Lars'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Lars', <class 'sklearn.linear_model.least_angle.Lars'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Lars', <class 'sklearn.linear_model.least_angle.Lars'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Lars', <class 'sklearn.linear_model.least_angle.Lars'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Lars', <class 'sklearn.linear_model.least_angle.Lars'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LarsCV', <class 'sklearn.linear_model.least_angle.LarsCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LarsCV', <class 'sklearn.linear_model.least_angle.LarsCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LarsCV', <class 'sklearn.linear_model.least_angle.LarsCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LarsCV', <class 'sklearn.linear_model.least_angle.LarsCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LarsCV', <class 'sklearn.linear_model.least_angle.LarsCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LarsCV', <class 'sklearn.linear_model.least_angle.LarsCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LarsCV', <class 'sklearn.linear_model.least_angle.LarsCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LarsCV', <class 'sklearn.linear_model.least_angle.LarsCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Lasso', <class 'sklearn.linear_model.coordinate_descent.Lasso'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Lasso', <class 'sklearn.linear_model.coordinate_descent.Lasso'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Lasso', <class 'sklearn.linear_model.coordinate_descent.Lasso'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Lasso', <class 'sklearn.linear_model.coordinate_descent.Lasso'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Lasso', <class 'sklearn.linear_model.coordinate_descent.Lasso'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Lasso', <class 'sklearn.linear_model.coordinate_descent.Lasso'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Lasso', <class 'sklearn.linear_model.coordinate_descent.Lasso'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Lasso', <class 'sklearn.linear_model.coordinate_descent.Lasso'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LassoCV', <class 'sklearn.linear_model.coordinate_descent.LassoCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LassoCV', <class 'sklearn.linear_model.coordinate_descent.LassoCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LassoCV', <class 'sklearn.linear_model.coordinate_descent.LassoCV'>) ... /root/.local/lib/python2.7/site-packages/sklearn/linear_model/coordinate_descent.py:444: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations
  ConvergenceWarning)
ok
sklearn.tests.test_common.test_non_meta_estimators('LassoCV', <class 'sklearn.linear_model.coordinate_descent.LassoCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LassoCV', <class 'sklearn.linear_model.coordinate_descent.LassoCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LassoCV', <class 'sklearn.linear_model.coordinate_descent.LassoCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LassoCV', <class 'sklearn.linear_model.coordinate_descent.LassoCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LassoCV', <class 'sklearn.linear_model.coordinate_descent.LassoCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LassoLars', <class 'sklearn.linear_model.least_angle.LassoLars'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LassoLars', <class 'sklearn.linear_model.least_angle.LassoLars'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LassoLars', <class 'sklearn.linear_model.least_angle.LassoLars'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LassoLars', <class 'sklearn.linear_model.least_angle.LassoLars'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LassoLars', <class 'sklearn.linear_model.least_angle.LassoLars'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LassoLars', <class 'sklearn.linear_model.least_angle.LassoLars'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LassoLars', <class 'sklearn.linear_model.least_angle.LassoLars'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LassoLars', <class 'sklearn.linear_model.least_angle.LassoLars'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LassoLarsCV', <class 'sklearn.linear_model.least_angle.LassoLarsCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LassoLarsCV', <class 'sklearn.linear_model.least_angle.LassoLarsCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LassoLarsCV', <class 'sklearn.linear_model.least_angle.LassoLarsCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LassoLarsCV', <class 'sklearn.linear_model.least_angle.LassoLarsCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LassoLarsCV', <class 'sklearn.linear_model.least_angle.LassoLarsCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LassoLarsCV', <class 'sklearn.linear_model.least_angle.LassoLarsCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LassoLarsCV', <class 'sklearn.linear_model.least_angle.LassoLarsCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LassoLarsCV', <class 'sklearn.linear_model.least_angle.LassoLarsCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LassoLarsIC', <class 'sklearn.linear_model.least_angle.LassoLarsIC'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LassoLarsIC', <class 'sklearn.linear_model.least_angle.LassoLarsIC'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LassoLarsIC', <class 'sklearn.linear_model.least_angle.LassoLarsIC'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LassoLarsIC', <class 'sklearn.linear_model.least_angle.LassoLarsIC'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LassoLarsIC', <class 'sklearn.linear_model.least_angle.LassoLarsIC'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LassoLarsIC', <class 'sklearn.linear_model.least_angle.LassoLarsIC'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LassoLarsIC', <class 'sklearn.linear_model.least_angle.LassoLarsIC'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LassoLarsIC', <class 'sklearn.linear_model.least_angle.LassoLarsIC'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LedoitWolf', <class 'sklearn.covariance.shrunk_covariance_.LedoitWolf'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LedoitWolf', <class 'sklearn.covariance.shrunk_covariance_.LedoitWolf'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LedoitWolf', <class 'sklearn.covariance.shrunk_covariance_.LedoitWolf'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LedoitWolf', <class 'sklearn.covariance.shrunk_covariance_.LedoitWolf'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LedoitWolf', <class 'sklearn.covariance.shrunk_covariance_.LedoitWolf'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LedoitWolf', <class 'sklearn.covariance.shrunk_covariance_.LedoitWolf'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LedoitWolf', <class 'sklearn.covariance.shrunk_covariance_.LedoitWolf'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LedoitWolf', <class 'sklearn.covariance.shrunk_covariance_.LedoitWolf'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LinearRegression', <class 'sklearn.linear_model.base.LinearRegression'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LinearRegression', <class 'sklearn.linear_model.base.LinearRegression'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LinearRegression', <class 'sklearn.linear_model.base.LinearRegression'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LinearRegression', <class 'sklearn.linear_model.base.LinearRegression'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LinearRegression', <class 'sklearn.linear_model.base.LinearRegression'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LinearRegression', <class 'sklearn.linear_model.base.LinearRegression'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LinearRegression', <class 'sklearn.linear_model.base.LinearRegression'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LinearRegression', <class 'sklearn.linear_model.base.LinearRegression'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LinearSVC', <class 'sklearn.svm.classes.LinearSVC'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LinearSVC', <class 'sklearn.svm.classes.LinearSVC'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LinearSVC', <class 'sklearn.svm.classes.LinearSVC'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LinearSVC', <class 'sklearn.svm.classes.LinearSVC'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LinearSVC', <class 'sklearn.svm.classes.LinearSVC'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LinearSVC', <class 'sklearn.svm.classes.LinearSVC'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LinearSVC', <class 'sklearn.svm.classes.LinearSVC'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LinearSVC', <class 'sklearn.svm.classes.LinearSVC'>) ... /root/.local/lib/python2.7/site-packages/sklearn/utils/extmath.py:105: NonBLASDotWarning: Data must be of same type. Supported types are 32 and 64 bit float. Falling back to np.dot.
  'Falling back to np.dot.', NonBLASDotWarning)
ok
sklearn.tests.test_common.test_non_meta_estimators('LinearSVC', <class 'sklearn.svm.classes.LinearSVC'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LinearSVR', <class 'sklearn.svm.classes.LinearSVR'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LinearSVR', <class 'sklearn.svm.classes.LinearSVR'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LinearSVR', <class 'sklearn.svm.classes.LinearSVR'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LinearSVR', <class 'sklearn.svm.classes.LinearSVR'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LinearSVR', <class 'sklearn.svm.classes.LinearSVR'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LinearSVR', <class 'sklearn.svm.classes.LinearSVR'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LinearSVR', <class 'sklearn.svm.classes.LinearSVR'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LinearSVR', <class 'sklearn.svm.classes.LinearSVR'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LocallyLinearEmbedding', <class 'sklearn.manifold.locally_linear.LocallyLinearEmbedding'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LocallyLinearEmbedding', <class 'sklearn.manifold.locally_linear.LocallyLinearEmbedding'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LocallyLinearEmbedding', <class 'sklearn.manifold.locally_linear.LocallyLinearEmbedding'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LocallyLinearEmbedding', <class 'sklearn.manifold.locally_linear.LocallyLinearEmbedding'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LocallyLinearEmbedding', <class 'sklearn.manifold.locally_linear.LocallyLinearEmbedding'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LocallyLinearEmbedding', <class 'sklearn.manifold.locally_linear.LocallyLinearEmbedding'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LocallyLinearEmbedding', <class 'sklearn.manifold.locally_linear.LocallyLinearEmbedding'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LocallyLinearEmbedding', <class 'sklearn.manifold.locally_linear.LocallyLinearEmbedding'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LogisticRegression', <class 'sklearn.linear_model.logistic.LogisticRegression'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LogisticRegression', <class 'sklearn.linear_model.logistic.LogisticRegression'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LogisticRegression', <class 'sklearn.linear_model.logistic.LogisticRegression'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LogisticRegression', <class 'sklearn.linear_model.logistic.LogisticRegression'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LogisticRegression', <class 'sklearn.linear_model.logistic.LogisticRegression'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LogisticRegression', <class 'sklearn.linear_model.logistic.LogisticRegression'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LogisticRegression', <class 'sklearn.linear_model.logistic.LogisticRegression'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LogisticRegression', <class 'sklearn.linear_model.logistic.LogisticRegression'>) ... /root/.local/lib/python2.7/site-packages/sklearn/utils/extmath.py:105: NonBLASDotWarning: Data must be of same type. Supported types are 32 and 64 bit float. Falling back to np.dot.
  'Falling back to np.dot.', NonBLASDotWarning)
ok
sklearn.tests.test_common.test_non_meta_estimators('LogisticRegression', <class 'sklearn.linear_model.logistic.LogisticRegression'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LogisticRegressionCV', <class 'sklearn.linear_model.logistic.LogisticRegressionCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LogisticRegressionCV', <class 'sklearn.linear_model.logistic.LogisticRegressionCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LogisticRegressionCV', <class 'sklearn.linear_model.logistic.LogisticRegressionCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LogisticRegressionCV', <class 'sklearn.linear_model.logistic.LogisticRegressionCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LogisticRegressionCV', <class 'sklearn.linear_model.logistic.LogisticRegressionCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LogisticRegressionCV', <class 'sklearn.linear_model.logistic.LogisticRegressionCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LogisticRegressionCV', <class 'sklearn.linear_model.logistic.LogisticRegressionCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('LogisticRegressionCV', <class 'sklearn.linear_model.logistic.LogisticRegressionCV'>) ... /root/.local/lib/python2.7/site-packages/sklearn/utils/extmath.py:105: NonBLASDotWarning: Data must be of same type. Supported types are 32 and 64 bit float. Falling back to np.dot.
  'Falling back to np.dot.', NonBLASDotWarning)
ok
sklearn.tests.test_common.test_non_meta_estimators('LogisticRegressionCV', <class 'sklearn.linear_model.logistic.LogisticRegressionCV'>) ...
ok
sklearn.tests.test_common.test_non_meta_estimators('MDS', <class 'sklearn.manifold.mds.MDS'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MDS', <class 'sklearn.manifold.mds.MDS'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MDS', <class 'sklearn.manifold.mds.MDS'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MDS', <class 'sklearn.manifold.mds.MDS'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MDS', <class 'sklearn.manifold.mds.MDS'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MDS', <class 'sklearn.manifold.mds.MDS'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MDS', <class 'sklearn.manifold.mds.MDS'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MDS', <class 'sklearn.manifold.mds.MDS'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MeanShift', <class 'sklearn.cluster.mean_shift_.MeanShift'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MeanShift', <class 'sklearn.cluster.mean_shift_.MeanShift'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MeanShift', <class 'sklearn.cluster.mean_shift_.MeanShift'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MeanShift', <class 'sklearn.cluster.mean_shift_.MeanShift'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MeanShift', <class 'sklearn.cluster.mean_shift_.MeanShift'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MeanShift', <class 'sklearn.cluster.mean_shift_.MeanShift'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MeanShift', <class 'sklearn.cluster.mean_shift_.MeanShift'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MeanShift', <class 'sklearn.cluster.mean_shift_.MeanShift'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MinCovDet', <class 'sklearn.covariance.robust_covariance.MinCovDet'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MinCovDet', <class 'sklearn.covariance.robust_covariance.MinCovDet'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MinCovDet', <class 'sklearn.covariance.robust_covariance.MinCovDet'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MinCovDet', <class 'sklearn.covariance.robust_covariance.MinCovDet'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MinCovDet', <class 'sklearn.covariance.robust_covariance.MinCovDet'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MinCovDet', <class 'sklearn.covariance.robust_covariance.MinCovDet'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MinCovDet', <class 'sklearn.covariance.robust_covariance.MinCovDet'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MinCovDet', <class 'sklearn.covariance.robust_covariance.MinCovDet'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MinMaxScaler', <class 'sklearn.preprocessing.data.MinMaxScaler'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MinMaxScaler', <class 'sklearn.preprocessing.data.MinMaxScaler'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MinMaxScaler', <class 'sklearn.preprocessing.data.MinMaxScaler'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MinMaxScaler', <class 'sklearn.preprocessing.data.MinMaxScaler'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MinMaxScaler', <class 'sklearn.preprocessing.data.MinMaxScaler'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MinMaxScaler', <class 'sklearn.preprocessing.data.MinMaxScaler'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MinMaxScaler', <class 'sklearn.preprocessing.data.MinMaxScaler'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MinMaxScaler', <class 'sklearn.preprocessing.data.MinMaxScaler'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MiniBatchDictionaryLearning', <class 'sklearn.decomposition.dict_learning.MiniBatchDictionaryLearning'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MiniBatchDictionaryLearning', <class 'sklearn.decomposition.dict_learning.MiniBatchDictionaryLearning'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MiniBatchDictionaryLearning', <class 'sklearn.decomposition.dict_learning.MiniBatchDictionaryLearning'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MiniBatchDictionaryLearning', <class 'sklearn.decomposition.dict_learning.MiniBatchDictionaryLearning'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MiniBatchDictionaryLearning', <class 'sklearn.decomposition.dict_learning.MiniBatchDictionaryLearning'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MiniBatchDictionaryLearning', <class 'sklearn.decomposition.dict_learning.MiniBatchDictionaryLearning'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MiniBatchDictionaryLearning', <class 'sklearn.decomposition.dict_learning.MiniBatchDictionaryLearning'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MiniBatchDictionaryLearning', <class 'sklearn.decomposition.dict_learning.MiniBatchDictionaryLearning'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MiniBatchKMeans', <class 'sklearn.cluster.k_means_.MiniBatchKMeans'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MiniBatchKMeans', <class 'sklearn.cluster.k_means_.MiniBatchKMeans'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MiniBatchKMeans', <class 'sklearn.cluster.k_means_.MiniBatchKMeans'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MiniBatchKMeans', <class 'sklearn.cluster.k_means_.MiniBatchKMeans'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MiniBatchKMeans', <class 'sklearn.cluster.k_means_.MiniBatchKMeans'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MiniBatchKMeans', <class 'sklearn.cluster.k_means_.MiniBatchKMeans'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MiniBatchKMeans', <class 'sklearn.cluster.k_means_.MiniBatchKMeans'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MiniBatchKMeans', <class 'sklearn.cluster.k_means_.MiniBatchKMeans'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MiniBatchSparsePCA', <class 'sklearn.decomposition.sparse_pca.MiniBatchSparsePCA'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MiniBatchSparsePCA', <class 'sklearn.decomposition.sparse_pca.MiniBatchSparsePCA'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MiniBatchSparsePCA', <class 'sklearn.decomposition.sparse_pca.MiniBatchSparsePCA'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MiniBatchSparsePCA', <class 'sklearn.decomposition.sparse_pca.MiniBatchSparsePCA'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MiniBatchSparsePCA', <class 'sklearn.decomposition.sparse_pca.MiniBatchSparsePCA'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MiniBatchSparsePCA', <class 'sklearn.decomposition.sparse_pca.MiniBatchSparsePCA'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MiniBatchSparsePCA', <class 'sklearn.decomposition.sparse_pca.MiniBatchSparsePCA'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MiniBatchSparsePCA', <class 'sklearn.decomposition.sparse_pca.MiniBatchSparsePCA'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MultiTaskElasticNet', <class 'sklearn.linear_model.coordinate_descent.MultiTaskElasticNet'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MultiTaskElasticNet', <class 'sklearn.linear_model.coordinate_descent.MultiTaskElasticNet'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MultiTaskElasticNet', <class 'sklearn.linear_model.coordinate_descent.MultiTaskElasticNet'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MultiTaskElasticNet', <class 'sklearn.linear_model.coordinate_descent.MultiTaskElasticNet'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MultiTaskElasticNet', <class 'sklearn.linear_model.coordinate_descent.MultiTaskElasticNet'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MultiTaskElasticNet', <class 'sklearn.linear_model.coordinate_descent.MultiTaskElasticNet'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MultiTaskElasticNet', <class 'sklearn.linear_model.coordinate_descent.MultiTaskElasticNet'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MultiTaskElasticNet', <class 'sklearn.linear_model.coordinate_descent.MultiTaskElasticNet'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MultiTaskElasticNetCV', <class 'sklearn.linear_model.coordinate_descent.MultiTaskElasticNetCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MultiTaskElasticNetCV', <class 'sklearn.linear_model.coordinate_descent.MultiTaskElasticNetCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MultiTaskElasticNetCV', <class 'sklearn.linear_model.coordinate_descent.MultiTaskElasticNetCV'>) ... /root/.local/lib/python2.7/site-packages/sklearn/linear_model/coordinate_descent.py:444: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations
  ConvergenceWarning)
/root/.local/lib/python2.7/site-packages/sklearn/linear_model/coordinate_descent.py:1615: UserWarning: Objective did not converge, you might want to increase the number of iterations
  warnings.warn('Objective did not converge, you might want'
ok
sklearn.tests.test_common.test_non_meta_estimators('MultiTaskElasticNetCV', <class 'sklearn.linear_model.coordinate_descent.MultiTaskElasticNetCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MultiTaskElasticNetCV', <class 'sklearn.linear_model.coordinate_descent.MultiTaskElasticNetCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MultiTaskElasticNetCV', <class 'sklearn.linear_model.coordinate_descent.MultiTaskElasticNetCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MultiTaskElasticNetCV', <class 'sklearn.linear_model.coordinate_descent.MultiTaskElasticNetCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MultiTaskElasticNetCV', <class 'sklearn.linear_model.coordinate_descent.MultiTaskElasticNetCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MultiTaskLasso', <class 'sklearn.linear_model.coordinate_descent.MultiTaskLasso'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MultiTaskLasso', <class 'sklearn.linear_model.coordinate_descent.MultiTaskLasso'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MultiTaskLasso', <class 'sklearn.linear_model.coordinate_descent.MultiTaskLasso'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MultiTaskLasso', <class 'sklearn.linear_model.coordinate_descent.MultiTaskLasso'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MultiTaskLasso', <class 'sklearn.linear_model.coordinate_descent.MultiTaskLasso'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MultiTaskLasso', <class 'sklearn.linear_model.coordinate_descent.MultiTaskLasso'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MultiTaskLasso', <class 'sklearn.linear_model.coordinate_descent.MultiTaskLasso'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MultiTaskLasso', <class 'sklearn.linear_model.coordinate_descent.MultiTaskLasso'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MultiTaskLassoCV', <class 'sklearn.linear_model.coordinate_descent.MultiTaskLassoCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MultiTaskLassoCV', <class 'sklearn.linear_model.coordinate_descent.MultiTaskLassoCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MultiTaskLassoCV', <class 'sklearn.linear_model.coordinate_descent.MultiTaskLassoCV'>) ... /root/.local/lib/python2.7/site-packages/sklearn/linear_model/coordinate_descent.py:444: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations
  ConvergenceWarning)
/root/.local/lib/python2.7/site-packages/sklearn/linear_model/coordinate_descent.py:1615: UserWarning: Objective did not converge, you might want to increase the number of iterations
  warnings.warn('Objective did not converge, you might want'
ok
sklearn.tests.test_common.test_non_meta_estimators('MultiTaskLassoCV', <class 'sklearn.linear_model.coordinate_descent.MultiTaskLassoCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MultiTaskLassoCV', <class 'sklearn.linear_model.coordinate_descent.MultiTaskLassoCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MultiTaskLassoCV', <class 'sklearn.linear_model.coordinate_descent.MultiTaskLassoCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MultiTaskLassoCV', <class 'sklearn.linear_model.coordinate_descent.MultiTaskLassoCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MultiTaskLassoCV', <class 'sklearn.linear_model.coordinate_descent.MultiTaskLassoCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MultinomialNB', <class 'sklearn.naive_bayes.MultinomialNB'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MultinomialNB', <class 'sklearn.naive_bayes.MultinomialNB'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MultinomialNB', <class 'sklearn.naive_bayes.MultinomialNB'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MultinomialNB', <class 'sklearn.naive_bayes.MultinomialNB'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MultinomialNB', <class 'sklearn.naive_bayes.MultinomialNB'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MultinomialNB', <class 'sklearn.naive_bayes.MultinomialNB'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MultinomialNB', <class 'sklearn.naive_bayes.MultinomialNB'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('MultinomialNB', <class 'sklearn.naive_bayes.MultinomialNB'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('NMF', <class 'sklearn.decomposition.nmf.NMF'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('NMF', <class 'sklearn.decomposition.nmf.NMF'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('NMF', <class 'sklearn.decomposition.nmf.NMF'>) ... /root/.local/lib/python2.7/site-packages/sklearn/decomposition/nmf.py:532: UserWarning: Iteration limit reached during fit. Solving for W exactly.
  warnings.warn("Iteration limit reached during fit. Solving for W exactly.")
ok
sklearn.tests.test_common.test_non_meta_estimators('NMF', <class 'sklearn.decomposition.nmf.NMF'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('NMF', <class 'sklearn.decomposition.nmf.NMF'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('NMF', <class 'sklearn.decomposition.nmf.NMF'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('NMF', <class 'sklearn.decomposition.nmf.NMF'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('NMF', <class 'sklearn.decomposition.nmf.NMF'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('NearestCentroid', <class 'sklearn.neighbors.nearest_centroid.NearestCentroid'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('NearestCentroid', <class 'sklearn.neighbors.nearest_centroid.NearestCentroid'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('NearestCentroid', <class 'sklearn.neighbors.nearest_centroid.NearestCentroid'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('NearestCentroid', <class 'sklearn.neighbors.nearest_centroid.NearestCentroid'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('NearestCentroid', <class 'sklearn.neighbors.nearest_centroid.NearestCentroid'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('NearestCentroid', <class 'sklearn.neighbors.nearest_centroid.NearestCentroid'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('NearestCentroid', <class 'sklearn.neighbors.nearest_centroid.NearestCentroid'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('NearestCentroid', <class 'sklearn.neighbors.nearest_centroid.NearestCentroid'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('NearestNeighbors', <class 'sklearn.neighbors.unsupervised.NearestNeighbors'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('NearestNeighbors', <class 'sklearn.neighbors.unsupervised.NearestNeighbors'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('NearestNeighbors', <class 'sklearn.neighbors.unsupervised.NearestNeighbors'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('NearestNeighbors', <class 'sklearn.neighbors.unsupervised.NearestNeighbors'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('NearestNeighbors', <class 'sklearn.neighbors.unsupervised.NearestNeighbors'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('NearestNeighbors', <class 'sklearn.neighbors.unsupervised.NearestNeighbors'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('NearestNeighbors', <class 'sklearn.neighbors.unsupervised.NearestNeighbors'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('NearestNeighbors', <class 'sklearn.neighbors.unsupervised.NearestNeighbors'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Normalizer', <class 'sklearn.preprocessing.data.Normalizer'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Normalizer', <class 'sklearn.preprocessing.data.Normalizer'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Normalizer', <class 'sklearn.preprocessing.data.Normalizer'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Normalizer', <class 'sklearn.preprocessing.data.Normalizer'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Normalizer', <class 'sklearn.preprocessing.data.Normalizer'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Normalizer', <class 'sklearn.preprocessing.data.Normalizer'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Normalizer', <class 'sklearn.preprocessing.data.Normalizer'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Normalizer', <class 'sklearn.preprocessing.data.Normalizer'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('NuSVC', <class 'sklearn.svm.classes.NuSVC'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('NuSVC', <class 'sklearn.svm.classes.NuSVC'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('NuSVC', <class 'sklearn.svm.classes.NuSVC'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('NuSVC', <class 'sklearn.svm.classes.NuSVC'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('NuSVC', <class 'sklearn.svm.classes.NuSVC'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('NuSVC', <class 'sklearn.svm.classes.NuSVC'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('NuSVC', <class 'sklearn.svm.classes.NuSVC'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('NuSVC', <class 'sklearn.svm.classes.NuSVC'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('NuSVR', <class 'sklearn.svm.classes.NuSVR'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('NuSVR', <class 'sklearn.svm.classes.NuSVR'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('NuSVR', <class 'sklearn.svm.classes.NuSVR'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('NuSVR', <class 'sklearn.svm.classes.NuSVR'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('NuSVR', <class 'sklearn.svm.classes.NuSVR'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('NuSVR', <class 'sklearn.svm.classes.NuSVR'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('NuSVR', <class 'sklearn.svm.classes.NuSVR'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('NuSVR', <class 'sklearn.svm.classes.NuSVR'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Nystroem', <class 'sklearn.kernel_approximation.Nystroem'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Nystroem', <class 'sklearn.kernel_approximation.Nystroem'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Nystroem', <class 'sklearn.kernel_approximation.Nystroem'>) ... /root/.local/lib/python2.7/site-packages/sklearn/kernel_approximation.py:455: UserWarning: n_components > n_samples. This is not possible.
n_components was set to n_samples, which results in inefficient evaluation of the full kernel.
  warnings.warn("n_components > n_samples. This is not possible.\n"
ok
sklearn.tests.test_common.test_non_meta_estimators('Nystroem', <class 'sklearn.kernel_approximation.Nystroem'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Nystroem', <class 'sklearn.kernel_approximation.Nystroem'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Nystroem', <class 'sklearn.kernel_approximation.Nystroem'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Nystroem', <class 'sklearn.kernel_approximation.Nystroem'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Nystroem', <class 'sklearn.kernel_approximation.Nystroem'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('OAS', <class 'sklearn.covariance.shrunk_covariance_.OAS'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('OAS', <class 'sklearn.covariance.shrunk_covariance_.OAS'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('OAS', <class 'sklearn.covariance.shrunk_covariance_.OAS'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('OAS', <class 'sklearn.covariance.shrunk_covariance_.OAS'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('OAS', <class 'sklearn.covariance.shrunk_covariance_.OAS'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('OAS', <class 'sklearn.covariance.shrunk_covariance_.OAS'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('OAS', <class 'sklearn.covariance.shrunk_covariance_.OAS'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('OAS', <class 'sklearn.covariance.shrunk_covariance_.OAS'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('OneClassSVM', <class 'sklearn.svm.classes.OneClassSVM'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('OneClassSVM', <class 'sklearn.svm.classes.OneClassSVM'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('OneClassSVM', <class 'sklearn.svm.classes.OneClassSVM'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('OneClassSVM', <class 'sklearn.svm.classes.OneClassSVM'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('OneClassSVM', <class 'sklearn.svm.classes.OneClassSVM'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('OneClassSVM', <class 'sklearn.svm.classes.OneClassSVM'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('OneClassSVM', <class 'sklearn.svm.classes.OneClassSVM'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('OneClassSVM', <class 'sklearn.svm.classes.OneClassSVM'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('OrthogonalMatchingPursuit', <class 'sklearn.linear_model.omp.OrthogonalMatchingPursuit'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('OrthogonalMatchingPursuit', <class 'sklearn.linear_model.omp.OrthogonalMatchingPursuit'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('OrthogonalMatchingPursuit', <class 'sklearn.linear_model.omp.OrthogonalMatchingPursuit'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('OrthogonalMatchingPursuit', <class 'sklearn.linear_model.omp.OrthogonalMatchingPursuit'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('OrthogonalMatchingPursuit', <class 'sklearn.linear_model.omp.OrthogonalMatchingPursuit'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('OrthogonalMatchingPursuit', <class 'sklearn.linear_model.omp.OrthogonalMatchingPursuit'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('OrthogonalMatchingPursuit', <class 'sklearn.linear_model.omp.OrthogonalMatchingPursuit'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('OrthogonalMatchingPursuit', <class 'sklearn.linear_model.omp.OrthogonalMatchingPursuit'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('OrthogonalMatchingPursuitCV', <class 'sklearn.linear_model.omp.OrthogonalMatchingPursuitCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('OrthogonalMatchingPursuitCV', <class 'sklearn.linear_model.omp.OrthogonalMatchingPursuitCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('OrthogonalMatchingPursuitCV', <class 'sklearn.linear_model.omp.OrthogonalMatchingPursuitCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('OrthogonalMatchingPursuitCV', <class 'sklearn.linear_model.omp.OrthogonalMatchingPursuitCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('OrthogonalMatchingPursuitCV', <class 'sklearn.linear_model.omp.OrthogonalMatchingPursuitCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('OrthogonalMatchingPursuitCV', <class 'sklearn.linear_model.omp.OrthogonalMatchingPursuitCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('OrthogonalMatchingPursuitCV', <class 'sklearn.linear_model.omp.OrthogonalMatchingPursuitCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('OrthogonalMatchingPursuitCV', <class 'sklearn.linear_model.omp.OrthogonalMatchingPursuitCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('PCA', <class 'sklearn.decomposition.pca.PCA'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('PCA', <class 'sklearn.decomposition.pca.PCA'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('PCA', <class 'sklearn.decomposition.pca.PCA'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('PCA', <class 'sklearn.decomposition.pca.PCA'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('PCA', <class 'sklearn.decomposition.pca.PCA'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('PCA', <class 'sklearn.decomposition.pca.PCA'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('PCA', <class 'sklearn.decomposition.pca.PCA'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('PCA', <class 'sklearn.decomposition.pca.PCA'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('PLSCanonical', <class 'sklearn.cross_decomposition.pls_.PLSCanonical'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('PLSCanonical', <class 'sklearn.cross_decomposition.pls_.PLSCanonical'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('PLSCanonical', <class 'sklearn.cross_decomposition.pls_.PLSCanonical'>) ... /root/.local/lib/python2.7/site-packages/sklearn/cross_decomposition/pls_.py:277: UserWarning: Y residual constant at iteration 1
  warnings.warn('Y residual constant at iteration %s' % k)
ok
sklearn.tests.test_common.test_non_meta_estimators('PLSCanonical', <class 'sklearn.cross_decomposition.pls_.PLSCanonical'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('PLSCanonical', <class 'sklearn.cross_decomposition.pls_.PLSCanonical'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('PLSCanonical', <class 'sklearn.cross_decomposition.pls_.PLSCanonical'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('PLSCanonical', <class 'sklearn.cross_decomposition.pls_.PLSCanonical'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('PLSRegression', <class 'sklearn.cross_decomposition.pls_.PLSRegression'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('PLSRegression', <class 'sklearn.cross_decomposition.pls_.PLSRegression'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('PLSRegression', <class 'sklearn.cross_decomposition.pls_.PLSRegression'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('PLSRegression', <class 'sklearn.cross_decomposition.pls_.PLSRegression'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('PLSRegression', <class 'sklearn.cross_decomposition.pls_.PLSRegression'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('PLSRegression', <class 'sklearn.cross_decomposition.pls_.PLSRegression'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('PLSRegression', <class 'sklearn.cross_decomposition.pls_.PLSRegression'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('PLSSVD', <class 'sklearn.cross_decomposition.pls_.PLSSVD'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('PLSSVD', <class 'sklearn.cross_decomposition.pls_.PLSSVD'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('PLSSVD', <class 'sklearn.cross_decomposition.pls_.PLSSVD'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('PLSSVD', <class 'sklearn.cross_decomposition.pls_.PLSSVD'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('PLSSVD', <class 'sklearn.cross_decomposition.pls_.PLSSVD'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('PLSSVD', <class 'sklearn.cross_decomposition.pls_.PLSSVD'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('PLSSVD', <class 'sklearn.cross_decomposition.pls_.PLSSVD'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('PassiveAggressiveClassifier', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('PassiveAggressiveClassifier', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('PassiveAggressiveClassifier', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('PassiveAggressiveClassifier', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('PassiveAggressiveClassifier', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('PassiveAggressiveClassifier', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('PassiveAggressiveClassifier', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('PassiveAggressiveClassifier', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveClassifier'>) ... /root/.local/lib/python2.7/site-packages/sklearn/utils/extmath.py:105: NonBLASDotWarning: Data must be of same type. Supported types are 32 and 64 bit float. Falling back to np.dot.
  'Falling back to np.dot.', NonBLASDotWarning)
ok
sklearn.tests.test_common.test_non_meta_estimators('PassiveAggressiveClassifier', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('PassiveAggressiveRegressor', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('PassiveAggressiveRegressor', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('PassiveAggressiveRegressor', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('PassiveAggressiveRegressor', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('PassiveAggressiveRegressor', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('PassiveAggressiveRegressor', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('PassiveAggressiveRegressor', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('PassiveAggressiveRegressor', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveRegressor'>) ... /root/.local/lib/python2.7/site-packages/sklearn/utils/extmath.py:105: NonBLASDotWarning: Data must be of same type. Supported types are 32 and 64 bit float. Falling back to np.dot.
  'Falling back to np.dot.', NonBLASDotWarning)
ok
sklearn.tests.test_common.test_non_meta_estimators('PassiveAggressiveRegressor', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Perceptron', <class 'sklearn.linear_model.perceptron.Perceptron'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Perceptron', <class 'sklearn.linear_model.perceptron.Perceptron'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Perceptron', <class 'sklearn.linear_model.perceptron.Perceptron'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Perceptron', <class 'sklearn.linear_model.perceptron.Perceptron'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Perceptron', <class 'sklearn.linear_model.perceptron.Perceptron'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Perceptron', <class 'sklearn.linear_model.perceptron.Perceptron'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Perceptron', <class 'sklearn.linear_model.perceptron.Perceptron'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Perceptron', <class 'sklearn.linear_model.perceptron.Perceptron'>) ... /root/.local/lib/python2.7/site-packages/sklearn/utils/extmath.py:105: NonBLASDotWarning: Data must be of same type. Supported types are 32 and 64 bit float. Falling back to np.dot.
  'Falling back to np.dot.', NonBLASDotWarning)
ok
sklearn.tests.test_common.test_non_meta_estimators('Perceptron', <class 'sklearn.linear_model.perceptron.Perceptron'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('ProjectedGradientNMF', <class 'sklearn.decomposition.nmf.ProjectedGradientNMF'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('ProjectedGradientNMF', <class 'sklearn.decomposition.nmf.ProjectedGradientNMF'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('ProjectedGradientNMF', <class 'sklearn.decomposition.nmf.ProjectedGradientNMF'>) ... /root/.local/lib/python2.7/site-packages/sklearn/decomposition/nmf.py:532: UserWarning: Iteration limit reached during fit. Solving for W exactly.
  warnings.warn("Iteration limit reached during fit. Solving for W exactly.")
ok
sklearn.tests.test_common.test_non_meta_estimators('ProjectedGradientNMF', <class 'sklearn.decomposition.nmf.ProjectedGradientNMF'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('ProjectedGradientNMF', <class 'sklearn.decomposition.nmf.ProjectedGradientNMF'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('ProjectedGradientNMF', <class 'sklearn.decomposition.nmf.ProjectedGradientNMF'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('ProjectedGradientNMF', <class 'sklearn.decomposition.nmf.ProjectedGradientNMF'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('ProjectedGradientNMF', <class 'sklearn.decomposition.nmf.ProjectedGradientNMF'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('QDA', <class 'sklearn.qda.QDA'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('QDA', <class 'sklearn.qda.QDA'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('QDA', <class 'sklearn.qda.QDA'>) ... /root/.local/lib/python2.7/site-packages/sklearn/qda.py:133: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")
ok
sklearn.tests.test_common.test_non_meta_estimators('QDA', <class 'sklearn.qda.QDA'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('QDA', <class 'sklearn.qda.QDA'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('QDA', <class 'sklearn.qda.QDA'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('QDA', <class 'sklearn.qda.QDA'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('QDA', <class 'sklearn.qda.QDA'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RANSACRegressor', <class 'sklearn.linear_model.ransac.RANSACRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RANSACRegressor', <class 'sklearn.linear_model.ransac.RANSACRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RANSACRegressor', <class 'sklearn.linear_model.ransac.RANSACRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RANSACRegressor', <class 'sklearn.linear_model.ransac.RANSACRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RANSACRegressor', <class 'sklearn.linear_model.ransac.RANSACRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RANSACRegressor', <class 'sklearn.linear_model.ransac.RANSACRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RANSACRegressor', <class 'sklearn.linear_model.ransac.RANSACRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RANSACRegressor', <class 'sklearn.linear_model.ransac.RANSACRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RBFSampler', <class 'sklearn.kernel_approximation.RBFSampler'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RBFSampler', <class 'sklearn.kernel_approximation.RBFSampler'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RBFSampler', <class 'sklearn.kernel_approximation.RBFSampler'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RBFSampler', <class 'sklearn.kernel_approximation.RBFSampler'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RBFSampler', <class 'sklearn.kernel_approximation.RBFSampler'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RBFSampler', <class 'sklearn.kernel_approximation.RBFSampler'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RBFSampler', <class 'sklearn.kernel_approximation.RBFSampler'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RBFSampler', <class 'sklearn.kernel_approximation.RBFSampler'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RadiusNeighborsClassifier', <class 'sklearn.neighbors.classification.RadiusNeighborsClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RadiusNeighborsClassifier', <class 'sklearn.neighbors.classification.RadiusNeighborsClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RadiusNeighborsClassifier', <class 'sklearn.neighbors.classification.RadiusNeighborsClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RadiusNeighborsClassifier', <class 'sklearn.neighbors.classification.RadiusNeighborsClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RadiusNeighborsClassifier', <class 'sklearn.neighbors.classification.RadiusNeighborsClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RadiusNeighborsClassifier', <class 'sklearn.neighbors.classification.RadiusNeighborsClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RadiusNeighborsClassifier', <class 'sklearn.neighbors.classification.RadiusNeighborsClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RadiusNeighborsClassifier', <class 'sklearn.neighbors.classification.RadiusNeighborsClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RadiusNeighborsRegressor', <class 'sklearn.neighbors.regression.RadiusNeighborsRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RadiusNeighborsRegressor', <class 'sklearn.neighbors.regression.RadiusNeighborsRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RadiusNeighborsRegressor', <class 'sklearn.neighbors.regression.RadiusNeighborsRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RadiusNeighborsRegressor', <class 'sklearn.neighbors.regression.RadiusNeighborsRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RadiusNeighborsRegressor', <class 'sklearn.neighbors.regression.RadiusNeighborsRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RadiusNeighborsRegressor', <class 'sklearn.neighbors.regression.RadiusNeighborsRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RadiusNeighborsRegressor', <class 'sklearn.neighbors.regression.RadiusNeighborsRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RadiusNeighborsRegressor', <class 'sklearn.neighbors.regression.RadiusNeighborsRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RandomForestClassifier', <class 'sklearn.ensemble.forest.RandomForestClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RandomForestClassifier', <class 'sklearn.ensemble.forest.RandomForestClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RandomForestClassifier', <class 'sklearn.ensemble.forest.RandomForestClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RandomForestClassifier', <class 'sklearn.ensemble.forest.RandomForestClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RandomForestClassifier', <class 'sklearn.ensemble.forest.RandomForestClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RandomForestClassifier', <class 'sklearn.ensemble.forest.RandomForestClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RandomForestClassifier', <class 'sklearn.ensemble.forest.RandomForestClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RandomForestClassifier', <class 'sklearn.ensemble.forest.RandomForestClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RandomForestRegressor', <class 'sklearn.ensemble.forest.RandomForestRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RandomForestRegressor', <class 'sklearn.ensemble.forest.RandomForestRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RandomForestRegressor', <class 'sklearn.ensemble.forest.RandomForestRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RandomForestRegressor', <class 'sklearn.ensemble.forest.RandomForestRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RandomForestRegressor', <class 'sklearn.ensemble.forest.RandomForestRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RandomForestRegressor', <class 'sklearn.ensemble.forest.RandomForestRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RandomForestRegressor', <class 'sklearn.ensemble.forest.RandomForestRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RandomForestRegressor', <class 'sklearn.ensemble.forest.RandomForestRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RandomizedLasso', <class 'sklearn.linear_model.randomized_l1.RandomizedLasso'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RandomizedLasso', <class 'sklearn.linear_model.randomized_l1.RandomizedLasso'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RandomizedLasso', <class 'sklearn.linear_model.randomized_l1.RandomizedLasso'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RandomizedLasso', <class 'sklearn.linear_model.randomized_l1.RandomizedLasso'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RandomizedLasso', <class 'sklearn.linear_model.randomized_l1.RandomizedLasso'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RandomizedLasso', <class 'sklearn.linear_model.randomized_l1.RandomizedLasso'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RandomizedLasso', <class 'sklearn.linear_model.randomized_l1.RandomizedLasso'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RandomizedLasso', <class 'sklearn.linear_model.randomized_l1.RandomizedLasso'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RandomizedLogisticRegression', <class 'sklearn.linear_model.randomized_l1.RandomizedLogisticRegression'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RandomizedLogisticRegression', <class 'sklearn.linear_model.randomized_l1.RandomizedLogisticRegression'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RandomizedLogisticRegression', <class 'sklearn.linear_model.randomized_l1.RandomizedLogisticRegression'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RandomizedLogisticRegression', <class 'sklearn.linear_model.randomized_l1.RandomizedLogisticRegression'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RandomizedLogisticRegression', <class 'sklearn.linear_model.randomized_l1.RandomizedLogisticRegression'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RandomizedLogisticRegression', <class 'sklearn.linear_model.randomized_l1.RandomizedLogisticRegression'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RandomizedLogisticRegression', <class 'sklearn.linear_model.randomized_l1.RandomizedLogisticRegression'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RandomizedLogisticRegression', <class 'sklearn.linear_model.randomized_l1.RandomizedLogisticRegression'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RandomizedPCA', <class 'sklearn.decomposition.pca.RandomizedPCA'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RandomizedPCA', <class 'sklearn.decomposition.pca.RandomizedPCA'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RandomizedPCA', <class 'sklearn.decomposition.pca.RandomizedPCA'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RandomizedPCA', <class 'sklearn.decomposition.pca.RandomizedPCA'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RandomizedPCA', <class 'sklearn.decomposition.pca.RandomizedPCA'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RandomizedPCA', <class 'sklearn.decomposition.pca.RandomizedPCA'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RandomizedPCA', <class 'sklearn.decomposition.pca.RandomizedPCA'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RandomizedPCA', <class 'sklearn.decomposition.pca.RandomizedPCA'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Ridge', <class 'sklearn.linear_model.ridge.Ridge'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Ridge', <class 'sklearn.linear_model.ridge.Ridge'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Ridge', <class 'sklearn.linear_model.ridge.Ridge'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Ridge', <class 'sklearn.linear_model.ridge.Ridge'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Ridge', <class 'sklearn.linear_model.ridge.Ridge'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Ridge', <class 'sklearn.linear_model.ridge.Ridge'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Ridge', <class 'sklearn.linear_model.ridge.Ridge'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Ridge', <class 'sklearn.linear_model.ridge.Ridge'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RidgeCV', <class 'sklearn.linear_model.ridge.RidgeCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RidgeCV', <class 'sklearn.linear_model.ridge.RidgeCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RidgeCV', <class 'sklearn.linear_model.ridge.RidgeCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RidgeCV', <class 'sklearn.linear_model.ridge.RidgeCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RidgeCV', <class 'sklearn.linear_model.ridge.RidgeCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RidgeCV', <class 'sklearn.linear_model.ridge.RidgeCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RidgeCV', <class 'sklearn.linear_model.ridge.RidgeCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RidgeCV', <class 'sklearn.linear_model.ridge.RidgeCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RidgeClassifier', <class 'sklearn.linear_model.ridge.RidgeClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RidgeClassifier', <class 'sklearn.linear_model.ridge.RidgeClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RidgeClassifier', <class 'sklearn.linear_model.ridge.RidgeClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RidgeClassifier', <class 'sklearn.linear_model.ridge.RidgeClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RidgeClassifier', <class 'sklearn.linear_model.ridge.RidgeClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RidgeClassifier', <class 'sklearn.linear_model.ridge.RidgeClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RidgeClassifier', <class 'sklearn.linear_model.ridge.RidgeClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RidgeClassifier', <class 'sklearn.linear_model.ridge.RidgeClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RidgeClassifierCV', <class 'sklearn.linear_model.ridge.RidgeClassifierCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RidgeClassifierCV', <class 'sklearn.linear_model.ridge.RidgeClassifierCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RidgeClassifierCV', <class 'sklearn.linear_model.ridge.RidgeClassifierCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RidgeClassifierCV', <class 'sklearn.linear_model.ridge.RidgeClassifierCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RidgeClassifierCV', <class 'sklearn.linear_model.ridge.RidgeClassifierCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RidgeClassifierCV', <class 'sklearn.linear_model.ridge.RidgeClassifierCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RidgeClassifierCV', <class 'sklearn.linear_model.ridge.RidgeClassifierCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('RidgeClassifierCV', <class 'sklearn.linear_model.ridge.RidgeClassifierCV'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SGDClassifier', <class 'sklearn.linear_model.stochastic_gradient.SGDClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SGDClassifier', <class 'sklearn.linear_model.stochastic_gradient.SGDClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SGDClassifier', <class 'sklearn.linear_model.stochastic_gradient.SGDClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SGDClassifier', <class 'sklearn.linear_model.stochastic_gradient.SGDClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SGDClassifier', <class 'sklearn.linear_model.stochastic_gradient.SGDClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SGDClassifier', <class 'sklearn.linear_model.stochastic_gradient.SGDClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SGDClassifier', <class 'sklearn.linear_model.stochastic_gradient.SGDClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SGDClassifier', <class 'sklearn.linear_model.stochastic_gradient.SGDClassifier'>) ... /root/.local/lib/python2.7/site-packages/sklearn/utils/extmath.py:105: NonBLASDotWarning: Data must be of same type. Supported types are 32 and 64 bit float. Falling back to np.dot.
  'Falling back to np.dot.', NonBLASDotWarning)
ok
sklearn.tests.test_common.test_non_meta_estimators('SGDClassifier', <class 'sklearn.linear_model.stochastic_gradient.SGDClassifier'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SGDRegressor', <class 'sklearn.linear_model.stochastic_gradient.SGDRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SGDRegressor', <class 'sklearn.linear_model.stochastic_gradient.SGDRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SGDRegressor', <class 'sklearn.linear_model.stochastic_gradient.SGDRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SGDRegressor', <class 'sklearn.linear_model.stochastic_gradient.SGDRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SGDRegressor', <class 'sklearn.linear_model.stochastic_gradient.SGDRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SGDRegressor', <class 'sklearn.linear_model.stochastic_gradient.SGDRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SGDRegressor', <class 'sklearn.linear_model.stochastic_gradient.SGDRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SGDRegressor', <class 'sklearn.linear_model.stochastic_gradient.SGDRegressor'>) ... /root/.local/lib/python2.7/site-packages/sklearn/utils/extmath.py:105: NonBLASDotWarning: Data must be of same type. Supported types are 32 and 64 bit float. Falling back to np.dot.
  'Falling back to np.dot.', NonBLASDotWarning)
ok
sklearn.tests.test_common.test_non_meta_estimators('SGDRegressor', <class 'sklearn.linear_model.stochastic_gradient.SGDRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SVC', <class 'sklearn.svm.classes.SVC'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SVC', <class 'sklearn.svm.classes.SVC'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SVC', <class 'sklearn.svm.classes.SVC'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SVC', <class 'sklearn.svm.classes.SVC'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SVC', <class 'sklearn.svm.classes.SVC'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SVC', <class 'sklearn.svm.classes.SVC'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SVC', <class 'sklearn.svm.classes.SVC'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SVC', <class 'sklearn.svm.classes.SVC'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SVR', <class 'sklearn.svm.classes.SVR'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SVR', <class 'sklearn.svm.classes.SVR'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SVR', <class 'sklearn.svm.classes.SVR'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SVR', <class 'sklearn.svm.classes.SVR'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SVR', <class 'sklearn.svm.classes.SVR'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SVR', <class 'sklearn.svm.classes.SVR'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SVR', <class 'sklearn.svm.classes.SVR'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SVR', <class 'sklearn.svm.classes.SVR'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SelectFdr', <class 'sklearn.feature_selection.univariate_selection.SelectFdr'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SelectFdr', <class 'sklearn.feature_selection.univariate_selection.SelectFdr'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SelectFdr', <class 'sklearn.feature_selection.univariate_selection.SelectFdr'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SelectFdr', <class 'sklearn.feature_selection.univariate_selection.SelectFdr'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SelectFdr', <class 'sklearn.feature_selection.univariate_selection.SelectFdr'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SelectFdr', <class 'sklearn.feature_selection.univariate_selection.SelectFdr'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SelectFdr', <class 'sklearn.feature_selection.univariate_selection.SelectFdr'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SelectFdr', <class 'sklearn.feature_selection.univariate_selection.SelectFdr'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SelectFpr', <class 'sklearn.feature_selection.univariate_selection.SelectFpr'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SelectFpr', <class 'sklearn.feature_selection.univariate_selection.SelectFpr'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SelectFpr', <class 'sklearn.feature_selection.univariate_selection.SelectFpr'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SelectFpr', <class 'sklearn.feature_selection.univariate_selection.SelectFpr'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SelectFpr', <class 'sklearn.feature_selection.univariate_selection.SelectFpr'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SelectFpr', <class 'sklearn.feature_selection.univariate_selection.SelectFpr'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SelectFpr', <class 'sklearn.feature_selection.univariate_selection.SelectFpr'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SelectFpr', <class 'sklearn.feature_selection.univariate_selection.SelectFpr'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SelectFwe', <class 'sklearn.feature_selection.univariate_selection.SelectFwe'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SelectFwe', <class 'sklearn.feature_selection.univariate_selection.SelectFwe'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SelectFwe', <class 'sklearn.feature_selection.univariate_selection.SelectFwe'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SelectFwe', <class 'sklearn.feature_selection.univariate_selection.SelectFwe'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SelectFwe', <class 'sklearn.feature_selection.univariate_selection.SelectFwe'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SelectFwe', <class 'sklearn.feature_selection.univariate_selection.SelectFwe'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SelectFwe', <class 'sklearn.feature_selection.univariate_selection.SelectFwe'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SelectFwe', <class 'sklearn.feature_selection.univariate_selection.SelectFwe'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SelectKBest', <class 'sklearn.feature_selection.univariate_selection.SelectKBest'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SelectKBest', <class 'sklearn.feature_selection.univariate_selection.SelectKBest'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SelectKBest', <class 'sklearn.feature_selection.univariate_selection.SelectKBest'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SelectKBest', <class 'sklearn.feature_selection.univariate_selection.SelectKBest'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SelectKBest', <class 'sklearn.feature_selection.univariate_selection.SelectKBest'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SelectKBest', <class 'sklearn.feature_selection.univariate_selection.SelectKBest'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SelectKBest', <class 'sklearn.feature_selection.univariate_selection.SelectKBest'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SelectKBest', <class 'sklearn.feature_selection.univariate_selection.SelectKBest'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SelectPercentile', <class 'sklearn.feature_selection.univariate_selection.SelectPercentile'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SelectPercentile', <class 'sklearn.feature_selection.univariate_selection.SelectPercentile'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SelectPercentile', <class 'sklearn.feature_selection.univariate_selection.SelectPercentile'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SelectPercentile', <class 'sklearn.feature_selection.univariate_selection.SelectPercentile'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SelectPercentile', <class 'sklearn.feature_selection.univariate_selection.SelectPercentile'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SelectPercentile', <class 'sklearn.feature_selection.univariate_selection.SelectPercentile'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SelectPercentile', <class 'sklearn.feature_selection.univariate_selection.SelectPercentile'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SelectPercentile', <class 'sklearn.feature_selection.univariate_selection.SelectPercentile'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('ShrunkCovariance', <class 'sklearn.covariance.shrunk_covariance_.ShrunkCovariance'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('ShrunkCovariance', <class 'sklearn.covariance.shrunk_covariance_.ShrunkCovariance'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('ShrunkCovariance', <class 'sklearn.covariance.shrunk_covariance_.ShrunkCovariance'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('ShrunkCovariance', <class 'sklearn.covariance.shrunk_covariance_.ShrunkCovariance'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('ShrunkCovariance', <class 'sklearn.covariance.shrunk_covariance_.ShrunkCovariance'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('ShrunkCovariance', <class 'sklearn.covariance.shrunk_covariance_.ShrunkCovariance'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('ShrunkCovariance', <class 'sklearn.covariance.shrunk_covariance_.ShrunkCovariance'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('ShrunkCovariance', <class 'sklearn.covariance.shrunk_covariance_.ShrunkCovariance'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SkewedChi2Sampler', <class 'sklearn.kernel_approximation.SkewedChi2Sampler'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SkewedChi2Sampler', <class 'sklearn.kernel_approximation.SkewedChi2Sampler'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SkewedChi2Sampler', <class 'sklearn.kernel_approximation.SkewedChi2Sampler'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SkewedChi2Sampler', <class 'sklearn.kernel_approximation.SkewedChi2Sampler'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SkewedChi2Sampler', <class 'sklearn.kernel_approximation.SkewedChi2Sampler'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SkewedChi2Sampler', <class 'sklearn.kernel_approximation.SkewedChi2Sampler'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SkewedChi2Sampler', <class 'sklearn.kernel_approximation.SkewedChi2Sampler'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SkewedChi2Sampler', <class 'sklearn.kernel_approximation.SkewedChi2Sampler'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SparsePCA', <class 'sklearn.decomposition.sparse_pca.SparsePCA'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SparsePCA', <class 'sklearn.decomposition.sparse_pca.SparsePCA'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SparsePCA', <class 'sklearn.decomposition.sparse_pca.SparsePCA'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SparsePCA', <class 'sklearn.decomposition.sparse_pca.SparsePCA'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SparsePCA', <class 'sklearn.decomposition.sparse_pca.SparsePCA'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SparsePCA', <class 'sklearn.decomposition.sparse_pca.SparsePCA'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SparsePCA', <class 'sklearn.decomposition.sparse_pca.SparsePCA'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SparsePCA', <class 'sklearn.decomposition.sparse_pca.SparsePCA'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SparseRandomProjection', <class 'sklearn.random_projection.SparseRandomProjection'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SparseRandomProjection', <class 'sklearn.random_projection.SparseRandomProjection'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SparseRandomProjection', <class 'sklearn.random_projection.SparseRandomProjection'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SparseRandomProjection', <class 'sklearn.random_projection.SparseRandomProjection'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SparseRandomProjection', <class 'sklearn.random_projection.SparseRandomProjection'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SparseRandomProjection', <class 'sklearn.random_projection.SparseRandomProjection'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SparseRandomProjection', <class 'sklearn.random_projection.SparseRandomProjection'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SparseRandomProjection', <class 'sklearn.random_projection.SparseRandomProjection'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SpectralClustering', <class 'sklearn.cluster.spectral.SpectralClustering'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SpectralClustering', <class 'sklearn.cluster.spectral.SpectralClustering'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SpectralClustering', <class 'sklearn.cluster.spectral.SpectralClustering'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SpectralClustering', <class 'sklearn.cluster.spectral.SpectralClustering'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SpectralClustering', <class 'sklearn.cluster.spectral.SpectralClustering'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SpectralClustering', <class 'sklearn.cluster.spectral.SpectralClustering'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SpectralClustering', <class 'sklearn.cluster.spectral.SpectralClustering'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SpectralClustering', <class 'sklearn.cluster.spectral.SpectralClustering'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SpectralEmbedding', <class 'sklearn.manifold.spectral_embedding_.SpectralEmbedding'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SpectralEmbedding', <class 'sklearn.manifold.spectral_embedding_.SpectralEmbedding'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SpectralEmbedding', <class 'sklearn.manifold.spectral_embedding_.SpectralEmbedding'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SpectralEmbedding', <class 'sklearn.manifold.spectral_embedding_.SpectralEmbedding'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SpectralEmbedding', <class 'sklearn.manifold.spectral_embedding_.SpectralEmbedding'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SpectralEmbedding', <class 'sklearn.manifold.spectral_embedding_.SpectralEmbedding'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('SpectralEmbedding', <class 'sklearn.manifold.spectral_embedding_.SpectralEmbedding'>) ... /root/.local/lib/python2.7/site-packages/sklearn/manifold/spectral_embedding_.py:407: UserWarning: Nearest neighbors affinity currently does not support sparse input, falling back to rbf affinity
  warnings.warn("Nearest neighbors affinity currently does "
ok
sklearn.tests.test_common.test_non_meta_estimators('StandardScaler', <class 'sklearn.preprocessing.data.StandardScaler'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('StandardScaler', <class 'sklearn.preprocessing.data.StandardScaler'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('StandardScaler', <class 'sklearn.preprocessing.data.StandardScaler'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('StandardScaler', <class 'sklearn.preprocessing.data.StandardScaler'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('StandardScaler', <class 'sklearn.preprocessing.data.StandardScaler'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('StandardScaler', <class 'sklearn.preprocessing.data.StandardScaler'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('StandardScaler', <class 'sklearn.preprocessing.data.StandardScaler'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('StandardScaler', <class 'sklearn.preprocessing.data.StandardScaler'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('TSNE', <class 'sklearn.manifold.t_sne.TSNE'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('TSNE', <class 'sklearn.manifold.t_sne.TSNE'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('TSNE', <class 'sklearn.manifold.t_sne.TSNE'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('TSNE', <class 'sklearn.manifold.t_sne.TSNE'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('TSNE', <class 'sklearn.manifold.t_sne.TSNE'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('TSNE', <class 'sklearn.manifold.t_sne.TSNE'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('TSNE', <class 'sklearn.manifold.t_sne.TSNE'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('TSNE', <class 'sklearn.manifold.t_sne.TSNE'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('TheilSenRegressor', <class 'sklearn.linear_model.theil_sen.TheilSenRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('TheilSenRegressor', <class 'sklearn.linear_model.theil_sen.TheilSenRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('TheilSenRegressor', <class 'sklearn.linear_model.theil_sen.TheilSenRegressor'>) ... /root/.local/lib/python2.7/site-packages/sklearn/linear_model/theil_sen.py:128: ConvergenceWarning: Maximum number of iterations 5 reached in spatial median for TheilSen regressor.
  "".format(max_iter=max_iter), ConvergenceWarning)
ok
sklearn.tests.test_common.test_non_meta_estimators('TheilSenRegressor', <class 'sklearn.linear_model.theil_sen.TheilSenRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('TheilSenRegressor', <class 'sklearn.linear_model.theil_sen.TheilSenRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('TheilSenRegressor', <class 'sklearn.linear_model.theil_sen.TheilSenRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('TheilSenRegressor', <class 'sklearn.linear_model.theil_sen.TheilSenRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('TheilSenRegressor', <class 'sklearn.linear_model.theil_sen.TheilSenRegressor'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('VBGMM', <class 'sklearn.mixture.dpgmm.VBGMM'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('VBGMM', <class 'sklearn.mixture.dpgmm.VBGMM'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('VBGMM', <class 'sklearn.mixture.dpgmm.VBGMM'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('VBGMM', <class 'sklearn.mixture.dpgmm.VBGMM'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('VBGMM', <class 'sklearn.mixture.dpgmm.VBGMM'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('VBGMM', <class 'sklearn.mixture.dpgmm.VBGMM'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('VBGMM', <class 'sklearn.mixture.dpgmm.VBGMM'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('VBGMM', <class 'sklearn.mixture.dpgmm.VBGMM'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('VarianceThreshold', <class 'sklearn.feature_selection.variance_threshold.VarianceThreshold'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('VarianceThreshold', <class 'sklearn.feature_selection.variance_threshold.VarianceThreshold'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('VarianceThreshold', <class 'sklearn.feature_selection.variance_threshold.VarianceThreshold'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('VarianceThreshold', <class 'sklearn.feature_selection.variance_threshold.VarianceThreshold'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('VarianceThreshold', <class 'sklearn.feature_selection.variance_threshold.VarianceThreshold'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('VarianceThreshold', <class 'sklearn.feature_selection.variance_threshold.VarianceThreshold'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('VarianceThreshold', <class 'sklearn.feature_selection.variance_threshold.VarianceThreshold'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('VarianceThreshold', <class 'sklearn.feature_selection.variance_threshold.VarianceThreshold'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Ward', <class 'sklearn.cluster.hierarchical.Ward'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Ward', <class 'sklearn.cluster.hierarchical.Ward'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Ward', <class 'sklearn.cluster.hierarchical.Ward'>) ... /root/.local/lib/python2.7/site-packages/sklearn/cluster/hierarchical.py:938: DeprecationWarning: The Ward class is deprecated since 0.14 and will be removed in 0.17. Use the AgglomerativeClustering instead.
  "instead.", DeprecationWarning)
ok
sklearn.tests.test_common.test_non_meta_estimators('Ward', <class 'sklearn.cluster.hierarchical.Ward'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Ward', <class 'sklearn.cluster.hierarchical.Ward'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Ward', <class 'sklearn.cluster.hierarchical.Ward'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Ward', <class 'sklearn.cluster.hierarchical.Ward'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('Ward', <class 'sklearn.cluster.hierarchical.Ward'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('WardAgglomeration', <class 'sklearn.cluster.hierarchical.WardAgglomeration'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('WardAgglomeration', <class 'sklearn.cluster.hierarchical.WardAgglomeration'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('WardAgglomeration', <class 'sklearn.cluster.hierarchical.WardAgglomeration'>) ... /root/.local/lib/python2.7/site-packages/sklearn/cluster/hierarchical.py:938: DeprecationWarning: The Ward class is deprecated since 0.14 and will be removed in 0.17. Use the AgglomerativeClustering instead.
  "instead.", DeprecationWarning)
ok
sklearn.tests.test_common.test_non_meta_estimators('WardAgglomeration', <class 'sklearn.cluster.hierarchical.WardAgglomeration'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('WardAgglomeration', <class 'sklearn.cluster.hierarchical.WardAgglomeration'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('WardAgglomeration', <class 'sklearn.cluster.hierarchical.WardAgglomeration'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('WardAgglomeration', <class 'sklearn.cluster.hierarchical.WardAgglomeration'>) ... ok
sklearn.tests.test_common.test_non_meta_estimators('WardAgglomeration', <class 'sklearn.cluster.hierarchical.WardAgglomeration'>) ... ok
sklearn.tests.test_common.test_transformers('AdditiveChi2Sampler', <class 'sklearn.kernel_approximation.AdditiveChi2Sampler'>) ... ok
sklearn.tests.test_common.test_transformers('BernoulliRBM', <class 'sklearn.neural_network.rbm.BernoulliRBM'>) ... /root/.local/lib/python2.7/site-packages/sklearn/utils/extmath.py:105: NonBLASDotWarning: Data must be of same type. Supported types are 32 and 64 bit float. Falling back to np.dot.
  'Falling back to np.dot.', NonBLASDotWarning)
ok
sklearn.tests.test_common.test_transformers('BernoulliRBM', <class 'sklearn.neural_network.rbm.BernoulliRBM'>) ... ok
sklearn.tests.test_common.test_transformers('BernoulliRBM', <class 'sklearn.neural_network.rbm.BernoulliRBM'>) ... ok
sklearn.tests.test_common.test_transformers('BernoulliRBM', <class 'sklearn.neural_network.rbm.BernoulliRBM'>) ... ok
sklearn.tests.test_common.test_transformers('Binarizer', <class 'sklearn.preprocessing.data.Binarizer'>) ... ok
sklearn.tests.test_common.test_transformers('Birch', <class 'sklearn.cluster.birch.Birch'>) ... /root/.local/lib/python2.7/site-packages/sklearn/cluster/birch.py:599: UserWarning: Number of subclusters found (2) by Birch is less than (3). Decrease the threshold.
  % (len(centroids), self.n_clusters))
ok
sklearn.tests.test_common.test_transformers('Birch', <class 'sklearn.cluster.birch.Birch'>) ... ok
sklearn.tests.test_common.test_transformers('Birch', <class 'sklearn.cluster.birch.Birch'>) ... ok
sklearn.tests.test_common.test_transformers('Birch', <class 'sklearn.cluster.birch.Birch'>) ... ok
sklearn.tests.test_common.test_transformers('CCA', <class 'sklearn.cross_decomposition.cca_.CCA'>) ... /root/.local/lib/python2.7/site-packages/sklearn/cross_decomposition/pls_.py:298: UserWarning: X scores are null at iteration 1
  warnings.warn('X scores are null at iteration %s' % k)
ok
sklearn.tests.test_common.test_transformers('CCA', <class 'sklearn.cross_decomposition.cca_.CCA'>) ... ok
sklearn.tests.test_common.test_transformers('CCA', <class 'sklearn.cross_decomposition.cca_.CCA'>) ... ok
sklearn.tests.test_common.test_transformers('DecisionTreeClassifier', <class 'sklearn.tree.tree.DecisionTreeClassifier'>) ... ok
sklearn.tests.test_common.test_transformers('DecisionTreeClassifier', <class 'sklearn.tree.tree.DecisionTreeClassifier'>) ... ok
sklearn.tests.test_common.test_transformers('DecisionTreeClassifier', <class 'sklearn.tree.tree.DecisionTreeClassifier'>) ... ok
sklearn.tests.test_common.test_transformers('DecisionTreeClassifier', <class 'sklearn.tree.tree.DecisionTreeClassifier'>) ... ok
sklearn.tests.test_common.test_transformers('DecisionTreeRegressor', <class 'sklearn.tree.tree.DecisionTreeRegressor'>) ... ok
sklearn.tests.test_common.test_transformers('DecisionTreeRegressor', <class 'sklearn.tree.tree.DecisionTreeRegressor'>) ... ok
sklearn.tests.test_common.test_transformers('DecisionTreeRegressor', <class 'sklearn.tree.tree.DecisionTreeRegressor'>) ... ok
sklearn.tests.test_common.test_transformers('DecisionTreeRegressor', <class 'sklearn.tree.tree.DecisionTreeRegressor'>) ... ok
sklearn.tests.test_common.test_transformers('DictionaryLearning', <class 'sklearn.decomposition.dict_learning.DictionaryLearning'>) ... ok
sklearn.tests.test_common.test_transformers('DictionaryLearning', <class 'sklearn.decomposition.dict_learning.DictionaryLearning'>) ... ok
sklearn.tests.test_common.test_transformers('DictionaryLearning', <class 'sklearn.decomposition.dict_learning.DictionaryLearning'>) ... ok
sklearn.tests.test_common.test_transformers('DictionaryLearning', <class 'sklearn.decomposition.dict_learning.DictionaryLearning'>) ... ok
sklearn.tests.test_common.test_transformers('ExtraTreeClassifier', <class 'sklearn.tree.tree.ExtraTreeClassifier'>) ... ok
sklearn.tests.test_common.test_transformers('ExtraTreeClassifier', <class 'sklearn.tree.tree.ExtraTreeClassifier'>) ... ok
sklearn.tests.test_common.test_transformers('ExtraTreeClassifier', <class 'sklearn.tree.tree.ExtraTreeClassifier'>) ... ok
sklearn.tests.test_common.test_transformers('ExtraTreeClassifier', <class 'sklearn.tree.tree.ExtraTreeClassifier'>) ... ok
sklearn.tests.test_common.test_transformers('ExtraTreeRegressor', <class 'sklearn.tree.tree.ExtraTreeRegressor'>) ... ok
sklearn.tests.test_common.test_transformers('ExtraTreeRegressor', <class 'sklearn.tree.tree.ExtraTreeRegressor'>) ... ok
sklearn.tests.test_common.test_transformers('ExtraTreeRegressor', <class 'sklearn.tree.tree.ExtraTreeRegressor'>) ... ok
sklearn.tests.test_common.test_transformers('ExtraTreeRegressor', <class 'sklearn.tree.tree.ExtraTreeRegressor'>) ... ok
sklearn.tests.test_common.test_transformers('ExtraTreesClassifier', <class 'sklearn.ensemble.forest.ExtraTreesClassifier'>) ... ok
sklearn.tests.test_common.test_transformers('ExtraTreesClassifier', <class 'sklearn.ensemble.forest.ExtraTreesClassifier'>) ... ok
sklearn.tests.test_common.test_transformers('ExtraTreesClassifier', <class 'sklearn.ensemble.forest.ExtraTreesClassifier'>) ... ok
sklearn.tests.test_common.test_transformers('ExtraTreesClassifier', <class 'sklearn.ensemble.forest.ExtraTreesClassifier'>) ... ok
sklearn.tests.test_common.test_transformers('ExtraTreesRegressor', <class 'sklearn.ensemble.forest.ExtraTreesRegressor'>) ... ok
sklearn.tests.test_common.test_transformers('ExtraTreesRegressor', <class 'sklearn.ensemble.forest.ExtraTreesRegressor'>) ... ok
sklearn.tests.test_common.test_transformers('ExtraTreesRegressor', <class 'sklearn.ensemble.forest.ExtraTreesRegressor'>) ... ok
sklearn.tests.test_common.test_transformers('ExtraTreesRegressor', <class 'sklearn.ensemble.forest.ExtraTreesRegressor'>) ... ok
sklearn.tests.test_common.test_transformers('FactorAnalysis', <class 'sklearn.decomposition.factor_analysis.FactorAnalysis'>) ... ok
sklearn.tests.test_common.test_transformers('FactorAnalysis', <class 'sklearn.decomposition.factor_analysis.FactorAnalysis'>) ... ok
sklearn.tests.test_common.test_transformers('FactorAnalysis', <class 'sklearn.decomposition.factor_analysis.FactorAnalysis'>) ... ok
sklearn.tests.test_common.test_transformers('FactorAnalysis', <class 'sklearn.decomposition.factor_analysis.FactorAnalysis'>) ... ok
sklearn.tests.test_common.test_transformers('FastICA', <class 'sklearn.decomposition.fastica_.FastICA'>) ... /root/.local/lib/python2.7/site-packages/sklearn/decomposition/fastica_.py:117: UserWarning: FastICA did not converge. You might want to increase the number of iterations.
  ' to increase the number of iterations.')
ok
sklearn.tests.test_common.test_transformers('FastICA', <class 'sklearn.decomposition.fastica_.FastICA'>) ... ok
sklearn.tests.test_common.test_transformers('FastICA', <class 'sklearn.decomposition.fastica_.FastICA'>) ... ok
sklearn.tests.test_common.test_transformers('FastICA', <class 'sklearn.decomposition.fastica_.FastICA'>) ... ok
sklearn.tests.test_common.test_transformers('FeatureAgglomeration', <class 'sklearn.cluster.hierarchical.FeatureAgglomeration'>) ... ok
sklearn.tests.test_common.test_transformers('FeatureAgglomeration', <class 'sklearn.cluster.hierarchical.FeatureAgglomeration'>) ... ok
sklearn.tests.test_common.test_transformers('FeatureAgglomeration', <class 'sklearn.cluster.hierarchical.FeatureAgglomeration'>) ... ok
sklearn.tests.test_common.test_transformers('FeatureAgglomeration', <class 'sklearn.cluster.hierarchical.FeatureAgglomeration'>) ... ok
sklearn.tests.test_common.test_transformers('GaussianRandomProjection', <class 'sklearn.random_projection.GaussianRandomProjection'>) ... ok
sklearn.tests.test_common.test_transformers('GaussianRandomProjection', <class 'sklearn.random_projection.GaussianRandomProjection'>) ... ok
sklearn.tests.test_common.test_transformers('GaussianRandomProjection', <class 'sklearn.random_projection.GaussianRandomProjection'>) ... ok
sklearn.tests.test_common.test_transformers('GaussianRandomProjection', <class 'sklearn.random_projection.GaussianRandomProjection'>) ... ok
sklearn.tests.test_common.test_transformers('GenericUnivariateSelect', <class 'sklearn.feature_selection.univariate_selection.GenericUnivariateSelect'>) ... ok
sklearn.tests.test_common.test_transformers('GenericUnivariateSelect', <class 'sklearn.feature_selection.univariate_selection.GenericUnivariateSelect'>) ... ok
sklearn.tests.test_common.test_transformers('GenericUnivariateSelect', <class 'sklearn.feature_selection.univariate_selection.GenericUnivariateSelect'>) ... ok
sklearn.tests.test_common.test_transformers('GenericUnivariateSelect', <class 'sklearn.feature_selection.univariate_selection.GenericUnivariateSelect'>) ... ok
sklearn.tests.test_common.test_transformers('GradientBoostingClassifier', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingClassifier'>) ... ok
sklearn.tests.test_common.test_transformers('GradientBoostingClassifier', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingClassifier'>) ... ok
sklearn.tests.test_common.test_transformers('GradientBoostingClassifier', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingClassifier'>) ... ok
sklearn.tests.test_common.test_transformers('GradientBoostingClassifier', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingClassifier'>) ... ok
sklearn.tests.test_common.test_transformers('GradientBoostingRegressor', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingRegressor'>) ... ok
sklearn.tests.test_common.test_transformers('GradientBoostingRegressor', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingRegressor'>) ... ok
sklearn.tests.test_common.test_transformers('GradientBoostingRegressor', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingRegressor'>) ... ok
sklearn.tests.test_common.test_transformers('GradientBoostingRegressor', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingRegressor'>) ... ok
sklearn.tests.test_common.test_transformers('Imputer', <class 'sklearn.preprocessing.imputation.Imputer'>) ... ok
sklearn.tests.test_common.test_transformers('Imputer', <class 'sklearn.preprocessing.imputation.Imputer'>) ... ok
sklearn.tests.test_common.test_transformers('Imputer', <class 'sklearn.preprocessing.imputation.Imputer'>) ... ok
sklearn.tests.test_common.test_transformers('Imputer', <class 'sklearn.preprocessing.imputation.Imputer'>) ... ok
sklearn.tests.test_common.test_transformers('IncrementalPCA', <class 'sklearn.decomposition.incremental_pca.IncrementalPCA'>) ... ok
sklearn.tests.test_common.test_transformers('IncrementalPCA', <class 'sklearn.decomposition.incremental_pca.IncrementalPCA'>) ... ok
sklearn.tests.test_common.test_transformers('IncrementalPCA', <class 'sklearn.decomposition.incremental_pca.IncrementalPCA'>) ... ok
sklearn.tests.test_common.test_transformers('IncrementalPCA', <class 'sklearn.decomposition.incremental_pca.IncrementalPCA'>) ... ok
sklearn.tests.test_common.test_transformers('Isomap', <class 'sklearn.manifold.isomap.Isomap'>) ... ok
sklearn.tests.test_common.test_transformers('Isomap', <class 'sklearn.manifold.isomap.Isomap'>) ... ok
sklearn.tests.test_common.test_transformers('Isomap', <class 'sklearn.manifold.isomap.Isomap'>) ... ok
sklearn.tests.test_common.test_transformers('Isomap', <class 'sklearn.manifold.isomap.Isomap'>) ... ok
sklearn.tests.test_common.test_transformers('KMeans', <class 'sklearn.cluster.k_means_.KMeans'>) ... ok
sklearn.tests.test_common.test_transformers('KMeans', <class 'sklearn.cluster.k_means_.KMeans'>) ... ok
sklearn.tests.test_common.test_transformers('KMeans', <class 'sklearn.cluster.k_means_.KMeans'>) ... ok
sklearn.tests.test_common.test_transformers('KMeans', <class 'sklearn.cluster.k_means_.KMeans'>) ... ok
sklearn.tests.test_common.test_transformers('KernelCenterer', <class 'sklearn.preprocessing.data.KernelCenterer'>) ... ok
sklearn.tests.test_common.test_transformers('KernelCenterer', <class 'sklearn.preprocessing.data.KernelCenterer'>) ... ok
sklearn.tests.test_common.test_transformers('KernelCenterer', <class 'sklearn.preprocessing.data.KernelCenterer'>) ... ok
sklearn.tests.test_common.test_transformers('KernelCenterer', <class 'sklearn.preprocessing.data.KernelCenterer'>) ... ok
sklearn.tests.test_common.test_transformers('KernelPCA', <class 'sklearn.decomposition.kernel_pca.KernelPCA'>) ... ok
sklearn.tests.test_common.test_transformers('KernelPCA', <class 'sklearn.decomposition.kernel_pca.KernelPCA'>) ... ok
sklearn.tests.test_common.test_transformers('KernelPCA', <class 'sklearn.decomposition.kernel_pca.KernelPCA'>) ... ok
sklearn.tests.test_common.test_transformers('KernelPCA', <class 'sklearn.decomposition.kernel_pca.KernelPCA'>) ... ok
sklearn.tests.test_common.test_transformers('LDA', <class 'sklearn.lda.LDA'>) ... ok
sklearn.tests.test_common.test_transformers('LDA', <class 'sklearn.lda.LDA'>) ... ok
sklearn.tests.test_common.test_transformers('LDA', <class 'sklearn.lda.LDA'>) ... ok
sklearn.tests.test_common.test_transformers('LDA', <class 'sklearn.lda.LDA'>) ... ok
sklearn.tests.test_common.test_transformers('LinearSVC', <class 'sklearn.svm.classes.LinearSVC'>) ... ok
sklearn.tests.test_common.test_transformers('LinearSVC', <class 'sklearn.svm.classes.LinearSVC'>) ... ok
sklearn.tests.test_common.test_transformers('LinearSVC', <class 'sklearn.svm.classes.LinearSVC'>) ... ok
sklearn.tests.test_common.test_transformers('LinearSVC', <class 'sklearn.svm.classes.LinearSVC'>) ... ok
sklearn.tests.test_common.test_transformers('LocallyLinearEmbedding', <class 'sklearn.manifold.locally_linear.LocallyLinearEmbedding'>) ... ok
sklearn.tests.test_common.test_transformers('LocallyLinearEmbedding', <class 'sklearn.manifold.locally_linear.LocallyLinearEmbedding'>) ... ok
sklearn.tests.test_common.test_transformers('LocallyLinearEmbedding', <class 'sklearn.manifold.locally_linear.LocallyLinearEmbedding'>) ... ok
sklearn.tests.test_common.test_transformers('LocallyLinearEmbedding', <class 'sklearn.manifold.locally_linear.LocallyLinearEmbedding'>) ... ok
sklearn.tests.test_common.test_transformers('LogisticRegression', <class 'sklearn.linear_model.logistic.LogisticRegression'>) ... ok
sklearn.tests.test_common.test_transformers('LogisticRegression', <class 'sklearn.linear_model.logistic.LogisticRegression'>) ... ok
sklearn.tests.test_common.test_transformers('LogisticRegression', <class 'sklearn.linear_model.logistic.LogisticRegression'>) ... ok
sklearn.tests.test_common.test_transformers('LogisticRegression', <class 'sklearn.linear_model.logistic.LogisticRegression'>) ... ok
sklearn.tests.test_common.test_transformers('LogisticRegressionCV', <class 'sklearn.linear_model.logistic.LogisticRegressionCV'>) ... ok
sklearn.tests.test_common.test_transformers('LogisticRegressionCV', <class 'sklearn.linear_model.logistic.LogisticRegressionCV'>) ... ok
sklearn.tests.test_common.test_transformers('LogisticRegressionCV', <class 'sklearn.linear_model.logistic.LogisticRegressionCV'>) ... ok
sklearn.tests.test_common.test_transformers('LogisticRegressionCV', <class 'sklearn.linear_model.logistic.LogisticRegressionCV'>) ... ok
sklearn.tests.test_common.test_transformers('MinMaxScaler', <class 'sklearn.preprocessing.data.MinMaxScaler'>) ... ok
sklearn.tests.test_common.test_transformers('MinMaxScaler', <class 'sklearn.preprocessing.data.MinMaxScaler'>) ... ok
sklearn.tests.test_common.test_transformers('MinMaxScaler', <class 'sklearn.preprocessing.data.MinMaxScaler'>) ... ok
sklearn.tests.test_common.test_transformers('MinMaxScaler', <class 'sklearn.preprocessing.data.MinMaxScaler'>) ... ok
sklearn.tests.test_common.test_transformers('MiniBatchDictionaryLearning', <class 'sklearn.decomposition.dict_learning.MiniBatchDictionaryLearning'>) ... ok
sklearn.tests.test_common.test_transformers('MiniBatchDictionaryLearning', <class 'sklearn.decomposition.dict_learning.MiniBatchDictionaryLearning'>) ... ok
sklearn.tests.test_common.test_transformers('MiniBatchDictionaryLearning', <class 'sklearn.decomposition.dict_learning.MiniBatchDictionaryLearning'>) ... ok
sklearn.tests.test_common.test_transformers('MiniBatchDictionaryLearning', <class 'sklearn.decomposition.dict_learning.MiniBatchDictionaryLearning'>) ... ok
sklearn.tests.test_common.test_transformers('MiniBatchKMeans', <class 'sklearn.cluster.k_means_.MiniBatchKMeans'>) ... ok
sklearn.tests.test_common.test_transformers('MiniBatchKMeans', <class 'sklearn.cluster.k_means_.MiniBatchKMeans'>) ... ok
sklearn.tests.test_common.test_transformers('MiniBatchKMeans', <class 'sklearn.cluster.k_means_.MiniBatchKMeans'>) ... ok
sklearn.tests.test_common.test_transformers('MiniBatchKMeans', <class 'sklearn.cluster.k_means_.MiniBatchKMeans'>) ... ok
sklearn.tests.test_common.test_transformers('MiniBatchSparsePCA', <class 'sklearn.decomposition.sparse_pca.MiniBatchSparsePCA'>) ... ok
sklearn.tests.test_common.test_transformers('MiniBatchSparsePCA', <class 'sklearn.decomposition.sparse_pca.MiniBatchSparsePCA'>) ... ok
sklearn.tests.test_common.test_transformers('MiniBatchSparsePCA', <class 'sklearn.decomposition.sparse_pca.MiniBatchSparsePCA'>) ... ok
sklearn.tests.test_common.test_transformers('MiniBatchSparsePCA', <class 'sklearn.decomposition.sparse_pca.MiniBatchSparsePCA'>) ... ok
sklearn.tests.test_common.test_transformers('NMF', <class 'sklearn.decomposition.nmf.NMF'>) ... /root/.local/lib/python2.7/site-packages/sklearn/decomposition/nmf.py:532: UserWarning: Iteration limit reached during fit. Solving for W exactly.
  warnings.warn("Iteration limit reached during fit. Solving for W exactly.")
ok
sklearn.tests.test_common.test_transformers('NMF', <class 'sklearn.decomposition.nmf.NMF'>) ... ok
sklearn.tests.test_common.test_transformers('NMF', <class 'sklearn.decomposition.nmf.NMF'>) ... ok
sklearn.tests.test_common.test_transformers('NMF', <class 'sklearn.decomposition.nmf.NMF'>) ... ok
sklearn.tests.test_common.test_transformers('Normalizer', <class 'sklearn.preprocessing.data.Normalizer'>) ... ok
sklearn.tests.test_common.test_transformers('Nystroem', <class 'sklearn.kernel_approximation.Nystroem'>) ... /root/.local/lib/python2.7/site-packages/sklearn/kernel_approximation.py:455: UserWarning: n_components > n_samples. This is not possible.
n_components was set to n_samples, which results in inefficient evaluation of the full kernel.
  warnings.warn("n_components > n_samples. This is not possible.\n"
ok
sklearn.tests.test_common.test_transformers('Nystroem', <class 'sklearn.kernel_approximation.Nystroem'>) ... ok
sklearn.tests.test_common.test_transformers('Nystroem', <class 'sklearn.kernel_approximation.Nystroem'>) ... ok
sklearn.tests.test_common.test_transformers('Nystroem', <class 'sklearn.kernel_approximation.Nystroem'>) ... ok
sklearn.tests.test_common.test_transformers('PCA', <class 'sklearn.decomposition.pca.PCA'>) ... ok
sklearn.tests.test_common.test_transformers('PCA', <class 'sklearn.decomposition.pca.PCA'>) ... ok
sklearn.tests.test_common.test_transformers('PCA', <class 'sklearn.decomposition.pca.PCA'>) ... ok
sklearn.tests.test_common.test_transformers('PCA', <class 'sklearn.decomposition.pca.PCA'>) ... ok
sklearn.tests.test_common.test_transformers('PLSCanonical', <class 'sklearn.cross_decomposition.pls_.PLSCanonical'>) ... ok
sklearn.tests.test_common.test_transformers('PLSCanonical', <class 'sklearn.cross_decomposition.pls_.PLSCanonical'>) ... ok
sklearn.tests.test_common.test_transformers('PLSCanonical', <class 'sklearn.cross_decomposition.pls_.PLSCanonical'>) ... ok
sklearn.tests.test_common.test_transformers('PLSRegression', <class 'sklearn.cross_decomposition.pls_.PLSRegression'>) ... ok
sklearn.tests.test_common.test_transformers('PLSRegression', <class 'sklearn.cross_decomposition.pls_.PLSRegression'>) ... ok
sklearn.tests.test_common.test_transformers('PLSRegression', <class 'sklearn.cross_decomposition.pls_.PLSRegression'>) ... ok
sklearn.tests.test_common.test_transformers('PLSSVD', <class 'sklearn.cross_decomposition.pls_.PLSSVD'>) ... ok
sklearn.tests.test_common.test_transformers('PLSSVD', <class 'sklearn.cross_decomposition.pls_.PLSSVD'>) ... ok
sklearn.tests.test_common.test_transformers('PLSSVD', <class 'sklearn.cross_decomposition.pls_.PLSSVD'>) ... ok
sklearn.tests.test_common.test_transformers('Perceptron', <class 'sklearn.linear_model.perceptron.Perceptron'>) ... ok
sklearn.tests.test_common.test_transformers('Perceptron', <class 'sklearn.linear_model.perceptron.Perceptron'>) ... ok
sklearn.tests.test_common.test_transformers('Perceptron', <class 'sklearn.linear_model.perceptron.Perceptron'>) ... ok
sklearn.tests.test_common.test_transformers('Perceptron', <class 'sklearn.linear_model.perceptron.Perceptron'>) ... ok
sklearn.tests.test_common.test_transformers('ProjectedGradientNMF', <class 'sklearn.decomposition.nmf.ProjectedGradientNMF'>) ... ok
sklearn.tests.test_common.test_transformers('ProjectedGradientNMF', <class 'sklearn.decomposition.nmf.ProjectedGradientNMF'>) ... ok
sklearn.tests.test_common.test_transformers('ProjectedGradientNMF', <class 'sklearn.decomposition.nmf.ProjectedGradientNMF'>) ... ok
sklearn.tests.test_common.test_transformers('ProjectedGradientNMF', <class 'sklearn.decomposition.nmf.ProjectedGradientNMF'>) ... ok
sklearn.tests.test_common.test_transformers('RBFSampler', <class 'sklearn.kernel_approximation.RBFSampler'>) ... ok
sklearn.tests.test_common.test_transformers('RBFSampler', <class 'sklearn.kernel_approximation.RBFSampler'>) ... ok
sklearn.tests.test_common.test_transformers('RBFSampler', <class 'sklearn.kernel_approximation.RBFSampler'>) ... ok
sklearn.tests.test_common.test_transformers('RBFSampler', <class 'sklearn.kernel_approximation.RBFSampler'>) ... ok
sklearn.tests.test_common.test_transformers('RandomForestClassifier', <class 'sklearn.ensemble.forest.RandomForestClassifier'>) ... ok
sklearn.tests.test_common.test_transformers('RandomForestClassifier', <class 'sklearn.ensemble.forest.RandomForestClassifier'>) ... ok
sklearn.tests.test_common.test_transformers('RandomForestClassifier', <class 'sklearn.ensemble.forest.RandomForestClassifier'>) ... ok
sklearn.tests.test_common.test_transformers('RandomForestClassifier', <class 'sklearn.ensemble.forest.RandomForestClassifier'>) ... ok
sklearn.tests.test_common.test_transformers('RandomForestRegressor', <class 'sklearn.ensemble.forest.RandomForestRegressor'>) ... ok
sklearn.tests.test_common.test_transformers('RandomForestRegressor', <class 'sklearn.ensemble.forest.RandomForestRegressor'>) ... ok
sklearn.tests.test_common.test_transformers('RandomForestRegressor', <class 'sklearn.ensemble.forest.RandomForestRegressor'>) ... ok
sklearn.tests.test_common.test_transformers('RandomForestRegressor', <class 'sklearn.ensemble.forest.RandomForestRegressor'>) ... ok
sklearn.tests.test_common.test_transformers('RandomizedLasso', <class 'sklearn.linear_model.randomized_l1.RandomizedLasso'>) ... ok
sklearn.tests.test_common.test_transformers('RandomizedLasso', <class 'sklearn.linear_model.randomized_l1.RandomizedLasso'>) ... ok
sklearn.tests.test_common.test_transformers('RandomizedLasso', <class 'sklearn.linear_model.randomized_l1.RandomizedLasso'>) ... ok
sklearn.tests.test_common.test_transformers('RandomizedLasso', <class 'sklearn.linear_model.randomized_l1.RandomizedLasso'>) ... ok
sklearn.tests.test_common.test_transformers('RandomizedLogisticRegression', <class 'sklearn.linear_model.randomized_l1.RandomizedLogisticRegression'>) ... ok
sklearn.tests.test_common.test_transformers('RandomizedLogisticRegression', <class 'sklearn.linear_model.randomized_l1.RandomizedLogisticRegression'>) ... ok
sklearn.tests.test_common.test_transformers('RandomizedLogisticRegression', <class 'sklearn.linear_model.randomized_l1.RandomizedLogisticRegression'>) ... ok
sklearn.tests.test_common.test_transformers('RandomizedLogisticRegression', <class 'sklearn.linear_model.randomized_l1.RandomizedLogisticRegression'>) ... ok
sklearn.tests.test_common.test_transformers('RandomizedPCA', <class 'sklearn.decomposition.pca.RandomizedPCA'>) ... ok
sklearn.tests.test_common.test_transformers('RandomizedPCA', <class 'sklearn.decomposition.pca.RandomizedPCA'>) ... ok
sklearn.tests.test_common.test_transformers('RandomizedPCA', <class 'sklearn.decomposition.pca.RandomizedPCA'>) ... ok
sklearn.tests.test_common.test_transformers('RandomizedPCA', <class 'sklearn.decomposition.pca.RandomizedPCA'>) ... ok
sklearn.tests.test_common.test_transformers('SGDClassifier', <class 'sklearn.linear_model.stochastic_gradient.SGDClassifier'>) ... ok
sklearn.tests.test_common.test_transformers('SGDClassifier', <class 'sklearn.linear_model.stochastic_gradient.SGDClassifier'>) ... ok
sklearn.tests.test_common.test_transformers('SGDClassifier', <class 'sklearn.linear_model.stochastic_gradient.SGDClassifier'>) ... ok
sklearn.tests.test_common.test_transformers('SGDClassifier', <class 'sklearn.linear_model.stochastic_gradient.SGDClassifier'>) ... ok
sklearn.tests.test_common.test_transformers('SGDRegressor', <class 'sklearn.linear_model.stochastic_gradient.SGDRegressor'>) ... ok
sklearn.tests.test_common.test_transformers('SGDRegressor', <class 'sklearn.linear_model.stochastic_gradient.SGDRegressor'>) ... ok
sklearn.tests.test_common.test_transformers('SGDRegressor', <class 'sklearn.linear_model.stochastic_gradient.SGDRegressor'>) ... ok
sklearn.tests.test_common.test_transformers('SGDRegressor', <class 'sklearn.linear_model.stochastic_gradient.SGDRegressor'>) ... ok
sklearn.tests.test_common.test_transformers('SelectFdr', <class 'sklearn.feature_selection.univariate_selection.SelectFdr'>) ... ok
sklearn.tests.test_common.test_transformers('SelectFdr', <class 'sklearn.feature_selection.univariate_selection.SelectFdr'>) ... ok
sklearn.tests.test_common.test_transformers('SelectFdr', <class 'sklearn.feature_selection.univariate_selection.SelectFdr'>) ... ok
sklearn.tests.test_common.test_transformers('SelectFdr', <class 'sklearn.feature_selection.univariate_selection.SelectFdr'>) ... ok
sklearn.tests.test_common.test_transformers('SelectFpr', <class 'sklearn.feature_selection.univariate_selection.SelectFpr'>) ... ok
sklearn.tests.test_common.test_transformers('SelectFpr', <class 'sklearn.feature_selection.univariate_selection.SelectFpr'>) ... ok
sklearn.tests.test_common.test_transformers('SelectFpr', <class 'sklearn.feature_selection.univariate_selection.SelectFpr'>) ... ok
sklearn.tests.test_common.test_transformers('SelectFpr', <class 'sklearn.feature_selection.univariate_selection.SelectFpr'>) ... ok
sklearn.tests.test_common.test_transformers('SelectFwe', <class 'sklearn.feature_selection.univariate_selection.SelectFwe'>) ... ok
sklearn.tests.test_common.test_transformers('SelectFwe', <class 'sklearn.feature_selection.univariate_selection.SelectFwe'>) ... ok
sklearn.tests.test_common.test_transformers('SelectFwe', <class 'sklearn.feature_selection.univariate_selection.SelectFwe'>) ... ok
sklearn.tests.test_common.test_transformers('SelectFwe', <class 'sklearn.feature_selection.univariate_selection.SelectFwe'>) ... ok
sklearn.tests.test_common.test_transformers('SelectKBest', <class 'sklearn.feature_selection.univariate_selection.SelectKBest'>) ... ok
sklearn.tests.test_common.test_transformers('SelectKBest', <class 'sklearn.feature_selection.univariate_selection.SelectKBest'>) ... ok
sklearn.tests.test_common.test_transformers('SelectKBest', <class 'sklearn.feature_selection.univariate_selection.SelectKBest'>) ... ok
sklearn.tests.test_common.test_transformers('SelectKBest', <class 'sklearn.feature_selection.univariate_selection.SelectKBest'>) ... ok
sklearn.tests.test_common.test_transformers('SelectPercentile', <class 'sklearn.feature_selection.univariate_selection.SelectPercentile'>) ... ok
sklearn.tests.test_common.test_transformers('SelectPercentile', <class 'sklearn.feature_selection.univariate_selection.SelectPercentile'>) ... ok
sklearn.tests.test_common.test_transformers('SelectPercentile', <class 'sklearn.feature_selection.univariate_selection.SelectPercentile'>) ... ok
sklearn.tests.test_common.test_transformers('SelectPercentile', <class 'sklearn.feature_selection.univariate_selection.SelectPercentile'>) ... ok
sklearn.tests.test_common.test_transformers('SkewedChi2Sampler', <class 'sklearn.kernel_approximation.SkewedChi2Sampler'>) ... ok
sklearn.tests.test_common.test_transformers('SkewedChi2Sampler', <class 'sklearn.kernel_approximation.SkewedChi2Sampler'>) ... ok
sklearn.tests.test_common.test_transformers('SkewedChi2Sampler', <class 'sklearn.kernel_approximation.SkewedChi2Sampler'>) ... ok
sklearn.tests.test_common.test_transformers('SkewedChi2Sampler', <class 'sklearn.kernel_approximation.SkewedChi2Sampler'>) ... ok
sklearn.tests.test_common.test_transformers('SparsePCA', <class 'sklearn.decomposition.sparse_pca.SparsePCA'>) ... ok
sklearn.tests.test_common.test_transformers('SparsePCA', <class 'sklearn.decomposition.sparse_pca.SparsePCA'>) ... ok
sklearn.tests.test_common.test_transformers('SparsePCA', <class 'sklearn.decomposition.sparse_pca.SparsePCA'>) ... ok
sklearn.tests.test_common.test_transformers('SparsePCA', <class 'sklearn.decomposition.sparse_pca.SparsePCA'>) ... ok
sklearn.tests.test_common.test_transformers('SparseRandomProjection', <class 'sklearn.random_projection.SparseRandomProjection'>) ... ok
sklearn.tests.test_common.test_transformers('SparseRandomProjection', <class 'sklearn.random_projection.SparseRandomProjection'>) ... ok
sklearn.tests.test_common.test_transformers('SparseRandomProjection', <class 'sklearn.random_projection.SparseRandomProjection'>) ... ok
sklearn.tests.test_common.test_transformers('SparseRandomProjection', <class 'sklearn.random_projection.SparseRandomProjection'>) ... ok
sklearn.tests.test_common.test_transformers('StandardScaler', <class 'sklearn.preprocessing.data.StandardScaler'>) ... ok
sklearn.tests.test_common.test_transformers('StandardScaler', <class 'sklearn.preprocessing.data.StandardScaler'>) ... ok
sklearn.tests.test_common.test_transformers('StandardScaler', <class 'sklearn.preprocessing.data.StandardScaler'>) ... ok
sklearn.tests.test_common.test_transformers('StandardScaler', <class 'sklearn.preprocessing.data.StandardScaler'>) ... ok
sklearn.tests.test_common.test_transformers('VarianceThreshold', <class 'sklearn.feature_selection.variance_threshold.VarianceThreshold'>) ... ok
sklearn.tests.test_common.test_transformers('VarianceThreshold', <class 'sklearn.feature_selection.variance_threshold.VarianceThreshold'>) ... ok
sklearn.tests.test_common.test_transformers('VarianceThreshold', <class 'sklearn.feature_selection.variance_threshold.VarianceThreshold'>) ... ok
sklearn.tests.test_common.test_transformers('VarianceThreshold', <class 'sklearn.feature_selection.variance_threshold.VarianceThreshold'>) ... ok
sklearn.tests.test_common.test_transformers('WardAgglomeration', <class 'sklearn.cluster.hierarchical.WardAgglomeration'>) ... ok
sklearn.tests.test_common.test_transformers('WardAgglomeration', <class 'sklearn.cluster.hierarchical.WardAgglomeration'>) ... ok
sklearn.tests.test_common.test_transformers('WardAgglomeration', <class 'sklearn.cluster.hierarchical.WardAgglomeration'>) ... ok
sklearn.tests.test_common.test_transformers('WardAgglomeration', <class 'sklearn.cluster.hierarchical.WardAgglomeration'>) ... ok
sklearn.tests.test_common.test_clustering('AffinityPropagation', <class 'sklearn.cluster.affinity_propagation_.AffinityPropagation'>) ... ok
sklearn.tests.test_common.test_clustering('AffinityPropagation', <class 'sklearn.cluster.affinity_propagation_.AffinityPropagation'>) ... ok
sklearn.tests.test_common.test_clustering('AffinityPropagation', <class 'sklearn.cluster.affinity_propagation_.AffinityPropagation'>) ... ok
sklearn.tests.test_common.test_clustering('AgglomerativeClustering', <class 'sklearn.cluster.hierarchical.AgglomerativeClustering'>) ... ok
sklearn.tests.test_common.test_clustering('AgglomerativeClustering', <class 'sklearn.cluster.hierarchical.AgglomerativeClustering'>) ... ok
sklearn.tests.test_common.test_clustering('AgglomerativeClustering', <class 'sklearn.cluster.hierarchical.AgglomerativeClustering'>) ... ok
sklearn.tests.test_common.test_clustering('Birch', <class 'sklearn.cluster.birch.Birch'>) ... ok
sklearn.tests.test_common.test_clustering('Birch', <class 'sklearn.cluster.birch.Birch'>) ... ok
sklearn.tests.test_common.test_clustering('Birch', <class 'sklearn.cluster.birch.Birch'>) ... ok
sklearn.tests.test_common.test_clustering('DBSCAN', <class 'sklearn.cluster.dbscan_.DBSCAN'>) ... ok
sklearn.tests.test_common.test_clustering('DBSCAN', <class 'sklearn.cluster.dbscan_.DBSCAN'>) ... /root/.local/lib/python2.7/site-packages/sklearn/cluster/dbscan_.py:106: DeprecationWarning: The parameter random_state is deprecated in 0.16 and will be removed in version 0.18. DBSCAN is deterministic except for rare border cases.
  category=DeprecationWarning)
ok
sklearn.tests.test_common.test_clustering('DBSCAN', <class 'sklearn.cluster.dbscan_.DBSCAN'>) ... ok
sklearn.tests.test_common.test_clustering('FeatureAgglomeration', <class 'sklearn.cluster.hierarchical.FeatureAgglomeration'>) ... ok
sklearn.tests.test_common.test_clustering('KMeans', <class 'sklearn.cluster.k_means_.KMeans'>) ... ok
sklearn.tests.test_common.test_clustering('KMeans', <class 'sklearn.cluster.k_means_.KMeans'>) ... ok
sklearn.tests.test_common.test_clustering('KMeans', <class 'sklearn.cluster.k_means_.KMeans'>) ... ok
sklearn.tests.test_common.test_clustering('MeanShift', <class 'sklearn.cluster.mean_shift_.MeanShift'>) ... ok
sklearn.tests.test_common.test_clustering('MeanShift', <class 'sklearn.cluster.mean_shift_.MeanShift'>) ... ok
sklearn.tests.test_common.test_clustering('MeanShift', <class 'sklearn.cluster.mean_shift_.MeanShift'>) ... ok
sklearn.tests.test_common.test_clustering('MiniBatchKMeans', <class 'sklearn.cluster.k_means_.MiniBatchKMeans'>) ... ok
sklearn.tests.test_common.test_clustering('MiniBatchKMeans', <class 'sklearn.cluster.k_means_.MiniBatchKMeans'>) ... ok
sklearn.tests.test_common.test_clustering('MiniBatchKMeans', <class 'sklearn.cluster.k_means_.MiniBatchKMeans'>) ... ok
sklearn.tests.test_common.test_clustering('SpectralClustering', <class 'sklearn.cluster.spectral.SpectralClustering'>) ... ok
sklearn.tests.test_common.test_clustering('SpectralClustering', <class 'sklearn.cluster.spectral.SpectralClustering'>) ... ok
sklearn.tests.test_common.test_clustering('SpectralClustering', <class 'sklearn.cluster.spectral.SpectralClustering'>) ... ok
sklearn.tests.test_common.test_clustering('Ward', <class 'sklearn.cluster.hierarchical.Ward'>) ... ok
sklearn.tests.test_common.test_clustering('Ward', <class 'sklearn.cluster.hierarchical.Ward'>) ... ok
sklearn.tests.test_common.test_clustering('Ward', <class 'sklearn.cluster.hierarchical.Ward'>) ... ok
sklearn.tests.test_common.test_clustering('WardAgglomeration', <class 'sklearn.cluster.hierarchical.WardAgglomeration'>) ... ok
sklearn.tests.test_common.test_classifiers('AdaBoostClassifier', <class 'sklearn.ensemble.weight_boosting.AdaBoostClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('AdaBoostClassifier', <class 'sklearn.ensemble.weight_boosting.AdaBoostClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('AdaBoostClassifier', <class 'sklearn.ensemble.weight_boosting.AdaBoostClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('AdaBoostClassifier', <class 'sklearn.ensemble.weight_boosting.AdaBoostClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('AdaBoostClassifier', <class 'sklearn.ensemble.weight_boosting.AdaBoostClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('AdaBoostClassifier', <class 'sklearn.ensemble.weight_boosting.AdaBoostClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('AdaBoostClassifier', <class 'sklearn.ensemble.weight_boosting.AdaBoostClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('AdaBoostClassifier', <class 'sklearn.ensemble.weight_boosting.AdaBoostClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('BaggingClassifier', <class 'sklearn.ensemble.bagging.BaggingClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('BaggingClassifier', <class 'sklearn.ensemble.bagging.BaggingClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('BaggingClassifier', <class 'sklearn.ensemble.bagging.BaggingClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('BaggingClassifier', <class 'sklearn.ensemble.bagging.BaggingClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('BaggingClassifier', <class 'sklearn.ensemble.bagging.BaggingClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('BaggingClassifier', <class 'sklearn.ensemble.bagging.BaggingClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('BaggingClassifier', <class 'sklearn.ensemble.bagging.BaggingClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('BaggingClassifier', <class 'sklearn.ensemble.bagging.BaggingClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('BernoulliNB', <class 'sklearn.naive_bayes.BernoulliNB'>) ... ok
sklearn.tests.test_common.test_classifiers('BernoulliNB', <class 'sklearn.naive_bayes.BernoulliNB'>) ... ok
sklearn.tests.test_common.test_classifiers('BernoulliNB', <class 'sklearn.naive_bayes.BernoulliNB'>) ... ok
sklearn.tests.test_common.test_classifiers('BernoulliNB', <class 'sklearn.naive_bayes.BernoulliNB'>) ... ok
sklearn.tests.test_common.test_classifiers('BernoulliNB', <class 'sklearn.naive_bayes.BernoulliNB'>) ... ok
sklearn.tests.test_common.test_classifiers('BernoulliNB', <class 'sklearn.naive_bayes.BernoulliNB'>) ... ok
sklearn.tests.test_common.test_classifiers('BernoulliNB', <class 'sklearn.naive_bayes.BernoulliNB'>) ... ok
sklearn.tests.test_common.test_classifiers('BernoulliNB', <class 'sklearn.naive_bayes.BernoulliNB'>) ... ok
sklearn.tests.test_common.test_classifiers('CalibratedClassifierCV', <class 'sklearn.calibration.CalibratedClassifierCV'>) ... ok
sklearn.tests.test_common.test_classifiers('CalibratedClassifierCV', <class 'sklearn.calibration.CalibratedClassifierCV'>) ... ok
sklearn.tests.test_common.test_classifiers('CalibratedClassifierCV', <class 'sklearn.calibration.CalibratedClassifierCV'>) ... ok
sklearn.tests.test_common.test_classifiers('CalibratedClassifierCV', <class 'sklearn.calibration.CalibratedClassifierCV'>) ... ok
sklearn.tests.test_common.test_classifiers('CalibratedClassifierCV', <class 'sklearn.calibration.CalibratedClassifierCV'>) ... ok
sklearn.tests.test_common.test_classifiers('CalibratedClassifierCV', <class 'sklearn.calibration.CalibratedClassifierCV'>) ... ok
sklearn.tests.test_common.test_classifiers('CalibratedClassifierCV', <class 'sklearn.calibration.CalibratedClassifierCV'>) ... ok
sklearn.tests.test_common.test_classifiers('CalibratedClassifierCV', <class 'sklearn.calibration.CalibratedClassifierCV'>) ... ok
sklearn.tests.test_common.test_classifiers('DecisionTreeClassifier', <class 'sklearn.tree.tree.DecisionTreeClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('DecisionTreeClassifier', <class 'sklearn.tree.tree.DecisionTreeClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('DecisionTreeClassifier', <class 'sklearn.tree.tree.DecisionTreeClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('DecisionTreeClassifier', <class 'sklearn.tree.tree.DecisionTreeClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('DecisionTreeClassifier', <class 'sklearn.tree.tree.DecisionTreeClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('DecisionTreeClassifier', <class 'sklearn.tree.tree.DecisionTreeClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('DecisionTreeClassifier', <class 'sklearn.tree.tree.DecisionTreeClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('ExtraTreeClassifier', <class 'sklearn.tree.tree.ExtraTreeClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('ExtraTreeClassifier', <class 'sklearn.tree.tree.ExtraTreeClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('ExtraTreeClassifier', <class 'sklearn.tree.tree.ExtraTreeClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('ExtraTreeClassifier', <class 'sklearn.tree.tree.ExtraTreeClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('ExtraTreeClassifier', <class 'sklearn.tree.tree.ExtraTreeClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('ExtraTreeClassifier', <class 'sklearn.tree.tree.ExtraTreeClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('ExtraTreeClassifier', <class 'sklearn.tree.tree.ExtraTreeClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('ExtraTreesClassifier', <class 'sklearn.ensemble.forest.ExtraTreesClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('ExtraTreesClassifier', <class 'sklearn.ensemble.forest.ExtraTreesClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('ExtraTreesClassifier', <class 'sklearn.ensemble.forest.ExtraTreesClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('ExtraTreesClassifier', <class 'sklearn.ensemble.forest.ExtraTreesClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('ExtraTreesClassifier', <class 'sklearn.ensemble.forest.ExtraTreesClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('ExtraTreesClassifier', <class 'sklearn.ensemble.forest.ExtraTreesClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('ExtraTreesClassifier', <class 'sklearn.ensemble.forest.ExtraTreesClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('ExtraTreesClassifier', <class 'sklearn.ensemble.forest.ExtraTreesClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('GaussianNB', <class 'sklearn.naive_bayes.GaussianNB'>) ... ok
sklearn.tests.test_common.test_classifiers('GaussianNB', <class 'sklearn.naive_bayes.GaussianNB'>) ... ok
sklearn.tests.test_common.test_classifiers('GaussianNB', <class 'sklearn.naive_bayes.GaussianNB'>) ... ok
sklearn.tests.test_common.test_classifiers('GaussianNB', <class 'sklearn.naive_bayes.GaussianNB'>) ... ok
sklearn.tests.test_common.test_classifiers('GaussianNB', <class 'sklearn.naive_bayes.GaussianNB'>) ... ok
sklearn.tests.test_common.test_classifiers('GaussianNB', <class 'sklearn.naive_bayes.GaussianNB'>) ... ok
sklearn.tests.test_common.test_classifiers('GaussianNB', <class 'sklearn.naive_bayes.GaussianNB'>) ... ok
sklearn.tests.test_common.test_classifiers('GaussianNB', <class 'sklearn.naive_bayes.GaussianNB'>) ... ok
sklearn.tests.test_common.test_classifiers('GradientBoostingClassifier', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('GradientBoostingClassifier', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('GradientBoostingClassifier', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('GradientBoostingClassifier', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('GradientBoostingClassifier', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('GradientBoostingClassifier', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('GradientBoostingClassifier', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('GradientBoostingClassifier', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('KNeighborsClassifier', <class 'sklearn.neighbors.classification.KNeighborsClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('KNeighborsClassifier', <class 'sklearn.neighbors.classification.KNeighborsClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('KNeighborsClassifier', <class 'sklearn.neighbors.classification.KNeighborsClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('KNeighborsClassifier', <class 'sklearn.neighbors.classification.KNeighborsClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('KNeighborsClassifier', <class 'sklearn.neighbors.classification.KNeighborsClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('KNeighborsClassifier', <class 'sklearn.neighbors.classification.KNeighborsClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('KNeighborsClassifier', <class 'sklearn.neighbors.classification.KNeighborsClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('KNeighborsClassifier', <class 'sklearn.neighbors.classification.KNeighborsClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('LDA', <class 'sklearn.lda.LDA'>) ... ok
sklearn.tests.test_common.test_classifiers('LDA', <class 'sklearn.lda.LDA'>) ... ok
sklearn.tests.test_common.test_classifiers('LDA', <class 'sklearn.lda.LDA'>) ... ok
sklearn.tests.test_common.test_classifiers('LDA', <class 'sklearn.lda.LDA'>) ... ok
sklearn.tests.test_common.test_classifiers('LDA', <class 'sklearn.lda.LDA'>) ... ok
sklearn.tests.test_common.test_classifiers('LDA', <class 'sklearn.lda.LDA'>) ... ok
sklearn.tests.test_common.test_classifiers('LDA', <class 'sklearn.lda.LDA'>) ... ok
sklearn.tests.test_common.test_classifiers('LDA', <class 'sklearn.lda.LDA'>) ... ok
sklearn.tests.test_common.test_classifiers('LabelPropagation', <class 'sklearn.semi_supervised.label_propagation.LabelPropagation'>) ... ok
sklearn.tests.test_common.test_classifiers('LabelPropagation', <class 'sklearn.semi_supervised.label_propagation.LabelPropagation'>) ... ok
sklearn.tests.test_common.test_classifiers('LabelPropagation', <class 'sklearn.semi_supervised.label_propagation.LabelPropagation'>) ... ok
sklearn.tests.test_common.test_classifiers('LabelPropagation', <class 'sklearn.semi_supervised.label_propagation.LabelPropagation'>) ... /root/.local/lib/python2.7/site-packages/sklearn/semi_supervised/label_propagation.py:342: RuntimeWarning: underflow encountered in divide
  affinity_matrix /= normalizer[:, np.newaxis]
ok
sklearn.tests.test_common.test_classifiers('LabelPropagation', <class 'sklearn.semi_supervised.label_propagation.LabelPropagation'>) ... ok
sklearn.tests.test_common.test_classifiers('LabelPropagation', <class 'sklearn.semi_supervised.label_propagation.LabelPropagation'>) ... ok
sklearn.tests.test_common.test_classifiers('LabelPropagation', <class 'sklearn.semi_supervised.label_propagation.LabelPropagation'>) ... ok
sklearn.tests.test_common.test_classifiers('LabelSpreading', <class 'sklearn.semi_supervised.label_propagation.LabelSpreading'>) ... ok
sklearn.tests.test_common.test_classifiers('LabelSpreading', <class 'sklearn.semi_supervised.label_propagation.LabelSpreading'>) ... ok
sklearn.tests.test_common.test_classifiers('LabelSpreading', <class 'sklearn.semi_supervised.label_propagation.LabelSpreading'>) ... ok
sklearn.tests.test_common.test_classifiers('LabelSpreading', <class 'sklearn.semi_supervised.label_propagation.LabelSpreading'>) ... /root/.local/lib/python2.7/site-packages/sklearn/utils/graph.py:174: RuntimeWarning: underflow encountered in divide
  lap /= w
/root/.local/lib/python2.7/site-packages/sklearn/utils/graph.py:175: RuntimeWarning: underflow encountered in divide
  lap /= w[:, np.newaxis]
ok
sklearn.tests.test_common.test_classifiers('LabelSpreading', <class 'sklearn.semi_supervised.label_propagation.LabelSpreading'>) ... ok
sklearn.tests.test_common.test_classifiers('LabelSpreading', <class 'sklearn.semi_supervised.label_propagation.LabelSpreading'>) ... ok
sklearn.tests.test_common.test_classifiers('LabelSpreading', <class 'sklearn.semi_supervised.label_propagation.LabelSpreading'>) ... ok
sklearn.tests.test_common.test_classifiers('LinearSVC', <class 'sklearn.svm.classes.LinearSVC'>) ... ok
sklearn.tests.test_common.test_classifiers('LinearSVC', <class 'sklearn.svm.classes.LinearSVC'>) ... ok
sklearn.tests.test_common.test_classifiers('LinearSVC', <class 'sklearn.svm.classes.LinearSVC'>) ... ok
sklearn.tests.test_common.test_classifiers('LinearSVC', <class 'sklearn.svm.classes.LinearSVC'>) ... ok
sklearn.tests.test_common.test_classifiers('LinearSVC', <class 'sklearn.svm.classes.LinearSVC'>) ... ok
sklearn.tests.test_common.test_classifiers('LinearSVC', <class 'sklearn.svm.classes.LinearSVC'>) ... ok
sklearn.tests.test_common.test_classifiers('LinearSVC', <class 'sklearn.svm.classes.LinearSVC'>) ... ok
sklearn.tests.test_common.test_classifiers('LinearSVC', <class 'sklearn.svm.classes.LinearSVC'>) ... ok
sklearn.tests.test_common.test_classifiers('LogisticRegression', <class 'sklearn.linear_model.logistic.LogisticRegression'>) ... ok
sklearn.tests.test_common.test_classifiers('LogisticRegression', <class 'sklearn.linear_model.logistic.LogisticRegression'>) ... ok
sklearn.tests.test_common.test_classifiers('LogisticRegression', <class 'sklearn.linear_model.logistic.LogisticRegression'>) ... ok
sklearn.tests.test_common.test_classifiers('LogisticRegression', <class 'sklearn.linear_model.logistic.LogisticRegression'>) ... ok
sklearn.tests.test_common.test_classifiers('LogisticRegression', <class 'sklearn.linear_model.logistic.LogisticRegression'>) ... ok
sklearn.tests.test_common.test_classifiers('LogisticRegression', <class 'sklearn.linear_model.logistic.LogisticRegression'>) ... ok
sklearn.tests.test_common.test_classifiers('LogisticRegression', <class 'sklearn.linear_model.logistic.LogisticRegression'>) ... ok
sklearn.tests.test_common.test_classifiers('LogisticRegression', <class 'sklearn.linear_model.logistic.LogisticRegression'>) ... ok
sklearn.tests.test_common.test_classifiers('LogisticRegressionCV', <class 'sklearn.linear_model.logistic.LogisticRegressionCV'>) ... ok
sklearn.tests.test_common.test_classifiers('LogisticRegressionCV', <class 'sklearn.linear_model.logistic.LogisticRegressionCV'>) ... ok
sklearn.tests.test_common.test_classifiers('LogisticRegressionCV', <class 'sklearn.linear_model.logistic.LogisticRegressionCV'>) ... ok
sklearn.tests.test_common.test_classifiers('LogisticRegressionCV', <class 'sklearn.linear_model.logistic.LogisticRegressionCV'>) ... ok
sklearn.tests.test_common.test_classifiers('LogisticRegressionCV', <class 'sklearn.linear_model.logistic.LogisticRegressionCV'>) ... ok
sklearn.tests.test_common.test_classifiers('LogisticRegressionCV', <class 'sklearn.linear_model.logistic.LogisticRegressionCV'>) ... ok
sklearn.tests.test_common.test_classifiers('LogisticRegressionCV', <class 'sklearn.linear_model.logistic.LogisticRegressionCV'>) ... ok
sklearn.tests.test_common.test_classifiers('LogisticRegressionCV', <class 'sklearn.linear_model.logistic.LogisticRegressionCV'>) ... ok
sklearn.tests.test_common.test_classifiers('MultinomialNB', <class 'sklearn.naive_bayes.MultinomialNB'>) ... ok
sklearn.tests.test_common.test_classifiers('MultinomialNB', <class 'sklearn.naive_bayes.MultinomialNB'>) ... ok
sklearn.tests.test_common.test_classifiers('MultinomialNB', <class 'sklearn.naive_bayes.MultinomialNB'>) ... ok
sklearn.tests.test_common.test_classifiers('MultinomialNB', <class 'sklearn.naive_bayes.MultinomialNB'>) ... ok
sklearn.tests.test_common.test_classifiers('MultinomialNB', <class 'sklearn.naive_bayes.MultinomialNB'>) ... ok
sklearn.tests.test_common.test_classifiers('MultinomialNB', <class 'sklearn.naive_bayes.MultinomialNB'>) ... ok
sklearn.tests.test_common.test_classifiers('MultinomialNB', <class 'sklearn.naive_bayes.MultinomialNB'>) ... ok
sklearn.tests.test_common.test_classifiers('NearestCentroid', <class 'sklearn.neighbors.nearest_centroid.NearestCentroid'>) ... ok
sklearn.tests.test_common.test_classifiers('NearestCentroid', <class 'sklearn.neighbors.nearest_centroid.NearestCentroid'>) ... ok
sklearn.tests.test_common.test_classifiers('NearestCentroid', <class 'sklearn.neighbors.nearest_centroid.NearestCentroid'>) ... ok
sklearn.tests.test_common.test_classifiers('NearestCentroid', <class 'sklearn.neighbors.nearest_centroid.NearestCentroid'>) ... ok
sklearn.tests.test_common.test_classifiers('NearestCentroid', <class 'sklearn.neighbors.nearest_centroid.NearestCentroid'>) ... ok
sklearn.tests.test_common.test_classifiers('NearestCentroid', <class 'sklearn.neighbors.nearest_centroid.NearestCentroid'>) ... ok
sklearn.tests.test_common.test_classifiers('NearestCentroid', <class 'sklearn.neighbors.nearest_centroid.NearestCentroid'>) ... ok
sklearn.tests.test_common.test_classifiers('NearestCentroid', <class 'sklearn.neighbors.nearest_centroid.NearestCentroid'>) ... ok
sklearn.tests.test_common.test_classifiers('NuSVC', <class 'sklearn.svm.classes.NuSVC'>) ... ok
sklearn.tests.test_common.test_classifiers('NuSVC', <class 'sklearn.svm.classes.NuSVC'>) ... ok
sklearn.tests.test_common.test_classifiers('NuSVC', <class 'sklearn.svm.classes.NuSVC'>) ... ok
sklearn.tests.test_common.test_classifiers('NuSVC', <class 'sklearn.svm.classes.NuSVC'>) ... ok
sklearn.tests.test_common.test_classifiers('NuSVC', <class 'sklearn.svm.classes.NuSVC'>) ... ok
sklearn.tests.test_common.test_classifiers('NuSVC', <class 'sklearn.svm.classes.NuSVC'>) ... ok
sklearn.tests.test_common.test_classifiers('NuSVC', <class 'sklearn.svm.classes.NuSVC'>) ... ok
sklearn.tests.test_common.test_classifiers('NuSVC', <class 'sklearn.svm.classes.NuSVC'>) ... ok
sklearn.tests.test_common.test_classifiers('PassiveAggressiveClassifier', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('PassiveAggressiveClassifier', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('PassiveAggressiveClassifier', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('PassiveAggressiveClassifier', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('PassiveAggressiveClassifier', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('PassiveAggressiveClassifier', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('PassiveAggressiveClassifier', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('PassiveAggressiveClassifier', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('Perceptron', <class 'sklearn.linear_model.perceptron.Perceptron'>) ... ok
sklearn.tests.test_common.test_classifiers('Perceptron', <class 'sklearn.linear_model.perceptron.Perceptron'>) ... ok
sklearn.tests.test_common.test_classifiers('Perceptron', <class 'sklearn.linear_model.perceptron.Perceptron'>) ... ok
sklearn.tests.test_common.test_classifiers('Perceptron', <class 'sklearn.linear_model.perceptron.Perceptron'>) ... ok
sklearn.tests.test_common.test_classifiers('Perceptron', <class 'sklearn.linear_model.perceptron.Perceptron'>) ... ok
sklearn.tests.test_common.test_classifiers('Perceptron', <class 'sklearn.linear_model.perceptron.Perceptron'>) ... ok
sklearn.tests.test_common.test_classifiers('Perceptron', <class 'sklearn.linear_model.perceptron.Perceptron'>) ... ok
sklearn.tests.test_common.test_classifiers('Perceptron', <class 'sklearn.linear_model.perceptron.Perceptron'>) ... ok
sklearn.tests.test_common.test_classifiers('QDA', <class 'sklearn.qda.QDA'>) ... ok
sklearn.tests.test_common.test_classifiers('QDA', <class 'sklearn.qda.QDA'>) ... ok
sklearn.tests.test_common.test_classifiers('QDA', <class 'sklearn.qda.QDA'>) ... ok
sklearn.tests.test_common.test_classifiers('QDA', <class 'sklearn.qda.QDA'>) ... ok
sklearn.tests.test_common.test_classifiers('QDA', <class 'sklearn.qda.QDA'>) ... ok
sklearn.tests.test_common.test_classifiers('QDA', <class 'sklearn.qda.QDA'>) ... ok
sklearn.tests.test_common.test_classifiers('QDA', <class 'sklearn.qda.QDA'>) ... ok
sklearn.tests.test_common.test_classifiers('QDA', <class 'sklearn.qda.QDA'>) ... ok
sklearn.tests.test_common.test_classifiers('RadiusNeighborsClassifier', <class 'sklearn.neighbors.classification.RadiusNeighborsClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('RadiusNeighborsClassifier', <class 'sklearn.neighbors.classification.RadiusNeighborsClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('RadiusNeighborsClassifier', <class 'sklearn.neighbors.classification.RadiusNeighborsClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('RadiusNeighborsClassifier', <class 'sklearn.neighbors.classification.RadiusNeighborsClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('RadiusNeighborsClassifier', <class 'sklearn.neighbors.classification.RadiusNeighborsClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('RadiusNeighborsClassifier', <class 'sklearn.neighbors.classification.RadiusNeighborsClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('RadiusNeighborsClassifier', <class 'sklearn.neighbors.classification.RadiusNeighborsClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('RadiusNeighborsClassifier', <class 'sklearn.neighbors.classification.RadiusNeighborsClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('RandomForestClassifier', <class 'sklearn.ensemble.forest.RandomForestClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('RandomForestClassifier', <class 'sklearn.ensemble.forest.RandomForestClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('RandomForestClassifier', <class 'sklearn.ensemble.forest.RandomForestClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('RandomForestClassifier', <class 'sklearn.ensemble.forest.RandomForestClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('RandomForestClassifier', <class 'sklearn.ensemble.forest.RandomForestClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('RandomForestClassifier', <class 'sklearn.ensemble.forest.RandomForestClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('RandomForestClassifier', <class 'sklearn.ensemble.forest.RandomForestClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('RandomForestClassifier', <class 'sklearn.ensemble.forest.RandomForestClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('RidgeClassifier', <class 'sklearn.linear_model.ridge.RidgeClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('RidgeClassifier', <class 'sklearn.linear_model.ridge.RidgeClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('RidgeClassifier', <class 'sklearn.linear_model.ridge.RidgeClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('RidgeClassifier', <class 'sklearn.linear_model.ridge.RidgeClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('RidgeClassifier', <class 'sklearn.linear_model.ridge.RidgeClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('RidgeClassifier', <class 'sklearn.linear_model.ridge.RidgeClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('RidgeClassifier', <class 'sklearn.linear_model.ridge.RidgeClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('RidgeClassifier', <class 'sklearn.linear_model.ridge.RidgeClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('RidgeClassifierCV', <class 'sklearn.linear_model.ridge.RidgeClassifierCV'>) ... ok
sklearn.tests.test_common.test_classifiers('RidgeClassifierCV', <class 'sklearn.linear_model.ridge.RidgeClassifierCV'>) ... ok
sklearn.tests.test_common.test_classifiers('RidgeClassifierCV', <class 'sklearn.linear_model.ridge.RidgeClassifierCV'>) ... ok
sklearn.tests.test_common.test_classifiers('RidgeClassifierCV', <class 'sklearn.linear_model.ridge.RidgeClassifierCV'>) ... ok
sklearn.tests.test_common.test_classifiers('RidgeClassifierCV', <class 'sklearn.linear_model.ridge.RidgeClassifierCV'>) ... ok
sklearn.tests.test_common.test_classifiers('RidgeClassifierCV', <class 'sklearn.linear_model.ridge.RidgeClassifierCV'>) ... ok
sklearn.tests.test_common.test_classifiers('RidgeClassifierCV', <class 'sklearn.linear_model.ridge.RidgeClassifierCV'>) ... ok
sklearn.tests.test_common.test_classifiers('RidgeClassifierCV', <class 'sklearn.linear_model.ridge.RidgeClassifierCV'>) ... ok
sklearn.tests.test_common.test_classifiers('SGDClassifier', <class 'sklearn.linear_model.stochastic_gradient.SGDClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('SGDClassifier', <class 'sklearn.linear_model.stochastic_gradient.SGDClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('SGDClassifier', <class 'sklearn.linear_model.stochastic_gradient.SGDClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('SGDClassifier', <class 'sklearn.linear_model.stochastic_gradient.SGDClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('SGDClassifier', <class 'sklearn.linear_model.stochastic_gradient.SGDClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('SGDClassifier', <class 'sklearn.linear_model.stochastic_gradient.SGDClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('SGDClassifier', <class 'sklearn.linear_model.stochastic_gradient.SGDClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('SGDClassifier', <class 'sklearn.linear_model.stochastic_gradient.SGDClassifier'>) ... ok
sklearn.tests.test_common.test_classifiers('SVC', <class 'sklearn.svm.classes.SVC'>) ... ok
sklearn.tests.test_common.test_classifiers('SVC', <class 'sklearn.svm.classes.SVC'>) ... ok
sklearn.tests.test_common.test_classifiers('SVC', <class 'sklearn.svm.classes.SVC'>) ... ok
sklearn.tests.test_common.test_classifiers('SVC', <class 'sklearn.svm.classes.SVC'>) ... ok
sklearn.tests.test_common.test_classifiers('SVC', <class 'sklearn.svm.classes.SVC'>) ... ok
sklearn.tests.test_common.test_classifiers('SVC', <class 'sklearn.svm.classes.SVC'>) ... ok
sklearn.tests.test_common.test_classifiers('SVC', <class 'sklearn.svm.classes.SVC'>) ... ok
sklearn.tests.test_common.test_classifiers('SVC', <class 'sklearn.svm.classes.SVC'>) ... ok
sklearn.tests.test_common.test_regressors('ARDRegression', <class 'sklearn.linear_model.bayes.ARDRegression'>) ... ok
sklearn.tests.test_common.test_regressors('ARDRegression', <class 'sklearn.linear_model.bayes.ARDRegression'>) ... ok
sklearn.tests.test_common.test_regressors('ARDRegression', <class 'sklearn.linear_model.bayes.ARDRegression'>) ... ok
sklearn.tests.test_common.test_regressors('ARDRegression', <class 'sklearn.linear_model.bayes.ARDRegression'>) ... ok
sklearn.tests.test_common.test_regressors('ARDRegression', <class 'sklearn.linear_model.bayes.ARDRegression'>) ... ok
sklearn.tests.test_common.test_regressors('ARDRegression', <class 'sklearn.linear_model.bayes.ARDRegression'>) ... ok
sklearn.tests.test_common.test_regressors('AdaBoostRegressor', <class 'sklearn.ensemble.weight_boosting.AdaBoostRegressor'>) ... ok
sklearn.tests.test_common.test_regressors('AdaBoostRegressor', <class 'sklearn.ensemble.weight_boosting.AdaBoostRegressor'>) ... ok
sklearn.tests.test_common.test_regressors('AdaBoostRegressor', <class 'sklearn.ensemble.weight_boosting.AdaBoostRegressor'>) ... ok
sklearn.tests.test_common.test_regressors('AdaBoostRegressor', <class 'sklearn.ensemble.weight_boosting.AdaBoostRegressor'>) ... ok
sklearn.tests.test_common.test_regressors('AdaBoostRegressor', <class 'sklearn.ensemble.weight_boosting.AdaBoostRegressor'>) ... ok
sklearn.tests.test_common.test_regressors('AdaBoostRegressor', <class 'sklearn.ensemble.weight_boosting.AdaBoostRegressor'>) ... ok
sklearn.tests.test_common.test_regressors('BaggingRegressor', <class 'sklearn.ensemble.bagging.BaggingRegressor'>) ... ok
sklearn.tests.test_common.test_regressors('BaggingRegressor', <class 'sklearn.ensemble.bagging.BaggingRegressor'>) ... ok
sklearn.tests.test_common.test_regressors('BaggingRegressor', <class 'sklearn.ensemble.bagging.BaggingRegressor'>) ... ok
sklearn.tests.test_common.test_regressors('BaggingRegressor', <class 'sklearn.ensemble.bagging.BaggingRegressor'>) ... ok
sklearn.tests.test_common.test_regressors('BaggingRegressor', <class 'sklearn.ensemble.bagging.BaggingRegressor'>) ... ok
sklearn.tests.test_common.test_regressors('BaggingRegressor', <class 'sklearn.ensemble.bagging.BaggingRegressor'>) ... ok
sklearn.tests.test_common.test_regressors('BayesianRidge', <class 'sklearn.linear_model.bayes.BayesianRidge'>) ... ok
sklearn.tests.test_common.test_regressors('BayesianRidge', <class 'sklearn.linear_model.bayes.BayesianRidge'>) ... ok
sklearn.tests.test_common.test_regressors('BayesianRidge', <class 'sklearn.linear_model.bayes.BayesianRidge'>) ... ok
sklearn.tests.test_common.test_regressors('BayesianRidge', <class 'sklearn.linear_model.bayes.BayesianRidge'>) ... ok
sklearn.tests.test_common.test_regressors('BayesianRidge', <class 'sklearn.linear_model.bayes.BayesianRidge'>) ... ok
sklearn.tests.test_common.test_regressors('BayesianRidge', <class 'sklearn.linear_model.bayes.BayesianRidge'>) ... ok
sklearn.tests.test_common.test_regressors('CCA', <class 'sklearn.cross_decomposition.cca_.CCA'>) ... ok
sklearn.tests.test_common.test_regressors('CCA', <class 'sklearn.cross_decomposition.cca_.CCA'>) ... SKIP
sklearn.tests.test_common.test_regressors('CCA', <class 'sklearn.cross_decomposition.cca_.CCA'>) ... ok
sklearn.tests.test_common.test_regressors('CCA', <class 'sklearn.cross_decomposition.cca_.CCA'>) ... ok
sklearn.tests.test_common.test_regressors('CCA', <class 'sklearn.cross_decomposition.cca_.CCA'>) ... ok
sklearn.tests.test_common.test_regressors('DecisionTreeRegressor', <class 'sklearn.tree.tree.DecisionTreeRegressor'>) ... ok
sklearn.tests.test_common.test_regressors('DecisionTreeRegressor', <class 'sklearn.tree.tree.DecisionTreeRegressor'>) ... ok
sklearn.tests.test_common.test_regressors('DecisionTreeRegressor', <class 'sklearn.tree.tree.DecisionTreeRegressor'>) ... ok
sklearn.tests.test_common.test_regressors('DecisionTreeRegressor', <class 'sklearn.tree.tree.DecisionTreeRegressor'>) ... ok
sklearn.tests.test_common.test_regressors('DecisionTreeRegressor', <class 'sklearn.tree.tree.DecisionTreeRegressor'>) ... ok
sklearn.tests.test_common.test_regressors('DecisionTreeRegressor', <class 'sklearn.tree.tree.DecisionTreeRegressor'>) ... ok
sklearn.tests.test_common.test_regressors('ElasticNet', <class 'sklearn.linear_model.coordinate_descent.ElasticNet'>) ... /root/.local/lib/python2.7/site-packages/sklearn/linear_model/coordinate_descent.py:444: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations
  ConvergenceWarning)
ok
sklearn.tests.test_common.test_regressors('ElasticNet', <class 'sklearn.linear_model.coordinate_descent.ElasticNet'>) ... ok
sklearn.tests.test_common.test_regressors('ElasticNet', <class 'sklearn.linear_model.coordinate_descent.ElasticNet'>) ... ok
sklearn.tests.test_common.test_regressors('ElasticNet', <class 'sklearn.linear_model.coordinate_descent.ElasticNet'>) ... ok
sklearn.tests.test_common.test_regressors('ElasticNet', <class 'sklearn.linear_model.coordinate_descent.ElasticNet'>) ... ok
sklearn.tests.test_common.test_regressors('ElasticNet', <class 'sklearn.linear_model.coordinate_descent.ElasticNet'>) ... ok
sklearn.tests.test_common.test_regressors('ElasticNetCV', <class 'sklearn.linear_model.coordinate_descent.ElasticNetCV'>) ... ok
sklearn.tests.test_common.test_regressors('ElasticNetCV', <class 'sklearn.linear_model.coordinate_descent.ElasticNetCV'>) ... ok
sklearn.tests.test_common.test_regressors('ElasticNetCV', <class 'sklearn.linear_model.coordinate_descent.ElasticNetCV'>) ... ok
sklearn.tests.test_common.test_regressors('ElasticNetCV', <class 'sklearn.linear_model.coordinate_descent.ElasticNetCV'>) ... ok
sklearn.tests.test_common.test_regressors('ElasticNetCV', <class 'sklearn.linear_model.coordinate_descent.ElasticNetCV'>) ... ok
sklearn.tests.test_common.test_regressors('ElasticNetCV', <class 'sklearn.linear_model.coordinate_descent.ElasticNetCV'>) ... ok
sklearn.tests.test_common.test_regressors('ExtraTreeRegressor', <class 'sklearn.tree.tree.ExtraTreeRegressor'>) ... ok
sklearn.tests.test_common.test_regressors('ExtraTreeRegressor', <class 'sklearn.tree.tree.ExtraTreeRegressor'>) ... ok
sklearn.tests.test_common.test_regressors('ExtraTreeRegressor', <class 'sklearn.tree.tree.ExtraTreeRegressor'>) ... ok
sklearn.tests.test_common.test_regressors('ExtraTreeRegressor', <class 'sklearn.tree.tree.ExtraTreeRegressor'>) ... ok
sklearn.tests.test_common.test_regressors('ExtraTreeRegressor', <class 'sklearn.tree.tree.ExtraTreeRegressor'>) ... ok
sklearn.tests.test_common.test_regressors('ExtraTreeRegressor', <class 'sklearn.tree.tree.ExtraTreeRegressor'>) ... ok
sklearn.tests.test_common.test_regressors('ExtraTreesRegressor', <class 'sklearn.ensemble.forest.ExtraTreesRegressor'>) ... ok
sklearn.tests.test_common.test_regressors('ExtraTreesRegressor', <class 'sklearn.ensemble.forest.ExtraTreesRegressor'>) ... ok
sklearn.tests.test_common.test_regressors('ExtraTreesRegressor', <class 'sklearn.ensemble.forest.ExtraTreesRegressor'>) ... ok
sklearn.tests.test_common.test_regressors('ExtraTreesRegressor', <class 'sklearn.ensemble.forest.ExtraTreesRegressor'>) ... ok
sklearn.tests.test_common.test_regressors('ExtraTreesRegressor', <class 'sklearn.ensemble.forest.ExtraTreesRegressor'>) ... ok
sklearn.tests.test_common.test_regressors('ExtraTreesRegressor', <class 'sklearn.ensemble.forest.ExtraTreesRegressor'>) ... ok
sklearn.tests.test_common.test_regressors('GaussianProcess', <class 'sklearn.gaussian_process.gaussian_process.GaussianProcess'>) ... ok
sklearn.tests.test_common.test_regressors('GaussianProcess', <class 'sklearn.gaussian_process.gaussian_process.GaussianProcess'>) ... ok
sklearn.tests.test_common.test_regressors('GaussianProcess', <class 'sklearn.gaussian_process.gaussian_process.GaussianProcess'>) ... ok
sklearn.tests.test_common.test_regressors('GaussianProcess', <class 'sklearn.gaussian_process.gaussian_process.GaussianProcess'>) ... ok
sklearn.tests.test_common.test_regressors('GaussianProcess', <class 'sklearn.gaussian_process.gaussian_process.GaussianProcess'>) ... ok
sklearn.tests.test_common.test_regressors('GaussianProcess', <class 'sklearn.gaussian_process.gaussian_process.GaussianProcess'>) ... ok
sklearn.tests.test_common.test_regressors('GradientBoostingRegressor', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingRegressor'>) ... ok
sklearn.tests.test_common.test_regressors('GradientBoostingRegressor', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingRegressor'>) ... ok
sklearn.tests.test_common.test_regressors('GradientBoostingRegressor', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingRegressor'>) ... ok
sklearn.tests.test_common.test_regressors('GradientBoostingRegressor', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingRegressor'>) ... ok
sklearn.tests.test_common.test_regressors('GradientBoostingRegressor', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingRegressor'>) ... ok
sklearn.tests.test_common.test_regressors('GradientBoostingRegressor', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingRegressor'>) ... ok
sklearn.tests.test_common.test_regressors('KNeighborsRegressor', <class 'sklearn.neighbors.regression.KNeighborsRegressor'>) ... ok
sklearn.tests.test_common.test_regressors('KNeighborsRegressor', <class 'sklearn.neighbors.regression.KNeighborsRegressor'>) ... ok
sklearn.tests.test_common.test_regressors('KNeighborsRegressor', <class 'sklearn.neighbors.regression.KNeighborsRegressor'>) ... ok
sklearn.tests.test_common.test_regressors('KNeighborsRegressor', <class 'sklearn.neighbors.regression.KNeighborsRegressor'>) ... ok
sklearn.tests.test_common.test_regressors('KNeighborsRegressor', <class 'sklearn.neighbors.regression.KNeighborsRegressor'>) ... ok
sklearn.tests.test_common.test_regressors('KNeighborsRegressor', <class 'sklearn.neighbors.regression.KNeighborsRegressor'>) ... ok
sklearn.tests.test_common.test_regressors('KernelRidge', <class 'sklearn.kernel_ridge.KernelRidge'>) ... ok
sklearn.tests.test_common.test_regressors('KernelRidge', <class 'sklearn.kernel_ridge.KernelRidge'>) ... ok
sklearn.tests.test_common.test_regressors('KernelRidge', <class 'sklearn.kernel_ridge.KernelRidge'>) ... ok
sklearn.tests.test_common.test_regressors('KernelRidge', <class 'sklearn.kernel_ridge.KernelRidge'>) ... ok
sklearn.tests.test_common.test_regressors('KernelRidge', <class 'sklearn.kernel_ridge.KernelRidge'>) ... ok
sklearn.tests.test_common.test_regressors('KernelRidge', <class 'sklearn.kernel_ridge.KernelRidge'>) ... ok
sklearn.tests.test_common.test_regressors('Lars', <class 'sklearn.linear_model.least_angle.Lars'>) ... ok
sklearn.tests.test_common.test_regressors('Lars', <class 'sklearn.linear_model.least_angle.Lars'>) ... ok
sklearn.tests.test_common.test_regressors('Lars', <class 'sklearn.linear_model.least_angle.Lars'>) ... ok
sklearn.tests.test_common.test_regressors('Lars', <class 'sklearn.linear_model.least_angle.Lars'>) ... ok
sklearn.tests.test_common.test_regressors('Lars', <class 'sklearn.linear_model.least_angle.Lars'>) ... ok
sklearn.tests.test_common.test_regressors('Lars', <class 'sklearn.linear_model.least_angle.Lars'>) ... ok
sklearn.tests.test_common.test_regressors('LarsCV', <class 'sklearn.linear_model.least_angle.LarsCV'>) ... ok
sklearn.tests.test_common.test_regressors('LarsCV', <class 'sklearn.linear_model.least_angle.LarsCV'>) ... ok
sklearn.tests.test_common.test_regressors('LarsCV', <class 'sklearn.linear_model.least_angle.LarsCV'>) ... ok
sklearn.tests.test_common.test_regressors('LarsCV', <class 'sklearn.linear_model.least_angle.LarsCV'>) ... ok
sklearn.tests.test_common.test_regressors('LarsCV', <class 'sklearn.linear_model.least_angle.LarsCV'>) ... ok
sklearn.tests.test_common.test_regressors('LarsCV', <class 'sklearn.linear_model.least_angle.LarsCV'>) ... ok
sklearn.tests.test_common.test_regressors('Lasso', <class 'sklearn.linear_model.coordinate_descent.Lasso'>) ... ok
sklearn.tests.test_common.test_regressors('Lasso', <class 'sklearn.linear_model.coordinate_descent.Lasso'>) ... ok
sklearn.tests.test_common.test_regressors('Lasso', <class 'sklearn.linear_model.coordinate_descent.Lasso'>) ... ok
sklearn.tests.test_common.test_regressors('Lasso', <class 'sklearn.linear_model.coordinate_descent.Lasso'>) ... ok
sklearn.tests.test_common.test_regressors('Lasso', <class 'sklearn.linear_model.coordinate_descent.Lasso'>) ... ok
sklearn.tests.test_common.test_regressors('Lasso', <class 'sklearn.linear_model.coordinate_descent.Lasso'>) ... ok
sklearn.tests.test_common.test_regressors('LassoCV', <class 'sklearn.linear_model.coordinate_descent.LassoCV'>) ... ok
sklearn.tests.test_common.test_regressors('LassoCV', <class 'sklearn.linear_model.coordinate_descent.LassoCV'>) ... ok
sklearn.tests.test_common.test_regressors('LassoCV', <class 'sklearn.linear_model.coordinate_descent.LassoCV'>) ... ok
sklearn.tests.test_common.test_regressors('LassoCV', <class 'sklearn.linear_model.coordinate_descent.LassoCV'>) ... ok
sklearn.tests.test_common.test_regressors('LassoCV', <class 'sklearn.linear_model.coordinate_descent.LassoCV'>) ... ok
sklearn.tests.test_common.test_regressors('LassoCV', <class 'sklearn.linear_model.coordinate_descent.LassoCV'>) ... ok
sklearn.tests.test_common.test_regressors('LassoLars', <class 'sklearn.linear_model.least_angle.LassoLars'>) ... ok
sklearn.tests.test_common.test_regressors('LassoLars', <class 'sklearn.linear_model.least_angle.LassoLars'>) ... ok
sklearn.tests.test_common.test_regressors('LassoLars', <class 'sklearn.linear_model.least_angle.LassoLars'>) ... ok
sklearn.tests.test_common.test_regressors('LassoLars', <class 'sklearn.linear_model.least_angle.LassoLars'>) ... ok
sklearn.tests.test_common.test_regressors('LassoLars', <class 'sklearn.linear_model.least_angle.LassoLars'>) ... ok
sklearn.tests.test_common.test_regressors('LassoLars', <class 'sklearn.linear_model.least_angle.LassoLars'>) ... ok
sklearn.tests.test_common.test_regressors('LassoLarsCV', <class 'sklearn.linear_model.least_angle.LassoLarsCV'>) ... ok
sklearn.tests.test_common.test_regressors('LassoLarsCV', <class 'sklearn.linear_model.least_angle.LassoLarsCV'>) ... ok
sklearn.tests.test_common.test_regressors('LassoLarsCV', <class 'sklearn.linear_model.least_angle.LassoLarsCV'>) ... ok
sklearn.tests.test_common.test_regressors('LassoLarsCV', <class 'sklearn.linear_model.least_angle.LassoLarsCV'>) ... ok
sklearn.tests.test_common.test_regressors('LassoLarsCV', <class 'sklearn.linear_model.least_angle.LassoLarsCV'>) ... ok
sklearn.tests.test_common.test_regressors('LassoLarsCV', <class 'sklearn.linear_model.least_angle.LassoLarsCV'>) ... ok
sklearn.tests.test_common.test_regressors('LassoLarsIC', <class 'sklearn.linear_model.least_angle.LassoLarsIC'>) ... ok
sklearn.tests.test_common.test_regressors('LassoLarsIC', <class 'sklearn.linear_model.least_angle.LassoLarsIC'>) ... ok
sklearn.tests.test_common.test_regressors('LassoLarsIC', <class 'sklearn.linear_model.least_angle.LassoLarsIC'>) ... ok
sklearn.tests.test_common.test_regressors('LassoLarsIC', <class 'sklearn.linear_model.least_angle.LassoLarsIC'>) ... ok
sklearn.tests.test_common.test_regressors('LassoLarsIC', <class 'sklearn.linear_model.least_angle.LassoLarsIC'>) ... ok
sklearn.tests.test_common.test_regressors('LassoLarsIC', <class 'sklearn.linear_model.least_angle.LassoLarsIC'>) ... ok
sklearn.tests.test_common.test_regressors('LinearRegression', <class 'sklearn.linear_model.base.LinearRegression'>) ... ok
sklearn.tests.test_common.test_regressors('LinearRegression', <class 'sklearn.linear_model.base.LinearRegression'>) ... ok
sklearn.tests.test_common.test_regressors('LinearRegression', <class 'sklearn.linear_model.base.LinearRegression'>) ... ok
sklearn.tests.test_common.test_regressors('LinearRegression', <class 'sklearn.linear_model.base.LinearRegression'>) ... ok
sklearn.tests.test_common.test_regressors('LinearRegression', <class 'sklearn.linear_model.base.LinearRegression'>) ... ok
sklearn.tests.test_common.test_regressors('LinearRegression', <class 'sklearn.linear_model.base.LinearRegression'>) ... ok
sklearn.tests.test_common.test_regressors('LinearSVR', <class 'sklearn.svm.classes.LinearSVR'>) ... ok
sklearn.tests.test_common.test_regressors('LinearSVR', <class 'sklearn.svm.classes.LinearSVR'>) ... ok
sklearn.tests.test_common.test_regressors('LinearSVR', <class 'sklearn.svm.classes.LinearSVR'>) ... ok
sklearn.tests.test_common.test_regressors('LinearSVR', <class 'sklearn.svm.classes.LinearSVR'>) ... ok
sklearn.tests.test_common.test_regressors('LinearSVR', <class 'sklearn.svm.classes.LinearSVR'>) ... ok
sklearn.tests.test_common.test_regressors('LinearSVR', <class 'sklearn.svm.classes.LinearSVR'>) ... ok
sklearn.tests.test_common.test_regressors('MultiTaskElasticNet', <class 'sklearn.linear_model.coordinate_descent.MultiTaskElasticNet'>) ... /root/.local/lib/python2.7/site-packages/sklearn/linear_model/coordinate_descent.py:1615: UserWarning: Objective did not converge, you might want to increase the number of iterations
  warnings.warn('Objective did not converge, you might want'
ok
sklearn.tests.test_common.test_regressors('MultiTaskElasticNet', <class 'sklearn.linear_model.coordinate_descent.MultiTaskElasticNet'>) ... ok
sklearn.tests.test_common.test_regressors('MultiTaskElasticNet', <class 'sklearn.linear_model.coordinate_descent.MultiTaskElasticNet'>) ... ok
sklearn.tests.test_common.test_regressors('MultiTaskElasticNet', <class 'sklearn.linear_model.coordinate_descent.MultiTaskElasticNet'>) ... ok
sklearn.tests.test_common.test_regressors('MultiTaskElasticNet', <class 'sklearn.linear_model.coordinate_descent.MultiTaskElasticNet'>) ... ok
sklearn.tests.test_common.test_regressors('MultiTaskElasticNet', <class 'sklearn.linear_model.coordinate_descent.MultiTaskElasticNet'>) ... ok
sklearn.tests.test_common.test_regressors('MultiTaskElasticNetCV', <class 'sklearn.linear_model.coordinate_descent.MultiTaskElasticNetCV'>) ... ok
sklearn.tests.test_common.test_regressors('MultiTaskElasticNetCV', <class 'sklearn.linear_model.coordinate_descent.MultiTaskElasticNetCV'>) ... ok
sklearn.tests.test_common.test_regressors('MultiTaskElasticNetCV', <class 'sklearn.linear_model.coordinate_descent.MultiTaskElasticNetCV'>) ... ok
sklearn.tests.test_common.test_regressors('MultiTaskElasticNetCV', <class 'sklearn.linear_model.coordinate_descent.MultiTaskElasticNetCV'>) ... ok
sklearn.tests.test_common.test_regressors('MultiTaskElasticNetCV', <class 'sklearn.linear_model.coordinate_descent.MultiTaskElasticNetCV'>) ... ok
sklearn.tests.test_common.test_regressors('MultiTaskElasticNetCV', <class 'sklearn.linear_model.coordinate_descent.MultiTaskElasticNetCV'>) ... ok
sklearn.tests.test_common.test_regressors('MultiTaskLasso', <class 'sklearn.linear_model.coordinate_descent.MultiTaskLasso'>) ... ok
sklearn.tests.test_common.test_regressors('MultiTaskLasso', <class 'sklearn.linear_model.coordinate_descent.MultiTaskLasso'>) ... ok
sklearn.tests.test_common.test_regressors('MultiTaskLasso', <class 'sklearn.linear_model.coordinate_descent.MultiTaskLasso'>) ... ok
sklearn.tests.test_common.test_regressors('MultiTaskLasso', <class 'sklearn.linear_model.coordinate_descent.MultiTaskLasso'>) ... ok
sklearn.tests.test_common.test_regressors('MultiTaskLasso', <class 'sklearn.linear_model.coordinate_descent.MultiTaskLasso'>) ... ok
sklearn.tests.test_common.test_regressors('MultiTaskLasso', <class 'sklearn.linear_model.coordinate_descent.MultiTaskLasso'>) ... ok
sklearn.tests.test_common.test_regressors('MultiTaskLassoCV', <class 'sklearn.linear_model.coordinate_descent.MultiTaskLassoCV'>) ... ok
sklearn.tests.test_common.test_regressors('MultiTaskLassoCV', <class 'sklearn.linear_model.coordinate_descent.MultiTaskLassoCV'>) ... ok
sklearn.tests.test_common.test_regressors('MultiTaskLassoCV', <class 'sklearn.linear_model.coordinate_descent.MultiTaskLassoCV'>) ... ok
sklearn.tests.test_common.test_regressors('MultiTaskLassoCV', <class 'sklearn.linear_model.coordinate_descent.MultiTaskLassoCV'>) ... ok
sklearn.tests.test_common.test_regressors('MultiTaskLassoCV', <class 'sklearn.linear_model.coordinate_descent.MultiTaskLassoCV'>) ... ok
sklearn.tests.test_common.test_regressors('MultiTaskLassoCV', <class 'sklearn.linear_model.coordinate_descent.MultiTaskLassoCV'>) ... ok
sklearn.tests.test_common.test_regressors('NuSVR', <class 'sklearn.svm.classes.NuSVR'>) ... ok
sklearn.tests.test_common.test_regressors('NuSVR', <class 'sklearn.svm.classes.NuSVR'>) ... ok
sklearn.tests.test_common.test_regressors('NuSVR', <class 'sklearn.svm.classes.NuSVR'>) ... ok
sklearn.tests.test_common.test_regressors('NuSVR', <class 'sklearn.svm.classes.NuSVR'>) ... ok
sklearn.tests.test_common.test_regressors('NuSVR', <class 'sklearn.svm.classes.NuSVR'>) ... ok
sklearn.tests.test_common.test_regressors('NuSVR', <class 'sklearn.svm.classes.NuSVR'>) ... ok
sklearn.tests.test_common.test_regressors('OrthogonalMatchingPursuit', <class 'sklearn.linear_model.omp.OrthogonalMatchingPursuit'>) ... ok
sklearn.tests.test_common.test_regressors('OrthogonalMatchingPursuit', <class 'sklearn.linear_model.omp.OrthogonalMatchingPursuit'>) ... ok
sklearn.tests.test_common.test_regressors('OrthogonalMatchingPursuit', <class 'sklearn.linear_model.omp.OrthogonalMatchingPursuit'>) ... ok
sklearn.tests.test_common.test_regressors('OrthogonalMatchingPursuit', <class 'sklearn.linear_model.omp.OrthogonalMatchingPursuit'>) ... ok
sklearn.tests.test_common.test_regressors('OrthogonalMatchingPursuit', <class 'sklearn.linear_model.omp.OrthogonalMatchingPursuit'>) ... ok
sklearn.tests.test_common.test_regressors('OrthogonalMatchingPursuit', <class 'sklearn.linear_model.omp.OrthogonalMatchingPursuit'>) ... ok
sklearn.tests.test_common.test_regressors('OrthogonalMatchingPursuitCV', <class 'sklearn.linear_model.omp.OrthogonalMatchingPursuitCV'>) ... ok
sklearn.tests.test_common.test_regressors('OrthogonalMatchingPursuitCV', <class 'sklearn.linear_model.omp.OrthogonalMatchingPursuitCV'>) ... ok
sklearn.tests.test_common.test_regressors('OrthogonalMatchingPursuitCV', <class 'sklearn.linear_model.omp.OrthogonalMatchingPursuitCV'>) ... ok
sklearn.tests.test_common.test_regressors('OrthogonalMatchingPursuitCV', <class 'sklearn.linear_model.omp.OrthogonalMatchingPursuitCV'>) ... ok
sklearn.tests.test_common.test_regressors('OrthogonalMatchingPursuitCV', <class 'sklearn.linear_model.omp.OrthogonalMatchingPursuitCV'>) ... ok
sklearn.tests.test_common.test_regressors('OrthogonalMatchingPursuitCV', <class 'sklearn.linear_model.omp.OrthogonalMatchingPursuitCV'>) ... ok
sklearn.tests.test_common.test_regressors('PLSCanonical', <class 'sklearn.cross_decomposition.pls_.PLSCanonical'>) ... ok
sklearn.tests.test_common.test_regressors('PLSCanonical', <class 'sklearn.cross_decomposition.pls_.PLSCanonical'>) ... SKIP
sklearn.tests.test_common.test_regressors('PLSCanonical', <class 'sklearn.cross_decomposition.pls_.PLSCanonical'>) ... ok
sklearn.tests.test_common.test_regressors('PLSCanonical', <class 'sklearn.cross_decomposition.pls_.PLSCanonical'>) ... ok
sklearn.tests.test_common.test_regressors('PLSCanonical', <class 'sklearn.cross_decomposition.pls_.PLSCanonical'>) ... ok
sklearn.tests.test_common.test_regressors('PLSCanonical', <class 'sklearn.cross_decomposition.pls_.PLSCanonical'>) ... ok
sklearn.tests.test_common.test_regressors('PLSRegression', <class 'sklearn.cross_decomposition.pls_.PLSRegression'>) ... ok
sklearn.tests.test_common.test_regressors('PLSRegression', <class 'sklearn.cross_decomposition.pls_.PLSRegression'>) ... SKIP
sklearn.tests.test_common.test_regressors('PLSRegression', <class 'sklearn.cross_decomposition.pls_.PLSRegression'>) ... ok
sklearn.tests.test_common.test_regressors('PLSRegression', <class 'sklearn.cross_decomposition.pls_.PLSRegression'>) ... ok
sklearn.tests.test_common.test_regressors('PLSRegression', <class 'sklearn.cross_decomposition.pls_.PLSRegression'>) ... ok
sklearn.tests.test_common.test_regressors('PLSRegression', <class 'sklearn.cross_decomposition.pls_.PLSRegression'>) ... ok
sklearn.tests.test_common.test_regressors('PassiveAggressiveRegressor', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveRegressor'>) ... ok
sklearn.tests.test_common.test_regressors('PassiveAggressiveRegressor', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveRegressor'>) ... ok
sklearn.tests.test_common.test_regressors('PassiveAggressiveRegressor', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveRegressor'>) ... ok
sklearn.tests.test_common.test_regressors('PassiveAggressiveRegressor', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveRegressor'>) ... ok
sklearn.tests.test_common.test_regressors('PassiveAggressiveRegressor', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveRegressor'>) ... ok
sklearn.tests.test_common.test_regressors('PassiveAggressiveRegressor', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveRegressor'>) ... ok
sklearn.tests.test_common.test_regressors('RANSACRegressor', <class 'sklearn.linear_model.ransac.RANSACRegressor'>) ... ok
sklearn.tests.test_common.test_regressors('RANSACRegressor', <class 'sklearn.linear_model.ransac.RANSACRegressor'>) ... ok
sklearn.tests.test_common.test_regressors('RANSACRegressor', <class 'sklearn.linear_model.ransac.RANSACRegressor'>) ... ok
sklearn.tests.test_common.test_regressors('RANSACRegressor', <class 'sklearn.linear_model.ransac.RANSACRegressor'>) ... ok
sklearn.tests.test_common.test_regressors('RANSACRegressor', <class 'sklearn.linear_model.ransac.RANSACRegressor'>) ... ok
sklearn.tests.test_common.test_regressors('RANSACRegressor', <class 'sklearn.linear_model.ransac.RANSACRegressor'>) ... ok
sklearn.tests.test_common.test_regressors('RadiusNeighborsRegressor', <class 'sklearn.neighbors.regression.RadiusNeighborsRegressor'>) ... ok
sklearn.tests.test_common.test_regressors('RadiusNeighborsRegressor', <class 'sklearn.neighbors.regression.RadiusNeighborsRegressor'>) ... ok
sklearn.tests.test_common.test_regressors('RadiusNeighborsRegressor', <class 'sklearn.neighbors.regression.RadiusNeighborsRegressor'>) ... ok
sklearn.tests.test_common.test_regressors('RadiusNeighborsRegressor', <class 'sklearn.neighbors.regression.RadiusNeighborsRegressor'>) ... ok
sklearn.tests.test_common.test_regressors('RadiusNeighborsRegressor', <class 'sklearn.neighbors.regression.RadiusNeighborsRegressor'>) ... ok
sklearn.tests.test_common.test_regressors('RadiusNeighborsRegressor', <class 'sklearn.neighbors.regression.RadiusNeighborsRegressor'>) ... ok
sklearn.tests.test_common.test_regressors('RandomForestRegressor', <class 'sklearn.ensemble.forest.RandomForestRegressor'>) ... ok
sklearn.tests.test_common.test_regressors('RandomForestRegressor', <class 'sklearn.ensemble.forest.RandomForestRegressor'>) ... ok
sklearn.tests.test_common.test_regressors('RandomForestRegressor', <class 'sklearn.ensemble.forest.RandomForestRegressor'>) ... ok
sklearn.tests.test_common.test_regressors('RandomForestRegressor', <class 'sklearn.ensemble.forest.RandomForestRegressor'>) ... ok
sklearn.tests.test_common.test_regressors('RandomForestRegressor', <class 'sklearn.ensemble.forest.RandomForestRegressor'>) ... ok
sklearn.tests.test_common.test_regressors('RandomForestRegressor', <class 'sklearn.ensemble.forest.RandomForestRegressor'>) ... ok
sklearn.tests.test_common.test_regressors('Ridge', <class 'sklearn.linear_model.ridge.Ridge'>) ... ok
sklearn.tests.test_common.test_regressors('Ridge', <class 'sklearn.linear_model.ridge.Ridge'>) ... ok
sklearn.tests.test_common.test_regressors('Ridge', <class 'sklearn.linear_model.ridge.Ridge'>) ... ok
sklearn.tests.test_common.test_regressors('Ridge', <class 'sklearn.linear_model.ridge.Ridge'>) ... ok
sklearn.tests.test_common.test_regressors('Ridge', <class 'sklearn.linear_model.ridge.Ridge'>) ... ok
sklearn.tests.test_common.test_regressors('Ridge', <class 'sklearn.linear_model.ridge.Ridge'>) ... ok
sklearn.tests.test_common.test_regressors('RidgeCV', <class 'sklearn.linear_model.ridge.RidgeCV'>) ... ok
sklearn.tests.test_common.test_regressors('RidgeCV', <class 'sklearn.linear_model.ridge.RidgeCV'>) ... ok
sklearn.tests.test_common.test_regressors('RidgeCV', <class 'sklearn.linear_model.ridge.RidgeCV'>) ... ok
sklearn.tests.test_common.test_regressors('RidgeCV', <class 'sklearn.linear_model.ridge.RidgeCV'>) ... ok
sklearn.tests.test_common.test_regressors('RidgeCV', <class 'sklearn.linear_model.ridge.RidgeCV'>) ... ok
sklearn.tests.test_common.test_regressors('RidgeCV', <class 'sklearn.linear_model.ridge.RidgeCV'>) ... ok
sklearn.tests.test_common.test_regressors('SGDRegressor', <class 'sklearn.linear_model.stochastic_gradient.SGDRegressor'>) ... ok
sklearn.tests.test_common.test_regressors('SGDRegressor', <class 'sklearn.linear_model.stochastic_gradient.SGDRegressor'>) ... ok
sklearn.tests.test_common.test_regressors('SGDRegressor', <class 'sklearn.linear_model.stochastic_gradient.SGDRegressor'>) ... ok
sklearn.tests.test_common.test_regressors('SGDRegressor', <class 'sklearn.linear_model.stochastic_gradient.SGDRegressor'>) ... ok
sklearn.tests.test_common.test_regressors('SGDRegressor', <class 'sklearn.linear_model.stochastic_gradient.SGDRegressor'>) ... ok
sklearn.tests.test_common.test_regressors('SGDRegressor', <class 'sklearn.linear_model.stochastic_gradient.SGDRegressor'>) ... ok
sklearn.tests.test_common.test_regressors('SVR', <class 'sklearn.svm.classes.SVR'>) ... ok
sklearn.tests.test_common.test_regressors('SVR', <class 'sklearn.svm.classes.SVR'>) ... ok
sklearn.tests.test_common.test_regressors('SVR', <class 'sklearn.svm.classes.SVR'>) ... ok
sklearn.tests.test_common.test_regressors('SVR', <class 'sklearn.svm.classes.SVR'>) ... ok
sklearn.tests.test_common.test_regressors('SVR', <class 'sklearn.svm.classes.SVR'>) ... ok
sklearn.tests.test_common.test_regressors('SVR', <class 'sklearn.svm.classes.SVR'>) ... ok
sklearn.tests.test_common.test_regressors('TheilSenRegressor', <class 'sklearn.linear_model.theil_sen.TheilSenRegressor'>) ... /root/.local/lib/python2.7/site-packages/sklearn/linear_model/theil_sen.py:128: ConvergenceWarning: Maximum number of iterations 5 reached in spatial median for TheilSen regressor.
  "".format(max_iter=max_iter), ConvergenceWarning)
ok
sklearn.tests.test_common.test_regressors('TheilSenRegressor', <class 'sklearn.linear_model.theil_sen.TheilSenRegressor'>) ... ok
sklearn.tests.test_common.test_regressors('TheilSenRegressor', <class 'sklearn.linear_model.theil_sen.TheilSenRegressor'>) ... ok
sklearn.tests.test_common.test_regressors('TheilSenRegressor', <class 'sklearn.linear_model.theil_sen.TheilSenRegressor'>) ... ok
sklearn.tests.test_common.test_regressors('TheilSenRegressor', <class 'sklearn.linear_model.theil_sen.TheilSenRegressor'>) ... ok
sklearn.tests.test_common.test_regressors('TheilSenRegressor', <class 'sklearn.linear_model.theil_sen.TheilSenRegressor'>) ... ok
sklearn.tests.test_common.test_configure ... ok
sklearn.tests.test_common.test_class_weight_classifiers('DecisionTreeClassifier', <class 'sklearn.tree.tree.DecisionTreeClassifier'>) ... ok
sklearn.tests.test_common.test_class_weight_classifiers('ExtraTreeClassifier', <class 'sklearn.tree.tree.ExtraTreeClassifier'>) ... ok
sklearn.tests.test_common.test_class_weight_classifiers('ExtraTreesClassifier', <class 'sklearn.ensemble.forest.ExtraTreesClassifier'>) ... ok
sklearn.tests.test_common.test_class_weight_classifiers('LinearSVC', <class 'sklearn.svm.classes.LinearSVC'>) ... ok
sklearn.tests.test_common.test_class_weight_classifiers('LogisticRegression', <class 'sklearn.linear_model.logistic.LogisticRegression'>) ... ok
sklearn.tests.test_common.test_class_weight_classifiers('LogisticRegressionCV', <class 'sklearn.linear_model.logistic.LogisticRegressionCV'>) ... ok
sklearn.tests.test_common.test_class_weight_classifiers('Perceptron', <class 'sklearn.linear_model.perceptron.Perceptron'>) ... ok
sklearn.tests.test_common.test_class_weight_classifiers('RandomForestClassifier', <class 'sklearn.ensemble.forest.RandomForestClassifier'>) ... ok
sklearn.tests.test_common.test_class_weight_classifiers('RidgeClassifier', <class 'sklearn.linear_model.ridge.RidgeClassifier'>) ... ok
sklearn.tests.test_common.test_class_weight_classifiers('RidgeClassifierCV', <class 'sklearn.linear_model.ridge.RidgeClassifierCV'>) ... ok
sklearn.tests.test_common.test_class_weight_classifiers('SGDClassifier', <class 'sklearn.linear_model.stochastic_gradient.SGDClassifier'>) ... ok
sklearn.tests.test_common.test_class_weight_classifiers('SVC', <class 'sklearn.svm.classes.SVC'>) ... ok
Failure: SkipTest (This test requires redefinition) ... SKIP: This test requires redefinition
sklearn.tests.test_common.test_class_weight_auto_linear_classifiers('LinearSVC', <class 'sklearn.svm.classes.LinearSVC'>) ... ok
sklearn.tests.test_common.test_class_weight_auto_linear_classifiers('LogisticRegression', <class 'sklearn.linear_model.logistic.LogisticRegression'>) ... ok
sklearn.tests.test_common.test_class_weight_auto_linear_classifiers('Perceptron', <class 'sklearn.linear_model.perceptron.Perceptron'>) ... ok
sklearn.tests.test_common.test_class_weight_auto_linear_classifiers('RidgeClassifier', <class 'sklearn.linear_model.ridge.RidgeClassifier'>) ... ok
sklearn.tests.test_common.test_class_weight_auto_linear_classifiers('RidgeClassifierCV', <class 'sklearn.linear_model.ridge.RidgeClassifierCV'>) ... ok
sklearn.tests.test_common.test_class_weight_auto_linear_classifiers('SGDClassifier', <class 'sklearn.linear_model.stochastic_gradient.SGDClassifier'>) ... ok
sklearn.tests.test_common.test_import_all_consistency ... ok
sklearn.tests.test_common.test_root_import_all_completeness ... ok
sklearn.tests.test_common.test_non_transformer_estimators_n_iter('ElasticNet', ElasticNet(alpha=1.0, copy_X=True, fit_intercept=True, l1_ratio=0.5, ... ok
sklearn.tests.test_common.test_non_transformer_estimators_n_iter('ElasticNetCV', ElasticNetCV(alphas=None, copy_X=True, cv=None, eps=0.001, fit_intercept=True, ... ok
sklearn.tests.test_common.test_non_transformer_estimators_n_iter('LarsCV', LarsCV(copy_X=True, cv=None, eps=2.2204460492503131e-16, fit_intercept=True, ... ok
sklearn.tests.test_common.test_non_transformer_estimators_n_iter('Lasso', Lasso(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=1000, ... ok
sklearn.tests.test_common.test_non_transformer_estimators_n_iter('LassoCV', LassoCV(alphas=None, copy_X=True, cv=None, eps=0.001, fit_intercept=True, ... ok
sklearn.tests.test_common.test_non_transformer_estimators_n_iter('LassoLars', LassoLars(alpha=0.0, copy_X=True, eps=2.2204460492503131e-16, ... ok
sklearn.tests.test_common.test_non_transformer_estimators_n_iter('LassoLarsCV', LassoLarsCV(copy_X=True, cv=None, eps=2.2204460492503131e-16, ... ok
sklearn.tests.test_common.test_non_transformer_estimators_n_iter('LassoLarsIC', LassoLarsIC(copy_X=True, criterion='aic', eps=2.2204460492503131e-16, ... ok
sklearn.tests.test_common.test_non_transformer_estimators_n_iter('LinearSVR', LinearSVR(C=1.0, dual=True, epsilon=0.0, fit_intercept=True, ... ok
sklearn.tests.test_common.test_non_transformer_estimators_n_iter('MultiTaskElasticNet', MultiTaskElasticNet(alpha=1.0, copy_X=True, fit_intercept=True, l1_ratio=0.5, ... ok
sklearn.tests.test_common.test_non_transformer_estimators_n_iter('MultiTaskElasticNetCV', MultiTaskElasticNetCV(alphas=None, copy_X=True, cv=None, eps=0.001, ... ok
sklearn.tests.test_common.test_non_transformer_estimators_n_iter('MultiTaskLasso', MultiTaskLasso(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=1000, ... ok
sklearn.tests.test_common.test_non_transformer_estimators_n_iter('MultiTaskLassoCV', MultiTaskLassoCV(alphas=None, copy_X=True, cv=None, eps=0.001, ... ok
sklearn.tests.test_common.test_non_transformer_estimators_n_iter('OrthogonalMatchingPursuitCV', OrthogonalMatchingPursuitCV(copy=True, cv=None, fit_intercept=True, ... ok
sklearn.tests.test_common.test_non_transformer_estimators_n_iter('TheilSenRegressor', TheilSenRegressor(copy_X=True, fit_intercept=True, max_iter=300, ... ok
sklearn.tests.test_common.test_non_transformer_estimators_n_iter('LabelPropagation', LabelPropagation(alpha=1, gamma=20, kernel='rbf', max_iter=30, n_neighbors=7, ... /root/.local/lib/python2.7/site-packages/sklearn/semi_supervised/label_propagation.py:342: RuntimeWarning: underflow encountered in divide
  affinity_matrix /= normalizer[:, np.newaxis]
ok
sklearn.tests.test_common.test_non_transformer_estimators_n_iter('LabelSpreading', LabelSpreading(alpha=0.2, gamma=20, kernel='rbf', max_iter=30, n_neighbors=7, ... /root/.local/lib/python2.7/site-packages/sklearn/utils/graph.py:174: RuntimeWarning: underflow encountered in divide
  lap /= w
/root/.local/lib/python2.7/site-packages/sklearn/utils/graph.py:175: RuntimeWarning: underflow encountered in divide
  lap /= w[:, np.newaxis]
ok
sklearn.tests.test_common.test_non_transformer_estimators_n_iter('AffinityPropagation', AffinityPropagation(affinity='euclidean', convergence_iter=15, copy=True, ... ok
sklearn.tests.test_common.test_non_transformer_estimators_n_iter('KMeans', KMeans(copy_x=True, init='k-means++', max_iter=300, n_clusters=8, n_init=10, ... ok
sklearn.tests.test_common.test_non_transformer_estimators_n_iter('MiniBatchKMeans', MiniBatchKMeans(batch_size=100, compute_labels=True, init='k-means++', ... ok
/root/.local/lib/python2.7/site-packages/sklearn/cluster/hierarchical.py:938: DeprecationWarning: The Ward class is deprecated since 0.14 and will be removed in 0.17. Use the AgglomerativeClustering instead.
  "instead.", DeprecationWarning)
sklearn.tests.test_common.test_transformer_n_iter('CCA', CCA(copy=True, max_iter=500, n_components=2, scale=True, tol=1e-06)) ... ok
sklearn.tests.test_common.test_transformer_n_iter('DictionaryLearning', DictionaryLearning(alpha=1, code_init=None, dict_init=None, ... ok
sklearn.tests.test_common.test_transformer_n_iter('FactorAnalysis', FactorAnalysis(copy=True, iterated_power=3, max_iter=1000, n_components=None, ... ok
sklearn.tests.test_common.test_transformer_n_iter('FastICA', FastICA(algorithm='parallel', fun='logcosh', fun_args=None, max_iter=200, ... ok
sklearn.tests.test_common.test_transformer_n_iter('KMeans', KMeans(copy_x=True, init='k-means++', max_iter=300, n_clusters=8, n_init=10, ... ok
sklearn.tests.test_common.test_transformer_n_iter('LinearSVC', LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True, ... ok
sklearn.tests.test_common.test_transformer_n_iter('LogisticRegression', LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True, ... ok
sklearn.tests.test_common.test_transformer_n_iter('MiniBatchKMeans', MiniBatchKMeans(batch_size=100, compute_labels=True, init='k-means++', ... ok
sklearn.tests.test_common.test_transformer_n_iter('NMF', NMF(beta=1, eta=0.1, init=None, max_iter=200, n_components=None, ... ok
sklearn.tests.test_common.test_transformer_n_iter('PLSCanonical', PLSCanonical(algorithm='nipals', copy=True, max_iter=500, n_components=2, ... ok
sklearn.tests.test_common.test_transformer_n_iter('PLSRegression', PLSRegression(copy=True, max_iter=500, n_components=2, scale=True, tol=1e-06)) ... ok
sklearn.tests.test_common.test_transformer_n_iter('ProjectedGradientNMF', ProjectedGradientNMF(beta=1, eta=0.1, init=None, max_iter=200, ... ok
sklearn.tests.test_common.test_transformer_n_iter('SparsePCA', SparsePCA(U_init=None, V_init=None, alpha=1, max_iter=1000, method='lars', ... ok
sklearn.tests.test_cross_validation.test_kfold_valueerrors ... ok
sklearn.tests.test_cross_validation.test_kfold_indices ... ok
sklearn.tests.test_cross_validation.test_kfold_no_shuffle ... ok
sklearn.tests.test_cross_validation.test_stratified_kfold_no_shuffle ... ok
sklearn.tests.test_cross_validation.test_stratified_kfold_ratios ... ok
sklearn.tests.test_cross_validation.test_kfold_balance ... ok
sklearn.tests.test_cross_validation.test_stratifiedkfold_balance ... ok
sklearn.tests.test_cross_validation.test_shuffle_kfold ... ok
sklearn.tests.test_cross_validation.test_bootstrap_errors ... ok
sklearn.tests.test_cross_validation.test_bootstrap_test_sizes ... ok
sklearn.tests.test_cross_validation.test_cross_indices_exception ... ok
sklearn.tests.test_cross_validation.test_cross_val_generator_mask_indices_same ... ok
sklearn.tests.test_cross_validation.test_cross_val_generator_with_default_indices ... ok
sklearn.tests.test_cross_validation.test_stratified_shuffle_split_iter_no_indices ... ok
sklearn.tests.test_cross_validation.test_shuffle_stratifiedkfold ... ok
sklearn.tests.test_cross_validation.test_kfold_can_detect_dependent_samples_on_digits ... ok
sklearn.tests.test_cross_validation.test_shuffle_split ... ok
sklearn.tests.test_cross_validation.test_stratified_shuffle_split_init ... ok
sklearn.tests.test_cross_validation.test_stratified_shuffle_split_iter ... ok
sklearn.tests.test_cross_validation.test_stratified_shuffle_split_even ... ok
sklearn.tests.test_cross_validation.test_predefinedsplit_with_kfold_split ... ok
sklearn.tests.test_cross_validation.test_leave_label_out_changing_labels ... ok
sklearn.tests.test_cross_validation.test_cross_val_score ... ok
sklearn.tests.test_cross_validation.test_cross_val_score_pandas ... ok
sklearn.tests.test_cross_validation.test_cross_val_score_mask ... ok
sklearn.tests.test_cross_validation.test_cross_val_score_precomputed ... ok
sklearn.tests.test_cross_validation.test_cross_val_score_fit_params ... ok
sklearn.tests.test_cross_validation.test_cross_val_score_score_func ... ok
sklearn.tests.test_cross_validation.test_cross_val_score_errors ... ok
sklearn.tests.test_cross_validation.test_train_test_split_errors ... ok
sklearn.tests.test_cross_validation.test_train_test_split ... ok
sklearn.tests.test_cross_validation.train_test_split_pandas ... ok
sklearn.tests.test_cross_validation.train_test_split_mock_pandas ... ok
sklearn.tests.test_cross_validation.test_cross_val_score_with_score_func_classification ... ok
sklearn.tests.test_cross_validation.test_cross_val_score_with_score_func_regression ... ok
sklearn.tests.test_cross_validation.test_permutation_score ... ok
sklearn.tests.test_cross_validation.test_cross_val_generator_with_mask ... ok
sklearn.tests.test_cross_validation.test_cross_val_generator_with_indices ... ok
sklearn.tests.test_cross_validation.test_shufflesplit_errors ... ok
sklearn.tests.test_cross_validation.test_shufflesplit_reproducible ... ok
sklearn.tests.test_cross_validation.test_safe_split_with_precomputed_kernel ... ok
sklearn.tests.test_cross_validation.test_cross_val_score_allow_nans ... ok
sklearn.tests.test_cross_validation.test_train_test_split_allow_nans ... ok
sklearn.tests.test_cross_validation.test_permutation_test_score_allow_nans ... ok
sklearn.tests.test_cross_validation.test_check_cv_return_types ... ok
sklearn.tests.test_cross_validation.test_cross_val_score_multilabel ... ok
sklearn.tests.test_cross_validation.test_cross_val_predict ... ok
sklearn.tests.test_cross_validation.test_sparse_fit_params ... ok
sklearn.tests.test_cross_validation.test_check_is_partition ... ok
sklearn.tests.test_dummy.test_most_frequent_strategy ... ok
sklearn.tests.test_dummy.test_most_frequent_strategy_multioutput ... ok
sklearn.tests.test_dummy.test_stratified_strategy ... ok
sklearn.tests.test_dummy.test_stratified_strategy_multioutput ... ok
sklearn.tests.test_dummy.test_uniform_strategy ... ok
sklearn.tests.test_dummy.test_uniform_strategy_multioutput ... ok
sklearn.tests.test_dummy.test_string_labels ... ok
sklearn.tests.test_dummy.test_classifier_exceptions ... ok
sklearn.tests.test_dummy.test_mean_strategy_regressor ... ok
sklearn.tests.test_dummy.test_mean_strategy_multioutput_regressor ... ok
sklearn.tests.test_dummy.test_regressor_exceptions ... ok
sklearn.tests.test_dummy.test_median_strategy_regressor ... ok
sklearn.tests.test_dummy.test_median_strategy_multioutput_regressor ... ok
sklearn.tests.test_dummy.test_quantile_strategy_regressor ... ok
sklearn.tests.test_dummy.test_quantile_strategy_multioutput_regressor ... ok
sklearn.tests.test_dummy.test_quantile_invalid ... ok
sklearn.tests.test_dummy.test_quantile_strategy_empty_train ... ok
sklearn.tests.test_dummy.test_constant_strategy_regressor ... ok
sklearn.tests.test_dummy.test_constant_strategy_multioutput_regressor ... ok
sklearn.tests.test_dummy.test_y_mean_attribute_regressor ... ok
sklearn.tests.test_dummy.test_unknown_strategey_regressor ... ok
sklearn.tests.test_dummy.test_constants_not_specified_regressor ... ok
sklearn.tests.test_dummy.test_constant_size_multioutput_regressor ... ok
sklearn.tests.test_dummy.test_constant_strategy ... ok
sklearn.tests.test_dummy.test_constant_strategy_multioutput ... ok
sklearn.tests.test_dummy.test_constant_strategy_exceptions ... ok
sklearn.tests.test_dummy.test_classification_sample_weight ... ok
sklearn.tests.test_dummy.test_constant_strategy_sparse_target ... ok
sklearn.tests.test_dummy.test_uniform_strategy_sparse_target_warning ... ok
sklearn.tests.test_dummy.test_stratified_strategy_sparse_target ... ok
sklearn.tests.test_dummy.test_most_frequent_strategy_sparse_target ... ok
sklearn.tests.test_dummy.test_dummy_regressor_sample_weight ... ok
sklearn.tests.test_grid_search.test_parameter_grid ... ok
sklearn.tests.test_grid_search.test_grid_search ... [Parallel(n_jobs=1)]: Done   1 jobs       | elapsed:    0.0s
[Parallel(n_jobs=1)]: Done   9 out of   9 | elapsed:    0.0s finished
ok
sklearn.tests.test_grid_search.test_grid_search_score_method ... ok
sklearn.tests.test_grid_search.test_trivial_grid_scores ... ok
sklearn.tests.test_grid_search.test_no_refit ... ok
sklearn.tests.test_grid_search.test_grid_search_error ... ok
sklearn.tests.test_grid_search.test_grid_search_iid ... ok
sklearn.tests.test_grid_search.test_grid_search_one_grid_point ... ok
sklearn.tests.test_grid_search.test_grid_search_bad_param_grid ... ok
sklearn.tests.test_grid_search.test_grid_search_no_score ... ok
sklearn.tests.test_grid_search.test_grid_search_sparse ... ok
sklearn.tests.test_grid_search.test_grid_search_sparse_scoring ... ok
sklearn.tests.test_grid_search.test_grid_search_precomputed_kernel ... ok
sklearn.tests.test_grid_search.test_grid_search_precomputed_kernel_error_nonsquare ... ok
sklearn.tests.test_grid_search.test_grid_search_precomputed_kernel_error_kernel_function ... ok
sklearn.tests.test_grid_search.test_refit ... /root/.local/lib/python2.7/site-packages/sklearn/metrics/classification.py:958: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples.
  'precision', 'predicted', average, warn_for)
ok
sklearn.tests.test_grid_search.test_gridsearch_nd ... ok
sklearn.tests.test_grid_search.test_X_as_list ... ok
sklearn.tests.test_grid_search.test_y_as_list ... ok
sklearn.tests.test_grid_search.test_pandas_input ... ok
sklearn.tests.test_grid_search.test_unsupervised_grid_search ... ok
sklearn.tests.test_grid_search.test_gridsearch_no_predict ... ok
sklearn.tests.test_grid_search.test_param_sampler ... ok
sklearn.tests.test_grid_search.test_randomized_search_grid_scores ... ok
sklearn.tests.test_grid_search.test_grid_search_score_consistency ... ok
sklearn.tests.test_grid_search.test_pickle ... ok
sklearn.tests.test_grid_search.test_grid_search_with_multioutput_data ... ok
sklearn.tests.test_grid_search.test_predict_proba_disabled ... ok
sklearn.tests.test_grid_search.test_grid_search_allows_nans ... ok
sklearn.tests.test_grid_search.test_grid_search_failing_classifier ... ok
sklearn.tests.test_grid_search.test_grid_search_failing_classifier_raise ... ok
sklearn.tests.test_grid_search.test_parameters_sampler_replacement ... ok
test_attributes (sklearn.tests.test_hmm.MultinomialHMMTestCase) ... /root/.local/lib/python2.7/site-packages/sklearn/utils/__init__.py:76: DeprecationWarning: Class _BaseHMM is deprecated; WARNING: The HMM module and its function will be removed in 0.17as it no longer falls within the project's scope and API. It has been moved to a separate repository: https://github.com/hmmlearn/hmmlearn
  warnings.warn(msg, category=DeprecationWarning)
ok
test_decode_map_algorithm (sklearn.tests.test_hmm.MultinomialHMMTestCase) ... ok
test_fit (sklearn.tests.test_hmm.MultinomialHMMTestCase) ... /root/.local/lib/python2.7/site-packages/sklearn/utils/__init__.py:94: DeprecationWarning: Function normalize is deprecated; WARNING: The HMM module and its functions will be removed in 0.17 as it no longer falls within the project's scope and API. It has been moved to a separate repository: https://github.com/hmmlearn/hmmlearn
  warnings.warn(msg, category=DeprecationWarning)
ok
test_fit_emissionprob (sklearn.tests.test_hmm.MultinomialHMMTestCase) ... ok
test_fit_with_init (sklearn.tests.test_hmm.MultinomialHMMTestCase) ... ok
test_predict (sklearn.tests.test_hmm.MultinomialHMMTestCase) ... ok
test_sample (sklearn.tests.test_hmm.MultinomialHMMTestCase) ... ok
test_score_samples (sklearn.tests.test_hmm.MultinomialHMMTestCase) ... ok
test_set_emissionprob (sklearn.tests.test_hmm.MultinomialHMMTestCase) ... ok
test_wikipedia_viterbi_example (sklearn.tests.test_hmm.MultinomialHMMTestCase) ... ok
test_base_hmm_attributes (sklearn.tests.test_hmm.TestBaseHMM) ... ok
test_do_backward_pass (sklearn.tests.test_hmm.TestBaseHMM) ... ok
test_do_forward_pass (sklearn.tests.test_hmm.TestBaseHMM) ... ok
test_do_viterbi_pass (sklearn.tests.test_hmm.TestBaseHMM) ... ok
test_hmm_decode_consistent_with_gmm (sklearn.tests.test_hmm.TestBaseHMM) ... ok
test_hmm_score_samples_consistent_with_gmm (sklearn.tests.test_hmm.TestBaseHMM) ... ok
test_init (sklearn.tests.test_hmm.TestBaseHMM) ... ok
test_score_samples (sklearn.tests.test_hmm.TestBaseHMM) ... ok
test_set_startprob (sklearn.tests.test_hmm.TestBaseHMM) ... ok
test_set_transmat (sklearn.tests.test_hmm.TestBaseHMM) ... ok
test_attributes (sklearn.tests.test_hmm.TestGMMHMMWithDiagCovars) ... ok
test_fit (sklearn.tests.test_hmm.TestGMMHMMWithDiagCovars) ... SKIP: Unstable test: trainll is not always increasing depending on seed
test_fit_means (sklearn.tests.test_hmm.TestGMMHMMWithDiagCovars) ... SKIP: Unstable test: trainll is not always increasing depending on seed
test_fit_startprob_and_transmat (sklearn.tests.test_hmm.TestGMMHMMWithDiagCovars) ... SKIP: Unstable test: trainll is not always increasing depending on seed
test_fit_works_on_sequences_of_different_length (sklearn.tests.test_hmm.TestGMMHMMWithDiagCovars) ... ok
test_sample (sklearn.tests.test_hmm.TestGMMHMMWithDiagCovars) ... ok
test_score_samples_and_decode (sklearn.tests.test_hmm.TestGMMHMMWithDiagCovars) ... ok
test_attributes (sklearn.tests.test_hmm.TestGMMHMMWithFullCovars) ... ok
test_fit (sklearn.tests.test_hmm.TestGMMHMMWithFullCovars) ... SKIP: Unstable test: trainll is not always increasing depending on seed
test_fit_works_on_sequences_of_different_length (sklearn.tests.test_hmm.TestGMMHMMWithFullCovars) ... ok
test_sample (sklearn.tests.test_hmm.TestGMMHMMWithFullCovars) ... ok
test_score_samples_and_decode (sklearn.tests.test_hmm.TestGMMHMMWithFullCovars) ... ok
test_attributes (sklearn.tests.test_hmm.TestGMMHMMWithTiedCovars) ... ok
test_fit (sklearn.tests.test_hmm.TestGMMHMMWithTiedCovars) ... SKIP: Unstable test: trainll is not always increasing depending on seed
test_fit_works_on_sequences_of_different_length (sklearn.tests.test_hmm.TestGMMHMMWithTiedCovars) ... ok
test_sample (sklearn.tests.test_hmm.TestGMMHMMWithTiedCovars) ... ok
test_score_samples_and_decode (sklearn.tests.test_hmm.TestGMMHMMWithTiedCovars) ... ok
test_bad_covariance_type (sklearn.tests.test_hmm.TestGaussianHMMWithDiagonalCovars) ... ok
test_fit (sklearn.tests.test_hmm.TestGaussianHMMWithDiagonalCovars) ... ok
test_fit_non_ergodic_transmat (sklearn.tests.test_hmm.TestGaussianHMMWithDiagonalCovars) ... /root/.local/lib/python2.7/site-packages/sklearn/hmm.py:828: RuntimeWarning: underflow encountered in multiply
  stats['obs*obs.T'][c] += posteriors[t, c] * obsobsT
ok
test_fit_with_length_one_signal (sklearn.tests.test_hmm.TestGaussianHMMWithDiagonalCovars) ... ok
test_fit_with_priors (sklearn.tests.test_hmm.TestGaussianHMMWithDiagonalCovars) ... ok
test_fit_works_on_sequences_of_different_length (sklearn.tests.test_hmm.TestGaussianHMMWithDiagonalCovars) ... ok
test_sample (sklearn.tests.test_hmm.TestGaussianHMMWithDiagonalCovars) ... ok
test_score_samples_and_decode (sklearn.tests.test_hmm.TestGaussianHMMWithDiagonalCovars) ... ok
test_bad_covariance_type (sklearn.tests.test_hmm.TestGaussianHMMWithFullCovars) ... ok
test_fit (sklearn.tests.test_hmm.TestGaussianHMMWithFullCovars) ... ok
test_fit_non_ergodic_transmat (sklearn.tests.test_hmm.TestGaussianHMMWithFullCovars) ... ok
test_fit_with_length_one_signal (sklearn.tests.test_hmm.TestGaussianHMMWithFullCovars) ... ok
test_fit_with_priors (sklearn.tests.test_hmm.TestGaussianHMMWithFullCovars) ... ok
test_fit_works_on_sequences_of_different_length (sklearn.tests.test_hmm.TestGaussianHMMWithFullCovars) ... ok
test_sample (sklearn.tests.test_hmm.TestGaussianHMMWithFullCovars) ... ok
test_score_samples_and_decode (sklearn.tests.test_hmm.TestGaussianHMMWithFullCovars) ... ok
test_bad_covariance_type (sklearn.tests.test_hmm.TestGaussianHMMWithSphericalCovars) ... ok
test_fit (sklearn.tests.test_hmm.TestGaussianHMMWithSphericalCovars) ... ok
test_fit_non_ergodic_transmat (sklearn.tests.test_hmm.TestGaussianHMMWithSphericalCovars) ... ok
test_fit_startprob_and_transmat (sklearn.tests.test_hmm.TestGaussianHMMWithSphericalCovars) ... ok
test_fit_with_length_one_signal (sklearn.tests.test_hmm.TestGaussianHMMWithSphericalCovars) ... ok
test_fit_with_priors (sklearn.tests.test_hmm.TestGaussianHMMWithSphericalCovars) ... ok
test_fit_works_on_sequences_of_different_length (sklearn.tests.test_hmm.TestGaussianHMMWithSphericalCovars) ... ok
test_sample (sklearn.tests.test_hmm.TestGaussianHMMWithSphericalCovars) ... ok
test_score_samples_and_decode (sklearn.tests.test_hmm.TestGaussianHMMWithSphericalCovars) ... ok
test_bad_covariance_type (sklearn.tests.test_hmm.TestGaussianHMMWithTiedCovars) ... ok
test_fit (sklearn.tests.test_hmm.TestGaussianHMMWithTiedCovars) ... ok
test_fit_non_ergodic_transmat (sklearn.tests.test_hmm.TestGaussianHMMWithTiedCovars) ... ok
test_fit_with_length_one_signal (sklearn.tests.test_hmm.TestGaussianHMMWithTiedCovars) ... ok
test_fit_with_priors (sklearn.tests.test_hmm.TestGaussianHMMWithTiedCovars) ... ok
test_fit_works_on_sequences_of_different_length (sklearn.tests.test_hmm.TestGaussianHMMWithTiedCovars) ... ok
test_sample (sklearn.tests.test_hmm.TestGaussianHMMWithTiedCovars) ... ok
test_score_samples_and_decode (sklearn.tests.test_hmm.TestGaussianHMMWithTiedCovars) ... ok
sklearn.tests.test_hmm.test_normalize_1D ... ok
sklearn.tests.test_hmm.test_normalize_3D ... ok
sklearn.tests.test_init.test_import_skl ... ok
sklearn.tests.test_isotonic.test_permutation_invariance ... ok
sklearn.tests.test_isotonic.test_check_increasing_up ... ok
sklearn.tests.test_isotonic.test_check_increasing_up_extreme ... ok
sklearn.tests.test_isotonic.test_check_increasing_down ... ok
sklearn.tests.test_isotonic.test_check_increasing_down_extreme ... ok
sklearn.tests.test_isotonic.test_check_ci_warn ... ok
sklearn.tests.test_isotonic.test_isotonic_regression ... ok
sklearn.tests.test_isotonic.test_isotonic_regression_ties_min ... ok
sklearn.tests.test_isotonic.test_isotonic_regression_ties_max ... ok
Test isotonic regression fit, transform  and fit_transform ... ok
sklearn.tests.test_isotonic.test_isotonic_regression_reversed ... ok
sklearn.tests.test_isotonic.test_isotonic_regression_auto_decreasing ... ok
sklearn.tests.test_isotonic.test_isotonic_regression_auto_increasing ... ok
sklearn.tests.test_isotonic.test_assert_raises_exceptions ... ok
sklearn.tests.test_isotonic.test_isotonic_sample_weight_parameter_default_value ... ok
sklearn.tests.test_isotonic.test_isotonic_min_max_boundaries ... ok
sklearn.tests.test_isotonic.test_isotonic_sample_weight ... ok
sklearn.tests.test_isotonic.test_isotonic_regression_oob_raise ... ok
sklearn.tests.test_isotonic.test_isotonic_regression_oob_clip ... ok
sklearn.tests.test_isotonic.test_isotonic_regression_oob_nan ... ok
sklearn.tests.test_isotonic.test_isotonic_regression_oob_bad ... ok
sklearn.tests.test_isotonic.test_isotonic_regression_oob_bad_after ... ok
sklearn.tests.test_isotonic.test_isotonic_regression_pickle ... ok
sklearn.tests.test_isotonic.test_isotonic_duplicate_min_entry ... ok
sklearn.tests.test_isotonic.test_isotonic_zero_weight_loop ... ok
sklearn.tests.test_kernel_approximation.test_additive_chi2_sampler ... ok
sklearn.tests.test_kernel_approximation.test_skewed_chi2_sampler ... ok
sklearn.tests.test_kernel_approximation.test_rbf_sampler ... ok
sklearn.tests.test_kernel_approximation.test_input_validation ... /root/.local/lib/python2.7/site-packages/sklearn/utils/extmath.py:105: NonBLASDotWarning: Data must be of same type. Supported types are 32 and 64 bit float. Falling back to np.dot.
  'Falling back to np.dot.', NonBLASDotWarning)
ok
sklearn.tests.test_kernel_approximation.test_nystroem_approximation ... ok
sklearn.tests.test_kernel_approximation.test_nystroem_singular_kernel ... ok
sklearn.tests.test_kernel_approximation.test_nystroem_poly_kernel_params ... ok
sklearn.tests.test_kernel_approximation.test_nystroem_callable ... ok
sklearn.tests.test_kernel_ridge.test_kernel_ridge ... ok
sklearn.tests.test_kernel_ridge.test_kernel_ridge_csr ... ok
sklearn.tests.test_kernel_ridge.test_kernel_ridge_csc ... ok
sklearn.tests.test_kernel_ridge.test_kernel_ridge_singular_kernel ... ok
sklearn.tests.test_kernel_ridge.test_kernel_ridge_precomputed ... ok
sklearn.tests.test_kernel_ridge.test_kernel_ridge_precomputed_kernel_unchanged ... ok
sklearn.tests.test_kernel_ridge.test_kernel_ridge_sample_weights ... ok
sklearn.tests.test_kernel_ridge.test_kernel_ridge_multi_output ... ok
sklearn.tests.test_lda.test_lda_predict ... /root/.local/lib/python2.7/site-packages/sklearn/utils/extmath.py:105: NonBLASDotWarning: Data must be of same type. Supported types are 32 and 64 bit float. Falling back to np.dot.
  'Falling back to np.dot.', NonBLASDotWarning)
ok
sklearn.tests.test_lda.test_lda_coefs ... ok
sklearn.tests.test_lda.test_lda_transform ... ok
sklearn.tests.test_lda.test_lda_orthogonality ... ok
sklearn.tests.test_lda.test_lda_scaling ... ok
sklearn.tests.test_learning_curve.test_learning_curve ... ok
sklearn.tests.test_learning_curve.test_learning_curve_unsupervised ... ok
sklearn.tests.test_learning_curve.test_learning_curve_verbose ... [Parallel(n_jobs=1)]: Done   1 jobs       | elapsed:    0.0s
[Parallel(n_jobs=1)]: Done  15 out of  15 | elapsed:    0.0s finished
ok
sklearn.tests.test_learning_curve.test_learning_curve_incremental_learning_not_possible ... ok
sklearn.tests.test_learning_curve.test_learning_curve_incremental_learning ... ok
sklearn.tests.test_learning_curve.test_learning_curve_incremental_learning_unsupervised ... ok
sklearn.tests.test_learning_curve.test_learning_curve_batch_and_incremental_learning_are_equal ... ok
sklearn.tests.test_learning_curve.test_learning_curve_n_sample_range_out_of_bounds ... ok
sklearn.tests.test_learning_curve.test_learning_curve_remove_duplicate_sample_sizes ... ok
sklearn.tests.test_learning_curve.test_learning_curve_with_boolean_indices ... /root/.local/lib/python2.7/site-packages/sklearn/cross_validation.py:69: DeprecationWarning: The indices parameter is deprecated and will be removed (assumed True) in 0.17
  stacklevel=1)
ok
sklearn.tests.test_learning_curve.test_validation_curve ... ok
sklearn.tests.test_metaestimators.test_metaestimator_delegation ... ok
sklearn.tests.test_multiclass.test_ovr_exceptions ... ok
sklearn.tests.test_multiclass.test_ovr_fit_predict ... ok
sklearn.tests.test_multiclass.test_ovr_fit_predict_sparse ... ok
sklearn.tests.test_multiclass.test_ovr_always_present ... ok
sklearn.tests.test_multiclass.test_ovr_multiclass ... /root/.local/lib/python2.7/site-packages/sklearn/utils/extmath.py:105: NonBLASDotWarning: Data must be of same type. Supported types are 32 and 64 bit float. Falling back to np.dot.
  'Falling back to np.dot.', NonBLASDotWarning)
ok
sklearn.tests.test_multiclass.test_ovr_binary ... /usr/lib/python2.7/dist-packages/scipy/sparse/compressed.py:486: SparseEfficiencyWarning: changing the sparsity structure of a csc_matrix is expensive. lil_matrix is more efficient.
  SparseEfficiencyWarning)
/usr/lib/python2.7/dist-packages/scipy/sparse/compressed.py:122: UserWarning: indices array has non-integer dtype (float64)
  % self.indices.dtype.name )
ok
sklearn.tests.test_multiclass.test_ovr_fit_predict_svc ... ok
sklearn.tests.test_multiclass.test_ovr_multilabel_dataset ... ok
sklearn.tests.test_multiclass.test_ovr_multilabel_predict_proba ... ok
sklearn.tests.test_multiclass.test_deprecated ... ok
sklearn.tests.test_multiclass.test_ovr_multilabel ... ok
sklearn.tests.test_multiclass.test_ovr_single_label_predict_proba ... ok
sklearn.tests.test_multiclass.test_ovr_multilabel_decision_function ... ok
sklearn.tests.test_multiclass.test_ovr_single_label_decision_function ... /usr/lib/python2.7/dist-packages/scipy/sparse/compressed.py:486: SparseEfficiencyWarning: changing the sparsity structure of a csc_matrix is expensive. lil_matrix is more efficient.
  SparseEfficiencyWarning)
ok
sklearn.tests.test_multiclass.test_ovr_gridsearch ... ok
sklearn.tests.test_multiclass.test_ovr_pipeline ... ok
sklearn.tests.test_multiclass.test_ovr_coef_ ... ok
sklearn.tests.test_multiclass.test_ovr_coef_exceptions ... ok
sklearn.tests.test_multiclass.test_ovo_exceptions ... ok
sklearn.tests.test_multiclass.test_ovo_fit_on_list ... ok
sklearn.tests.test_multiclass.test_ovo_fit_predict ... ok
sklearn.tests.test_multiclass.test_ovo_decision_function ... ok
sklearn.tests.test_multiclass.test_ovo_gridsearch ... ok
sklearn.tests.test_multiclass.test_ovo_ties ... ok
sklearn.tests.test_multiclass.test_ovo_ties2 ... ok
sklearn.tests.test_multiclass.test_ovo_string_y ... ok
sklearn.tests.test_multiclass.test_ecoc_exceptions ... ok
sklearn.tests.test_multiclass.test_ecoc_fit_predict ... ok
sklearn.tests.test_multiclass.test_ecoc_gridsearch ... ok
sklearn.tests.test_naive_bayes.test_gnb ... ok
sklearn.tests.test_naive_bayes.test_gnb_prior ... ok
sklearn.tests.test_naive_bayes.test_discrete_prior ... ok
sklearn.tests.test_naive_bayes.test_mnnb ... /root/.local/lib/python2.7/site-packages/sklearn/naive_bayes.py:369: RuntimeWarning: divide by zero encountered in log
  self.class_log_prior_ = (np.log(self.class_count_)
ok
sklearn.tests.test_naive_bayes.test_discretenb_partial_fit(<class 'sklearn.naive_bayes.MultinomialNB'>,) ... ok
sklearn.tests.test_naive_bayes.test_discretenb_partial_fit(<class 'sklearn.naive_bayes.BernoulliNB'>,) ... ok
sklearn.tests.test_naive_bayes.test_gnb_partial_fit ... ok
sklearn.tests.test_naive_bayes.test_discretenb_pickle ... ok
sklearn.tests.test_naive_bayes.test_input_check_fit ... ok
sklearn.tests.test_naive_bayes.test_input_check_partial_fit ... ok
sklearn.tests.test_naive_bayes.test_discretenb_predict_proba ... ok
sklearn.tests.test_naive_bayes.test_discretenb_uniform_prior ... ok
sklearn.tests.test_naive_bayes.test_discretenb_provide_prior ... ok
sklearn.tests.test_naive_bayes.test_discretenb_provide_prior_with_partial_fit ... ok
sklearn.tests.test_naive_bayes.test_sample_weight_multiclass(<class 'sklearn.naive_bayes.BernoulliNB'>,) ... ok
sklearn.tests.test_naive_bayes.test_sample_weight_multiclass(<class 'sklearn.naive_bayes.MultinomialNB'>,) ... ok
sklearn.tests.test_naive_bayes.test_sample_weight_mnb ... ok
sklearn.tests.test_naive_bayes.test_coef_intercept_shape ... ok
sklearn.tests.test_naive_bayes.test_check_accuracy_on_digits ... ok
sklearn.tests.test_naive_bayes.test_feature_log_prob_bnb ... ok
sklearn.tests.test_naive_bayes.test_bnb ... ok
sklearn.tests.test_pipeline.test_pipeline_init ... ok
sklearn.tests.test_pipeline.test_pipeline_methods_anova ... ok
sklearn.tests.test_pipeline.test_pipeline_fit_params ... ok
sklearn.tests.test_pipeline.test_pipeline_methods_pca_svm ... ok
sklearn.tests.test_pipeline.test_pipeline_methods_preprocessing_svm ... ok
sklearn.tests.test_pipeline.test_feature_union ... ok
sklearn.tests.test_pipeline.test_make_union ... ok
sklearn.tests.test_pipeline.test_pipeline_transform ... ok
sklearn.tests.test_pipeline.test_pipeline_fit_transform ... ok
sklearn.tests.test_pipeline.test_make_pipeline ... ok
sklearn.tests.test_pipeline.test_feature_union_weights ... ok
sklearn.tests.test_pipeline.test_feature_union_parallel ... ok
sklearn.tests.test_pipeline.test_feature_union_feature_names ... ok
sklearn.tests.test_pipeline.test_classes_property ... ok
sklearn.tests.test_qda.test_qda ... ok
sklearn.tests.test_qda.test_qda_priors ... ok
sklearn.tests.test_qda.test_qda_store_covariances ... ok
sklearn.tests.test_qda.test_qda_regularization ... ok
sklearn.tests.test_random_projection.test_invalid_jl_domain ... ok
sklearn.tests.test_random_projection.test_input_size_jl_min_dim ... ok
sklearn.tests.test_random_projection.test_basic_property_of_random_matrix ... ok
sklearn.tests.test_random_projection.test_gaussian_random_matrix ... ok
sklearn.tests.test_random_projection.test_sparse_random_matrix ... ok
sklearn.tests.test_random_projection.test_sparse_random_projection_transformer_invalid_density ... ok
sklearn.tests.test_random_projection.test_random_projection_transformer_invalid_input ... ok
sklearn.tests.test_random_projection.test_try_to_transform_before_fit ... ok
sklearn.tests.test_random_projection.test_too_many_samples_to_find_a_safe_embedding ... ok
sklearn.tests.test_random_projection.test_random_projection_embedding_quality ... ok
sklearn.tests.test_random_projection.test_SparseRandomProjection_output_representation ... ok
sklearn.tests.test_random_projection.test_correct_RandomProjection_dimensions_embedding ... ok
sklearn.tests.test_random_projection.test_warning_n_components_greater_than_n_features ... ok
sklearn.tests.test_random_projection.test_works_with_sparse_data ... ok

----------------------------------------------------------------------
Ran 4092 tests in 106.297s

OK (SKIP=19)
root@tools:~/.local/lib/python2.7/site-packages#
root@tools:~/.local/lib/python2.7/site-packages#
